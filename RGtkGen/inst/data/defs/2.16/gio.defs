;; -*- scheme -*-

(include "../2.14/gio.defs")

;; For GIO 2.18

(define-object Emblem
  (in-module "gio")
  (parent "GObject")
  (c-name "GEmblem")
  (gtype-id "G_TYPE_EMBLEM")
  (since "2.18.0")
)

(define-object EmblemedIcon
  (in-module "gio")
  (parent "GObject")
  (c-name "GEmblemedIcon")
  (gtype-id "G_TYPE_EMBLEMED_ICON")
  (since "2.18.0")
)

(define-enum EmblemOrigin
  (in-module "gio")
  (c-name "GEmblemOrigin")
  (gtype-id "G_TYPE_EMBLEM_ORIGIN")
  (values
    '("unknown" "G_EMBLEM_ORIGIN_UNKNOWN")
    '("device" "G_EMBLEM_ORIGIN_DEVICE")
    '("livemetadata" "G_EMBLEM_ORIGIN_LIVEMETADATA")
    '("tag" "G_EMBLEM_ORIGIN_TAG")
  )
  (since "2.18.0")
)

(define-function content_type_from_mime_type
  (in-module "gio")
  (c-name "g_content_type_from_mime_type")
  (return-type "char*")
  (parameters
    '("const-char*" "mime_type")
  )
  (since "2.18.0")
)

(define-function content_type_guess_for_tree
  (in-module "gio")
  (c-name "g_content_type_guess_for_tree")
  (return-type "char**")
  (parameters
    '("GFile*" "root")
  )
  (since "2.18.0")
)

;; From gemblemedicon.h

(define-function g_emblemed_icon_get_type
  (in-module "gio")
  (c-name "g_emblemed_icon_get_type")
  (return-type "GType")
  (since "2.18.0")
)

(define-function g_emblemed_icon_new
  (in-module "gio")
  (c-name "g_emblemed_icon_new")
  (is-constructor-of "GEmblemedIcon")
  (return-type "GIcon*")
  (parameters
    '("GIcon*" "icon")
    '("GEmblem*" "emblem")
  )
  (since "2.18.0")
)

(define-method get_icon
  (of-object "GEmblemedIcon")
  (c-name "g_emblemed_icon_get_icon")
  (return-type "GIcon*")
  (since "2.18.0")
)

(define-method get_emblems
  (of-object "GEmblemedIcon")
  (c-name "g_emblemed_icon_get_emblems")
  (return-type "GList[GEmblem]")
  (since "2.18.0")
)

(define-method add_emblem
  (of-object "GEmblemedIcon")
  (c-name "g_emblemed_icon_add_emblem")
  (return-type "none")
  (parameters
    '("GEmblem*" "emblem")
  )
  (since "2.18.0")
)



;; From gemblem.h

(define-function g_emblem_get_type
  (in-module "gio")
  (c-name "g_emblem_get_type")
  (return-type "GType")
  (since "2.18.0")
)

(define-function g_emblem_new
  (in-module "gio")
  (c-name "g_emblem_new")
  (is-constructor-of "GEmblem")
  (return-type "GEmblem*")
  (properties
    '("icon")
    '("origin" (optional))
  )
  (since "2.18.0")
)

(define-function emblem_new_with_origin
  (in-module "gio")
  (c-name "g_emblem_new_with_origin")
  (return-type "GEmblem*")
  (is-constructor-of "GEmblem")
  (parameters
    '("GIcon*" "icon")
    '("GEmblemOrigin" "origin")
  )
  (since "2.18.0")
)

(define-method get_icon
  (of-object "GEmblem")
  (c-name "g_emblem_get_icon")
  (return-type "GIcon*")
  (since "2.18.0")
)

(define-method get_origin
  (of-object "GEmblem")
  (c-name "g_emblem_get_origin")
  (return-type "GEmblemOrigin")
  (since "2.18.0")
)

(define-method query_file_type
  (of-object "GFile")
  (c-name "g_file_query_file_type")
  (return-type "GFileType")
  (parameters
    '("GFileQueryInfoFlags" "flags")
    '("GCancellable*" "cancellable" (null-ok) (default "NULL"))
  )
  (since "2.18.0")
)

(define-method make_directory_with_parents
  (of-object "GFile")
  (c-name "g_file_make_directory_with_parents")
  (return-type "gboolean")
  (unblock-threads #t)
  (parameters
    '("GCancellable*" "cancellable" (null-ok) (default "NULL"))
    '("GError**" "error" (out))
  )
  (since "2.18.0")
)

(define-method monitor
  (of-object "GFile")
  (c-name "g_file_monitor")
  (return-type "GFileMonitor*")
  (parameters
    '("GFileMonitorFlags" "flags" (default "G_FILE_MONITOR_NONE"))
    '("GCancellable*" "cancellable" (null-ok) (default "NULL"))
    '("GError**" "error" (out))
  )
  (since "2.18.0")
)

(define-method get_data_size
  (of-object "GMemoryOutputStream")
  (c-name "g_memory_output_stream_get_data_size")
  (return-type "gsize")
  (since "2.18.0")
)

(define-method guess_content_type
  (of-object "GMount")
  (c-name "g_mount_guess_content_type")
  (return-type "none")
  (parameters
    '("gboolean" "force_rescan")
    '("GCancellable*" "cancellable" (null-ok) (default "NULL"))
    '("GAsyncReadyCallback" "callback")
    '("gpointer" "user_data" (null-ok) (default "NULL"))
  )
  (since "2.18.0")
)

(define-method guess_content_type_finish
  (of-object "GMount")
  (c-name "g_mount_guess_content_type_finish")
  (return-type "gchar**")
  (parameters
    '("GAsyncResult*" "result")
    '("GError**" "error" (out))
  )
  (since "2.18.0")
)

(define-method guess_content_type_sync
  (of-object "GMount")
  (c-name "g_mount_guess_content_type_sync")
  (return-type "gchar**")
  (parameters
    '("gboolean" "force_rescan")
    '("GCancellable*" "cancellable" (null-ok) (default "NULL"))
    '("GError**" "error" (out))
  )
  (since "2.18.0")
)

(define-virtual guess_content_type
  (of-object "GMount")
  (return-type "none")
  (parameters
   '("gboolean" "force_rescan")
   '("GCancellable*" "cancellable" (null-ok) (default "NULL"))
   '("GAsyncReadyCallback" "callback")
   '("gpointer" "user_data" (null-ok) (default "NULL"))
   )
  (since "2.18.0")
  )

(define-virtual guess_content_type_finish
  (of-object "GMount")
  (return-type "gchar**")
  (parameters
   '("GAsyncResult*" "result")
   '("GError**" "error" (out))
   )
  (since "2.18.0")
  )

(define-virtual guess_content_type_sync
  (of-object "GMount")
  (return-type "gchar**")
  (parameters
   '("gboolean" "force_rescan")
   '("GCancellable*" "cancellable" (null-ok) (default "NULL"))
   '("GError**" "error" (out))
   )
  (since "2.18.0")
  )

(define-method prepend_name
  (of-object "GThemedIcon")
  (c-name "g_themed_icon_prepend_name")
  (return-type "none")
  (parameters
    '("const-char*" "iconname")
  )
  (since "2.18.0")
)

(define-method get_identifier
  (of-object "GVolume")
  (c-name "g_volume_get_identifier")
  (return-type "char*")
  (parameters
    '("const-char*" "kind")
  )
  (since "2.18.0")
)

(define-method enumerate_identifiers
  (of-object "GVolume")
  (c-name "g_volume_enumerate_identifiers")
  (return-type "char**")
  (since "2.18.0")
)

(define-method get_activation_root
  (of-object "GVolume")
  (c-name "g_volume_get_activation_root")
  (return-type "GFile*")
  (since "2.18.0")
)

(define-virtual get_identifier
  (of-object "GVolume")
  (return-type "char*")
  (parameters
   '("const-char*" "kind")
   )
  (since "2.18.0")
  )

(define-virtual enumerate_identifiers
  (of-object "GVolume")
  (return-type "char**")
  (since "2.18.0")
  )

(define-virtual get_activation_root
  (of-object "GVolume")
  (return-type "GFile*")
  (since "2.18.0")
  )

(define-method get_container
  (of-object "GFileEnumerator")
  (c-name "g_file_enumerator_get_container")
  (return-type "GFile*")
  (since "2.18.0")
)
