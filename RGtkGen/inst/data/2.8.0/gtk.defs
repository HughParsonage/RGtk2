(include "gtk-types.defs")
(include "gtk-macros.defs")
(include "gtk-userfuncs.defs")

(define-function gtk_about_dialog_get_type
  (c-name "gtk_about_dialog_get_type")
  (return-type "GType")
)

(define-function gtk_about_dialog_new
  (is-constructor-of "GtkAboutDialog")
  (c-name "gtk_about_dialog_new")
  (caller-owns-return #t)
  (return-type "GtkWidget*")
)

(define-method get_name
  (of-object "GtkAboutDialog")
  (c-name "gtk_about_dialog_get_name")
  (return-type "const-gchar*")
)

(define-method set_name
  (of-object "GtkAboutDialog")
  (c-name "gtk_about_dialog_set_name")
  (return-type "none")
  (parameters
    '("const-gchar*" "name" (in) (null-ok))
  )
)

(define-method get_version
  (of-object "GtkAboutDialog")
  (c-name "gtk_about_dialog_get_version")
  (return-type "const-gchar*")
)

(define-method set_version
  (of-object "GtkAboutDialog")
  (c-name "gtk_about_dialog_set_version")
  (return-type "none")
  (parameters
    '("const-gchar*" "version" (in) (null-ok))
  )
)

(define-method get_copyright
  (of-object "GtkAboutDialog")
  (c-name "gtk_about_dialog_get_copyright")
  (return-type "const-gchar*")
)

(define-method set_copyright
  (of-object "GtkAboutDialog")
  (c-name "gtk_about_dialog_set_copyright")
  (return-type "none")
  (parameters
    '("const-gchar*" "copyright" (in) (null-ok))
  )
)

(define-method get_comments
  (of-object "GtkAboutDialog")
  (c-name "gtk_about_dialog_get_comments")
  (return-type "const-gchar*")
)

(define-method set_comments
  (of-object "GtkAboutDialog")
  (c-name "gtk_about_dialog_set_comments")
  (return-type "none")
  (parameters
    '("const-gchar*" "comments" (in) (null-ok))
  )
)

(define-method get_license
  (of-object "GtkAboutDialog")
  (c-name "gtk_about_dialog_get_license")
  (return-type "const-gchar*")
)

(define-method set_license
  (of-object "GtkAboutDialog")
  (c-name "gtk_about_dialog_set_license")
  (return-type "none")
  (parameters
    '("const-gchar*" "license" (in) (null-ok))
  )
)

(define-method get_wrap_license
  (of-object "GtkAboutDialog")
  (c-name "gtk_about_dialog_get_wrap_license")
  (return-type "gboolean")
)

(define-method set_wrap_license
  (of-object "GtkAboutDialog")
  (c-name "gtk_about_dialog_set_wrap_license")
  (return-type "none")
  (parameters
    '("gboolean" "wrap_license" (in))
  )
)

(define-method get_website
  (of-object "GtkAboutDialog")
  (c-name "gtk_about_dialog_get_website")
  (return-type "const-gchar*")
)

(define-method set_website
  (of-object "GtkAboutDialog")
  (c-name "gtk_about_dialog_set_website")
  (return-type "none")
  (parameters
    '("const-gchar*" "website" (in) (null-ok))
  )
)

(define-method get_website_label
  (of-object "GtkAboutDialog")
  (c-name "gtk_about_dialog_get_website_label")
  (return-type "const-gchar*")
)

(define-method set_website_label
  (of-object "GtkAboutDialog")
  (c-name "gtk_about_dialog_set_website_label")
  (return-type "none")
  (parameters
    '("const-gchar*" "website_label" (in) (null-ok))
  )
)

(define-method get_authors
  (of-object "GtkAboutDialog")
  (c-name "gtk_about_dialog_get_authors")
  (return-type "const-gchar**")
)

(define-method set_authors
  (of-object "GtkAboutDialog")
  (c-name "gtk_about_dialog_set_authors")
  (return-type "none")
  (parameters
    '("const-gchar**" "authors" (in))
  )
)

(define-method get_documenters
  (of-object "GtkAboutDialog")
  (c-name "gtk_about_dialog_get_documenters")
  (return-type "const-gchar**")
)

(define-method set_documenters
  (of-object "GtkAboutDialog")
  (c-name "gtk_about_dialog_set_documenters")
  (return-type "none")
  (parameters
    '("const-gchar**" "documenters" (in))
  )
)

(define-method get_artists
  (of-object "GtkAboutDialog")
  (c-name "gtk_about_dialog_get_artists")
  (return-type "const-gchar**")
)

(define-method set_artists
  (of-object "GtkAboutDialog")
  (c-name "gtk_about_dialog_set_artists")
  (return-type "none")
  (parameters
    '("const-gchar**" "artists" (in))
  )
)

(define-method get_translator_credits
  (of-object "GtkAboutDialog")
  (c-name "gtk_about_dialog_get_translator_credits")
  (return-type "const-gchar*")
)

(define-method set_translator_credits
  (of-object "GtkAboutDialog")
  (c-name "gtk_about_dialog_set_translator_credits")
  (return-type "none")
  (parameters
    '("const-gchar*" "translator_credits" (in) (null-ok))
  )
)

(define-method get_logo
  (of-object "GtkAboutDialog")
  (c-name "gtk_about_dialog_get_logo")
  (return-type "GdkPixbuf*")
)

(define-method set_logo
  (of-object "GtkAboutDialog")
  (c-name "gtk_about_dialog_set_logo")
  (return-type "none")
  (parameters
    '("GdkPixbuf*" "logo" (in) (null-ok))
  )
)

(define-method get_logo_icon_name
  (of-object "GtkAboutDialog")
  (c-name "gtk_about_dialog_get_logo_icon_name")
  (return-type "const-gchar*")
)

(define-method set_logo_icon_name
  (of-object "GtkAboutDialog")
  (c-name "gtk_about_dialog_set_logo_icon_name")
  (return-type "none")
  (parameters
    '("const-gchar*" "icon_name" (in) (null-ok))
  )
)

(define-function about_dialog_set_email_hook
  (c-name "gtk_about_dialog_set_email_hook")
  (return-type "GtkAboutDialogActivateLinkFunc")
  (parameters
    '("GtkAboutDialogActivateLinkFunc" "func" (in))
    '("gpointer" "data" (in) (null-ok))
    '("GDestroyNotify" "destroy" (in))
  )
)

(define-function about_dialog_set_url_hook
  (c-name "gtk_about_dialog_set_url_hook")
  (return-type "GtkAboutDialogActivateLinkFunc")
  (parameters
    '("GtkAboutDialogActivateLinkFunc" "func" (in))
    '("gpointer" "data" (in) (null-ok))
    '("GDestroyNotify" "destroy" (in))
  )
)

(define-function show_about_dialog
  (c-name "gtk_show_about_dialog")
  (return-type "none")
  (parameters
    '("GtkWindow*" "parent" (in))
    '("const-gchar*" "first_property_name" (in))
  )
  (varargs #t)
)

(define-function gtk_accel_group_get_type
  (c-name "gtk_accel_group_get_type")
  (return-type "GType")
)

(define-function gtk_accel_group_new
  (is-constructor-of "GtkAccelGroup")
  (c-name "gtk_accel_group_new")
  (caller-owns-return #t)
  (return-type "GtkAccelGroup*")
)

(define-method lock
  (of-object "GtkAccelGroup")
  (c-name "gtk_accel_group_lock")
  (return-type "none")
)

(define-method unlock
  (of-object "GtkAccelGroup")
  (c-name "gtk_accel_group_unlock")
  (return-type "none")
)

(define-method connect
  (of-object "GtkAccelGroup")
  (c-name "gtk_accel_group_connect")
  (return-type "none")
  (parameters
    '("guint" "accel_key" (in))
    '("GdkModifierType" "accel_mods" (in))
    '("GtkAccelFlags" "accel_flags" (in))
    '("GClosure*" "closure" (in))
  )
)

(define-method connect_by_path
  (of-object "GtkAccelGroup")
  (c-name "gtk_accel_group_connect_by_path")
  (return-type "none")
  (parameters
    '("const-gchar*" "accel_path" (in))
    '("GClosure*" "closure" (in))
  )
)

(define-method disconnect
  (of-object "GtkAccelGroup")
  (c-name "gtk_accel_group_disconnect")
  (return-type "gboolean")
  (parameters
    '("GClosure*" "closure" (in))
  )
)

(define-method disconnect_key
  (of-object "GtkAccelGroup")
  (c-name "gtk_accel_group_disconnect_key")
  (return-type "gboolean")
  (parameters
    '("guint" "accel_key" (in))
    '("GdkModifierType" "accel_mods" (in))
  )
)

(define-method activate
  (of-object "GtkAccelGroup")
  (c-name "gtk_accel_group_activate")
  (return-type "gboolean")
  (parameters
    '("GQuark" "accel_quark" (in))
    '("GObject*" "acceleratable" (in))
    '("guint" "accel_key" (in))
    '("GdkModifierType" "accel_mods" (in))
  )
)

(define-function accel_groups_activate
  (c-name "gtk_accel_groups_activate")
  (return-type "gboolean")
  (parameters
    '("GObject*" "object" (in))
    '("guint" "accel_key" (in))
    '("GdkModifierType" "accel_mods" (in))
  )
)

(define-function accel_groups_from_object
  (c-name "gtk_accel_groups_from_object")
  (caller-owns-return #t)
  (return-type "GSList[GtkAccelGroup]")
  (parameters
    '("GObject*" "object" (in))
  )
)

(define-method find
  (of-object "GtkAccelGroup")
  (c-name "gtk_accel_group_find")
  (return-type "GtkAccelKey*")
  (parameters
    '("GtkAccelGroupFindFunc" "find_func" (in))
    '("gpointer" "data" (in) (null-ok))
  )
)

(define-function accel_group_from_accel_closure
  (c-name "gtk_accel_group_from_accel_closure")
  (return-type "GtkAccelGroup*")
  (parameters
    '("GClosure*" "closure" (in))
  )
)

(define-function accelerator_valid
  (c-name "gtk_accelerator_valid")
  (return-type "gboolean")
  (parameters
    '("guint" "keyval" (in))
    '("GdkModifierType" "modifiers" (in))
  )
)

(define-function accelerator_parse
  (c-name "gtk_accelerator_parse")
  (return-type "none")
  (parameters
    '("const-gchar*" "accelerator" (in))
    '("guint*" "accelerator_key" (out))
    '("GdkModifierType*" "accelerator_mods" (out))
  )
)

(define-function accelerator_name
  (c-name "gtk_accelerator_name")
  (caller-owns-return #t)
  (return-type "gchar*")
  (parameters
    '("guint" "accelerator_key" (in))
    '("GdkModifierType" "accelerator_mods" (in))
  )
)

(define-function accelerator_set_default_mod_mask
  (c-name "gtk_accelerator_set_default_mod_mask")
  (return-type "none")
  (parameters
    '("GdkModifierType" "default_mod_mask" (in))
  )
)

(define-function accelerator_get_default_mod_mask
  (c-name "gtk_accelerator_get_default_mod_mask")
  (return-type "guint")
)

(define-method query
  (of-object "GtkAccelGroup")
  (c-name "gtk_accel_group_query")
  (return-type "GtkAccelGroupEntry[]")
  (parameters
    '("guint" "accel_key" (in))
    '("GdkModifierType" "accel_mods" (in))
    '("guint*" "n_entries" (out))
  )
)

(define-function accelerator_get_label
  (c-name "gtk_accelerator_get_label")
  (caller-owns-return #t)
  (return-type "gchar*")
  (parameters
    '("guint" "accelerator_key" (in))
    '("GdkModifierType" "accelerator_mods" (in))
  )
)

(define-function gtk_accel_label_get_type
  (c-name "gtk_accel_label_get_type")
  (return-type "GType")
)

(define-function gtk_accel_label_new
  (is-constructor-of "GtkAccelLabel")
  (c-name "gtk_accel_label_new")
  (caller-owns-return #t)
  (return-type "GtkWidget*")
  (properties
    '("label" (argname "string"))
  )
)

; no longer exists
;(define-method accelerator_width
;  (of-object "GtkAccelLabel")
;  (c-name "gtk_accel_label_accelerator_width")
;  (return-type "guint")
;  (deprecated "use GtkAccelLabel.get_accel_width")
;)

(define-method get_accel_widget
  (of-object "GtkAccelLabel")
  (c-name "gtk_accel_label_get_accel_widget")
  (return-type "GtkWidget*")
)

(define-method get_accel_width
  (of-object "GtkAccelLabel")
  (c-name "gtk_accel_label_get_accel_width")
  (return-type "guint")
)

(define-method set_accel_widget
  (of-object "GtkAccelLabel")
  (c-name "gtk_accel_label_set_accel_widget")
  (return-type "none")
  (parameters
    '("GtkWidget*" "accel_widget" (in))
  )
)

(define-method set_accel_closure
  (of-object "GtkAccelLabel")
  (c-name "gtk_accel_label_set_accel_closure")
  (return-type "none")
  (parameters
    '("GClosure*" "accel_closure" (in))
  )
)

(define-method refetch
  (of-object "GtkAccelLabel")
  (c-name "gtk_accel_label_refetch")
  (return-type "gboolean")
)

(define-function accel_map_add_entry
  (c-name "gtk_accel_map_add_entry")
  (return-type "none")
  (parameters
    '("const-gchar*" "accel_path" (in))
    '("guint" "accel_key" (in))
    '("GdkModifierType" "accel_mods" (in))
  )
)

(define-function accel_map_lookup_entry
  (c-name "gtk_accel_map_lookup_entry")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "accel_path" (in))
    '("GtkAccelKey*" "key" (out))
  )
)

(define-function accel_map_change_entry
  (c-name "gtk_accel_map_change_entry")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "accel_path" (in))
    '("guint" "accel_key" (in))
    '("GdkModifierType" "accel_mods" (in))
    '("gboolean" "replace" (in))
  )
)

(define-function accel_map_load
  (c-name "gtk_accel_map_load")
  (return-type "none")
  (parameters
    '("const-gchar*" "file_name" (in))
  )
)

(define-function accel_map_save
  (c-name "gtk_accel_map_save")
  (return-type "none")
  (parameters
    '("const-gchar*" "file_name" (in))
  )
)

(define-function accel_map_foreach
  (c-name "gtk_accel_map_foreach")
  (return-type "none")
  (parameters
    '("gpointer" "data" (in) (null-ok))
    '("GtkAccelMapForeach" "foreach_func" (in))
  )
)

(define-function accel_map_load_fd
  (c-name "gtk_accel_map_load_fd")
  (return-type "none")
  (parameters
    '("gint" "fd" (in))
  )
)

(define-function accel_map_load_scanner
  (c-name "gtk_accel_map_load_scanner")
  (return-type "none")
  (parameters
    '("GScanner*" "scanner" (in))
  )
)

(define-function accel_map_save_fd
  (c-name "gtk_accel_map_save_fd")
  (return-type "none")
  (parameters
    '("gint" "fd" (in))
  )
)

(define-function accel_map_lock_path
  (c-name "gtk_accel_map_lock_path")
  (return-type "none")
  (parameters
    '("const-gchar*" "accel_path" (in))
  )
)

(define-function accel_map_unlock_path
  (c-name "gtk_accel_map_unlock_path")
  (return-type "none")
  (parameters
    '("const-gchar*" "accel_path" (in))
  )
)

(define-function accel_map_add_filter
  (c-name "gtk_accel_map_add_filter")
  (return-type "none")
  (parameters
    '("const-gchar*" "filter_pattern" (in))
  )
)

(define-function accel_map_foreach_unfiltered
  (c-name "gtk_accel_map_foreach_unfiltered")
  (return-type "none")
  (parameters
    '("gpointer" "data" (in) (null-ok))
    '("GtkAccelMapForeach" "foreach_func" (in))
  )
)

(define-function accel_map_get_type
  (c-name "gtk_accel_map_get_type")
  (return-type "GType")
)

(define-function accel_map_get
  (c-name "gtk_accel_map_get")
  (return-type "GtkAccelMap*")
)

(define-function gtk_accessible_get_type
  (c-name "gtk_accessible_get_type")
  (return-type "GType")
)

(define-method connect_widget_destroyed
  (of-object "GtkAccessible")
  (c-name "gtk_accessible_connect_widget_destroyed")
  (return-type "none")
)

(define-function gtk_action_get_type
  (c-name "gtk_action_get_type")
  (return-type "GType")
)

(define-function gtk_action_new
  (is-constructor-of "GtkAction")
  (c-name "gtk_action_new")
  (caller-owns-return #t)
  (return-type "GtkAction*")
  (properties
    '("name" (argname "name"))
    '("label" (argname "label"))
    '("tooltip" (argname "tooltip"))
    '("stock_id" (argname "stock_id"))
  )
)

(define-method get_name
  (of-object "GtkAction")
  (c-name "gtk_action_get_name")
  (return-type "const-gchar*")
)

(define-method is_sensitive
  (of-object "GtkAction")
  (c-name "gtk_action_is_sensitive")
  (return-type "gboolean")
)

(define-method get_sensitive
  (of-object "GtkAction")
  (c-name "gtk_action_get_sensitive")
  (return-type "gboolean")
)

(define-method is_visible
  (of-object "GtkAction")
  (c-name "gtk_action_is_visible")
  (return-type "gboolean")
)

(define-method get_visible
  (of-object "GtkAction")
  (c-name "gtk_action_get_visible")
  (return-type "gboolean")
)

(define-method activate
  (of-object "GtkAction")
  (c-name "gtk_action_activate")
  (return-type "none")
)

(define-method create_icon
  (of-object "GtkAction")
  (c-name "gtk_action_create_icon")
  (return-type "GtkWidget*")
  (parameters
    '("GtkIconSize" "icon_size" (in))
  )
)

(define-method create_menu_item
  (of-object "GtkAction")
  (c-name "gtk_action_create_menu_item")
  (return-type "GtkWidget*")
)

(define-method create_tool_item
  (of-object "GtkAction")
  (c-name "gtk_action_create_tool_item")
  (return-type "GtkWidget*")
)

(define-method connect_proxy
  (of-object "GtkAction")
  (c-name "gtk_action_connect_proxy")
  (return-type "none")
  (parameters
    '("GtkWidget*" "proxy" (in))
  )
)

(define-method disconnect_proxy
  (of-object "GtkAction")
  (c-name "gtk_action_disconnect_proxy")
  (return-type "none")
  (parameters
    '("GtkWidget*" "proxy" (in))
  )
)

(define-method get_proxies
  (of-object "GtkAction")
  (c-name "gtk_action_get_proxies")
  (caller-owns-return #t)
  (return-type "GSList[GtkWidget]")
)

(define-method connect_accelerator
  (of-object "GtkAction")
  (c-name "gtk_action_connect_accelerator")
  (return-type "none")
)

(define-method disconnect_accelerator
  (of-object "GtkAction")
  (c-name "gtk_action_disconnect_accelerator")
  (return-type "none")
)

(define-method get_accel_path
  (of-object "GtkAction")
  (c-name "gtk_action_get_accel_path")
  (return-type "const-gchar*")
)

(define-method get_accel_closure
  (of-object "GtkAction")
  (c-name "gtk_action_get_accel_closure")
  (caller-owns-return #f)
  (return-type "GClosure*")
)

(define-method block_activate_from
  (of-object "GtkAction")
  (c-name "gtk_action_block_activate_from")
  (return-type "none")
  (parameters
    '("GtkWidget*" "proxy" (in))
  )
)

(define-method unblock_activate_from
  (of-object "GtkAction")
  (c-name "gtk_action_unblock_activate_from")
  (return-type "none")
  (parameters
    '("GtkWidget*" "proxy" (in))
  )
)

(define-method set_accel_path
  (of-object "GtkAction")
  (c-name "gtk_action_set_accel_path")
  (return-type "none")
  (parameters
    '("const-gchar*" "accel_path" (in))
  )
)

(define-method set_accel_group
  (of-object "GtkAction")
  (c-name "gtk_action_set_accel_group")
  (return-type "none")
  (parameters
    '("GtkAccelGroup*" "accel_group" (in))
  )
)

(define-method set_sensitive
  (of-object "GtkAction")
  (c-name "gtk_action_set_sensitive")
  (return-type "none")
  (parameters
    '("gboolean" "sensitive" (in))
  )
)

(define-method set_visible
  (of-object "GtkAction")
  (c-name "gtk_action_set_visible")
  (return-type "none")
  (parameters
    '("gboolean" "visible" (in))
  )
)

(define-function gtk_action_group_get_type
  (c-name "gtk_action_group_get_type")
  (return-type "GType")
)

(define-function gtk_action_group_new
  (is-constructor-of "GtkActionGroup")
  (c-name "gtk_action_group_new")
  (caller-owns-return #t)
  (return-type "GtkActionGroup*")
  (properties
    '("name" (argname "name"))
  )
)

(define-method get_name
  (of-object "GtkActionGroup")
  (c-name "gtk_action_group_get_name")
  (return-type "const-gchar*")
)

(define-method get_sensitive
  (of-object "GtkActionGroup")
  (c-name "gtk_action_group_get_sensitive")
  (return-type "gboolean")
)

(define-method set_sensitive
  (of-object "GtkActionGroup")
  (c-name "gtk_action_group_set_sensitive")
  (return-type "none")
  (parameters
    '("gboolean" "sensitive" (in))
  )
)

(define-method get_visible
  (of-object "GtkActionGroup")
  (c-name "gtk_action_group_get_visible")
  (return-type "gboolean")
)

(define-method set_visible
  (of-object "GtkActionGroup")
  (c-name "gtk_action_group_set_visible")
  (return-type "none")
  (parameters
    '("gboolean" "visible" (in))
  )
)

(define-method get_action
  (of-object "GtkActionGroup")
  (c-name "gtk_action_group_get_action")
  (return-type "GtkAction*")
  (parameters
    '("const-gchar*" "action_name" (in))
  )
)

(define-method list_actions
  (of-object "GtkActionGroup")
  (c-name "gtk_action_group_list_actions")
  (caller-owns-return #t)
  (return-type "GList[GtkAction]")
)

(define-method add_action
  (of-object "GtkActionGroup")
  (c-name "gtk_action_group_add_action")
  (return-type "none")
  (parameters
    '("GtkAction*" "action" (in))
  )
)

(define-method add_action_with_accel
  (of-object "GtkActionGroup")
  (c-name "gtk_action_group_add_action_with_accel")
  (return-type "none")
  (parameters
    '("GtkAction*" "action" (in))
    '("const-gchar*" "accelerator" (in) (null-ok))
  )
)

(define-method remove_action
  (of-object "GtkActionGroup")
  (c-name "gtk_action_group_remove_action")
  (return-type "none")
  (parameters
    '("GtkAction*" "action" (in))
  )
)

(define-method add_actions
  (of-object "GtkActionGroup")
  (c-name "gtk_action_group_add_actions")
  (return-type "none")
  (parameters
    '("GtkActionEntry[]" "entries" (in))
    '("guint" "n_entries" (in))
    '("gpointer" "user_data" (in) (null-ok))
  )
)

(define-method add_toggle_actions
  (of-object "GtkActionGroup")
  (c-name "gtk_action_group_add_toggle_actions")
  (return-type "none")
  (parameters
    '("GtkToggleActionEntry[]" "entries" (in))
    '("guint" "n_entries" (in))
    '("gpointer" "user_data" (in) (null-ok))
  )
)

(define-method add_radio_actions
  (of-object "GtkActionGroup")
  (c-name "gtk_action_group_add_radio_actions")
  (return-type "none")
  (parameters
    '("GtkRadioActionEntry[]" "entries" (in))
    '("guint" "n_entries" (in))
    '("gint" "value" (in))
    '("GCallback" "on_change" (in) (null-ok))
    '("gpointer" "user_data" (in) (null-ok))
  )
)

(define-method add_actions_full
  (of-object "GtkActionGroup")
  (c-name "gtk_action_group_add_actions_full")
  (return-type "none")
  (parameters
    '("GtkActionEntry[]" "entries" (in))
    '("guint" "n_entries" (in))
    '("gpointer" "user_data" (in) (null-ok))
    '("GDestroyNotify" "destroy" (in) (null-ok))
  )
)

(define-method add_toggle_actions_full
  (of-object "GtkActionGroup")
  (c-name "gtk_action_group_add_toggle_actions_full")
  (return-type "none")
  (parameters
    '("GtkToggleActionEntry[]" "entries" (in))
    '("guint" "n_entries" (in))
    '("gpointer" "user_data" (in) (null-ok))
    '("GDestroyNotify" "destroy" (in))
  )
)

(define-method add_radio_actions_full
  (of-object "GtkActionGroup")
  (c-name "gtk_action_group_add_radio_actions_full")
  (return-type "none")
  (parameters
    '("GtkRadioActionEntry[]" "entries" (in))
    '("guint" "n_entries" (in))
    '("gint" "value" (in))
    '("GCallback" "on_change" (in) (null-ok))
    '("gpointer" "user_data" (in) (null-ok))
    '("GDestroyNotify" "destroy" (in) (null-ok))
  )
)

(define-method set_translate_func
  (of-object "GtkActionGroup")
  (c-name "gtk_action_group_set_translate_func")
  (return-type "none")
  (parameters
    '("GtkTranslateFunc" "func" (in))
    '("gpointer" "data" (in) (null-ok))
    '("GtkDestroyNotify" "notify" (in) (null-ok))
  )
)

(define-method set_translation_domain
  (of-object "GtkActionGroup")
  (c-name "gtk_action_group_set_translation_domain")
  (return-type "none")
  (parameters
    '("const-gchar*" "domain" (in))
  )
)

(define-method translate_string
  (of-object "GtkActionGroup")
  (c-name "gtk_action_group_translate_string")
  (return-type "const-gchar*")
  (parameters
    '("const-gchar*" "string" (in))
  )
)

(define-function gtk_adjustment_get_type
  (c-name "gtk_adjustment_get_type")
  (return-type "GType")
)

(define-function gtk_adjustment_new
  (is-constructor-of "GtkAdjustment")
  (c-name "gtk_adjustment_new")
  (caller-owns-return #t)
  (return-type "GtkObject*")
  (properties
    '("value" (optional) (argname "value"))
    '("lower" (optional) (argname "lower"))
    '("upper" (optional) (argname "upper"))
    '("step_increment" (optional) (argname "step_incr"))
    '("page_increment" (optional) (argname "page_incr"))
    '("page_size" (optional) (argname "page_size"))
  )
)

(define-method changed
  (of-object "GtkAdjustment")
  (c-name "gtk_adjustment_changed")
  (return-type "none")
)

(define-method value_changed
  (of-object "GtkAdjustment")
  (c-name "gtk_adjustment_value_changed")
  (return-type "none")
)

(define-method clamp_page
  (of-object "GtkAdjustment")
  (c-name "gtk_adjustment_clamp_page")
  (return-type "none")
  (parameters
    '("gdouble" "lower" (in))
    '("gdouble" "upper" (in))
  )
)

(define-method get_value
  (of-object "GtkAdjustment")
  (c-name "gtk_adjustment_get_value")
  (return-type "gdouble")
)

(define-method set_value
  (of-object "GtkAdjustment")
  (c-name "gtk_adjustment_set_value")
  (return-type "none")
  (parameters
    '("gdouble" "value" (in))
  )
)

(define-function gtk_alignment_get_type
  (c-name "gtk_alignment_get_type")
  (return-type "GType")
)

(define-function gtk_alignment_new
  (is-constructor-of "GtkAlignment")
  (c-name "gtk_alignment_new")
  (caller-owns-return #t)
  (return-type "GtkWidget*")
  (properties
    '("xalign" (optional) (argname "xalign"))
    '("yalign" (optional) (argname "yalign"))
    '("xscale" (optional) (argname "xscale"))
    '("yscale" (optional) (argname "yscale"))
  )
)

(define-method set
  (of-object "GtkAlignment")
  (c-name "gtk_alignment_set")
  (return-type "none")
  (parameters
    '("gfloat" "xalign" (in))
    '("gfloat" "yalign" (in))
    '("gfloat" "xscale" (in))
    '("gfloat" "yscale" (in))
  )
)

(define-method set_padding
  (of-object "GtkAlignment")
  (c-name "gtk_alignment_set_padding")
  (return-type "none")
  (parameters
    '("guint" "padding_top" (in))
    '("guint" "padding_bottom" (in))
    '("guint" "padding_left" (in))
    '("guint" "padding_right" (in))
  )
)

(define-method get_padding
  (of-object "GtkAlignment")
  (c-name "gtk_alignment_get_padding")
  (return-type "none")
  (parameters
    '("guint*" "padding_top" (out))
    '("guint*" "padding_bottom" (out))
    '("guint*" "padding_left" (out))
    '("guint*" "padding_right" (out))
  )
)

(define-function gtk_arrow_get_type
  (c-name "gtk_arrow_get_type")
  (return-type "GType")
)

(define-function gtk_arrow_new
  (is-constructor-of "GtkArrow")
  (c-name "gtk_arrow_new")
  (caller-owns-return #t)
  (return-type "GtkWidget*")
  (properties
    '("arrow_type" (argname "arrow_type"))
    '("shadow_type" (argname "shadow_type"))
  )
)

(define-method set
  (of-object "GtkArrow")
  (c-name "gtk_arrow_set")
  (return-type "none")
  (parameters
    '("GtkArrowType" "arrow_type" (in))
    '("GtkShadowType" "shadow_type" (in))
  )
)

(define-function gtk_aspect_frame_get_type
  (c-name "gtk_aspect_frame_get_type")
  (return-type "GType")
)

(define-function gtk_aspect_frame_new
  (is-constructor-of "GtkAspectFrame")
  (c-name "gtk_aspect_frame_new")
  (caller-owns-return #t)
  (return-type "GtkWidget*")
  (properties
    '("label" (optional) (argname "label"))
    '("xalign" (optional) (argname "xalign"))
    '("yalign" (optional) (argname "yalign"))
    '("ratio" (optional) (argname "ratio"))
    '("obey_child" (optional) (argname "obey_child"))
  )
)

(define-method set
  (of-object "GtkAspectFrame")
  (c-name "gtk_aspect_frame_set")
  (return-type "none")
  (parameters
    '("gfloat" "xalign" (in) (default "0.0"))
    '("gfloat" "yalign" (in) (default "0.0"))
    '("gfloat" "ratio" (in) (default "1.0"))
    '("gboolean" "obey_child" (in) (default "1"))
  )
)

(define-function gtk_button_box_get_type
  (c-name "gtk_button_box_get_type")
  (return-type "GType")
)

(define-method get_layout
  (of-object "GtkButtonBox")
  (c-name "gtk_button_box_get_layout")
  (return-type "GtkButtonBoxStyle")
)

(define-method set_layout
  (of-object "GtkButtonBox")
  (c-name "gtk_button_box_set_layout")
  (return-type "none")
  (parameters
    '("GtkButtonBoxStyle" "layout_style" (in))
  )
)

(define-method get_child_secondary
  (of-object "GtkButtonBox")
  (c-name "gtk_button_box_get_child_secondary")
  (return-type "gboolean")
  (parameters
    '("GtkWidget*" "child" (in))
  )
)

(define-method set_child_secondary
  (of-object "GtkButtonBox")
  (c-name "gtk_button_box_set_child_secondary")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child" (in))
    '("gboolean" "is_secondary" (in))
  )
)

(define-method set_child_size
  (of-object "GtkButtonBox")
  (c-name "gtk_button_box_set_child_size")
  (return-type "none")
  (deprecated "don't use this")
  (parameters
    '("gint" "min_width" (in))
    '("gint" "min_height" (in))
  )
)

(define-method set_child_ipadding
  (of-object "GtkButtonBox")
  (c-name "gtk_button_box_set_child_ipadding")
  (return-type "none")
  (deprecated "don't use this")
  (parameters
    '("gint" "ipad_x" (in))
    '("gint" "ipad_y" (in))
  )
)

(define-method get_child_size
  (of-object "GtkButtonBox")
  (c-name "gtk_button_box_get_child_size")
  (return-type "none")
  (deprecated "don't use this")
  (parameters
    '("gint*" "min_width" (out))
    '("gint*" "min_height" (out))
  )
)

(define-method get_child_ipadding
  (of-object "GtkButtonBox")
  (c-name "gtk_button_box_get_child_ipadding")
  (return-type "none")
  (deprecated "don't use this")
  (parameters
    '("gint*" "ipad_x" (out))
    '("gint*" "ipad_y" (out))
  )
)

(define-function gtk_bin_get_type
  (c-name "gtk_bin_get_type")
  (return-type "GType")
)

(define-method get_child
  (of-object "GtkBin")
  (c-name "gtk_bin_get_child")
  (return-type "GtkWidget*")
)

(define-function gtk_box_get_type
  (c-name "gtk_box_get_type")
  (return-type "GType")
)

(define-method pack_start
  (of-object "GtkBox")
  (c-name "gtk_box_pack_start")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child" (in))
    '("gboolean" "expand" (in) (default "TRUE"))
    '("gboolean" "fill" (in) (default "TRUE"))
    '("guint" "padding" (in) (default "0"))
  )
)

(define-method pack_end
  (of-object "GtkBox")
  (c-name "gtk_box_pack_end")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child" (in))
    '("gboolean" "expand" (in) (default "TRUE"))
    '("gboolean" "fill" (in) (default "TRUE"))
    '("guint" "padding" (in) (default "0"))
  )
)

(define-method pack_start_defaults
  (of-object "GtkBox")
  (c-name "gtk_box_pack_start_defaults")
  (return-type "none")
  (deprecated "use pack_start instead")
  (parameters
    '("GtkWidget*" "widget" (in))
  )
)

(define-method pack_end_defaults
  (of-object "GtkBox")
  (c-name "gtk_box_pack_end_defaults")
  (return-type "none")
  (deprecated "use pack_end instead")
  (parameters
    '("GtkWidget*" "widget" (in))
  )
)

(define-method set_homogeneous
  (of-object "GtkBox")
  (c-name "gtk_box_set_homogeneous")
  (return-type "none")
  (parameters
    '("gboolean" "homogeneous" (in))
  )
)

(define-method get_homogeneous
  (of-object "GtkBox")
  (c-name "gtk_box_get_homogeneous")
  (return-type "gboolean")
)

(define-method set_spacing
  (of-object "GtkBox")
  (c-name "gtk_box_set_spacing")
  (return-type "none")
  (parameters
    '("gint" "spacing" (in))
  )
)

(define-method get_spacing
  (of-object "GtkBox")
  (c-name "gtk_box_get_spacing")
  (return-type "gint")
)

(define-method reorder_child
  (of-object "GtkBox")
  (c-name "gtk_box_reorder_child")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child" (in))
    '("gint" "position" (in))
  )
)

(define-method query_child_packing
  (of-object "GtkBox")
  (c-name "gtk_box_query_child_packing")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child" (in))
    '("gboolean*" "expand" (out))
    '("gboolean*" "fill" (out))
    '("guint*" "padding" (out))
    '("GtkPackType*" "pack_type" (out))
  )
)

(define-method set_child_packing
  (of-object "GtkBox")
  (c-name "gtk_box_set_child_packing")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child" (in))
    '("gboolean" "expand" (in))
    '("gboolean" "fill" (in))
    '("guint" "padding" (in))
    '("GtkPackType" "pack_type" (in))
  )
)

(define-function gtk_button_get_type
  (c-name "gtk_button_get_type")
  (return-type "GType")
)

(define-function gtk_button_new
  (is-constructor-of "GtkButton")
  (c-name "gtk_button_new")
  (caller-owns-return #t)
  (return-type "GtkWidget*")
)

(define-function gtk_button_new_with_label
  (is-constructor-of "GtkButton")
  (c-name "gtk_button_new_with_label")
  (caller-owns-return #t)
  (return-type "GtkWidget*")
  (parameters
    '("const-gchar*" "label" (in))
  )
)

(define-function gtk_button_new_from_stock
	(is-constructor-of "GtkButton")
  (c-name "gtk_button_new_from_stock")
  (caller-owns-return #t)
  (return-type "GtkWidget*")
  (parameters
    '("const-gchar*" "stock_id" (in))
  )
)

(define-function gtk_button_new_with_mnemonic
	(is-constructor-of "GtkButton")
  (c-name "gtk_button_new_with_mnemonic")
  (caller-owns-return #t)
  (return-type "GtkWidget*")
  (parameters
    '("const-gchar*" "label" (in))
  )
)

(define-method pressed
  (of-object "GtkButton")
  (c-name "gtk_button_pressed")
  (return-type "none")
)

(define-method released
  (of-object "GtkButton")
  (c-name "gtk_button_released")
  (return-type "none")
)

(define-method clicked
  (of-object "GtkButton")
  (c-name "gtk_button_clicked")
  (return-type "none")
)

(define-method enter
  (of-object "GtkButton")
  (c-name "gtk_button_enter")
  (return-type "none")
)

(define-method leave
  (of-object "GtkButton")
  (c-name "gtk_button_leave")
  (return-type "none")
)

(define-method set_relief
  (of-object "GtkButton")
  (c-name "gtk_button_set_relief")
  (return-type "none")
  (parameters
    '("GtkReliefStyle" "newstyle" (in))
  )
)

(define-method get_relief
  (of-object "GtkButton")
  (c-name "gtk_button_get_relief")
  (return-type "GtkReliefStyle")
)

(define-method set_label
  (of-object "GtkButton")
  (c-name "gtk_button_set_label")
  (return-type "none")
  (parameters
    '("const-gchar*" "label" (in))
  )
)

(define-method get_label
  (of-object "GtkButton")
  (c-name "gtk_button_get_label")
  (return-type "const-gchar*")
)

(define-method set_use_underline
  (of-object "GtkButton")
  (c-name "gtk_button_set_use_underline")
  (return-type "none")
  (parameters
    '("gboolean" "use_underline" (in))
  )
)

(define-method get_use_underline
  (of-object "GtkButton")
  (c-name "gtk_button_get_use_underline")
  (return-type "gboolean")
)

(define-method set_use_stock
  (of-object "GtkButton")
  (c-name "gtk_button_set_use_stock")
  (return-type "none")
  (parameters
    '("gboolean" "use_stock" (in))
  )
)

(define-method get_use_stock
  (of-object "GtkButton")
  (c-name "gtk_button_get_use_stock")
  (return-type "gboolean")
)

(define-method set_focus_on_click
  (of-object "GtkButton")
  (c-name "gtk_button_set_focus_on_click")
  (return-type "none")
  (parameters
    '("gboolean" "focus_on_click" (in))
  )
)

(define-method get_focus_on_click
  (of-object "GtkButton")
  (c-name "gtk_button_get_focus_on_click")
  (return-type "gboolean")
)

(define-method set_alignment
  (of-object "GtkButton")
  (c-name "gtk_button_set_alignment")
  (return-type "none")
  (parameters
    '("gfloat" "xalign" (in))
    '("gfloat" "yalign" (in))
  )
)

(define-method get_alignment
  (of-object "GtkButton")
  (c-name "gtk_button_get_alignment")
  (return-type "none")
  (parameters
    '("gfloat*" "xalign" (out))
    '("gfloat*" "yalign" (out))
  )
)

(define-method set_image
  (of-object "GtkButton")
  (c-name "gtk_button_set_image")
  (return-type "none")
  (parameters
    '("GtkWidget*" "image" (in))
  )
)

(define-method get_image
  (of-object "GtkButton")
  (c-name "gtk_button_get_image")
  (return-type "GtkWidget*")
)

(define-function gtk_calendar_get_type
  (c-name "gtk_calendar_get_type")
  (return-type "GType")
)

(define-function gtk_calendar_new
  (is-constructor-of "GtkCalendar")
  (c-name "gtk_calendar_new")
  (caller-owns-return #t)
  (return-type "GtkWidget*")
)

(define-method select_month
  (of-object "GtkCalendar")
  (c-name "gtk_calendar_select_month")
  (return-type "gboolean")
  (parameters
    '("guint" "month" (in))
    '("guint" "year" (in))
  )
)

(define-method select_day
  (of-object "GtkCalendar")
  (c-name "gtk_calendar_select_day")
  (return-type "none")
  (parameters
    '("guint" "day" (in))
  )
)

(define-method mark_day
  (of-object "GtkCalendar")
  (c-name "gtk_calendar_mark_day")
  (return-type "gboolean")
  (parameters
    '("guint" "day" (in))
  )
)

(define-method unmark_day
  (of-object "GtkCalendar")
  (c-name "gtk_calendar_unmark_day")
  (return-type "gboolean")
  (parameters
    '("guint" "day" (in))
  )
)

(define-method clear_marks
  (of-object "GtkCalendar")
  (c-name "gtk_calendar_clear_marks")
  (return-type "none")
)

(define-method set_display_options
  (of-object "GtkCalendar")
  (c-name "gtk_calendar_set_display_options")
  (return-type "none")
  (parameters
    '("GtkCalendarDisplayOptions" "flags" (in))
  )
)

(define-method get_display_options
  (of-object "GtkCalendar")
  (c-name "gtk_calendar_get_display_options")
  (return-type "GtkCalendarDisplayOptions")
)

(define-method display_options
  (of-object "GtkCalendar")
  (c-name "gtk_calendar_display_options")
  (return-type "none")
  (parameters
    '("GtkCalendarDisplayOptions" "flags" (in))
  )
)

(define-method get_date
  (of-object "GtkCalendar")
  (c-name "gtk_calendar_get_date")
  (return-type "none")
  (parameters
    '("guint*" "year" (out))
    '("guint*" "month" (out))
    '("guint*" "day" (out))
  )
)

(define-method freeze
  (of-object "GtkCalendar")
  (c-name "gtk_calendar_freeze")
  (return-type "none")
)

(define-method thaw
  (of-object "GtkCalendar")
  (c-name "gtk_calendar_thaw")
  (return-type "none")
)

(define-function gtk_cell_editable_get_type
  (c-name "gtk_cell_editable_get_type")
  (return-type "GType")
)

(define-method start_editing
  (of-object "GtkCellEditable")
  (c-name "gtk_cell_editable_start_editing")
  (return-type "none")
  (parameters
    '("GdkEvent*" "event" (in) (null-ok))
  )
)

(define-method editing_done
  (of-object "GtkCellEditable")
  (c-name "gtk_cell_editable_editing_done")
  (return-type "none")
)

(define-method remove_widget
  (of-object "GtkCellEditable")
  (c-name "gtk_cell_editable_remove_widget")
  (return-type "none")
)

(define-function gtk_cell_layout_get_type
  (c-name "gtk_cell_layout_get_type")
  (return-type "GType")
)

(define-method pack_start
  (of-object "GtkCellLayout")
  (c-name "gtk_cell_layout_pack_start")
  (return-type "none")
  (parameters
    '("GtkCellRenderer*" "cell" (in))
    '("gboolean" "expand" (in) (default "TRUE"))
  )
)

(define-method pack_end
  (of-object "GtkCellLayout")
  (c-name "gtk_cell_layout_pack_end")
  (return-type "none")
  (parameters
    '("GtkCellRenderer*" "cell" (in))
    '("gboolean" "expand" (in) (default "TRUE"))
  )
)

(define-method clear
  (of-object "GtkCellLayout")
  (c-name "gtk_cell_layout_clear")
  (return-type "none")
)

(define-method set_attributes
  (of-object "GtkCellLayout")
  (c-name "gtk_cell_layout_set_attributes")
  (return-type "none")
  (parameters
    '("GtkCellRenderer*" "cell" (in))
  )
  (varargs #t)
)

(define-method add_attribute
  (of-object "GtkCellLayout")
  (c-name "gtk_cell_layout_add_attribute")
  (return-type "none")
  (parameters
    '("GtkCellRenderer*" "cell" (in))
    '("const-gchar*" "attribute" (in))
    '("gint" "column" (in))
  )
)

(define-method set_cell_data_func
  (of-object "GtkCellLayout")
  (c-name "gtk_cell_layout_set_cell_data_func")
  (return-type "none")
  (parameters
    '("GtkCellRenderer*" "cell" (in))
    '("GtkCellLayoutDataFunc" "func" (in))
    '("gpointer" "func_data" (in) (null-ok))
    '("GDestroyNotify" "destroy" (in))
  )
)

(define-method clear_attributes
  (of-object "GtkCellLayout")
  (c-name "gtk_cell_layout_clear_attributes")
  (return-type "none")
  (parameters
    '("GtkCellRenderer*" "cell" (in))
  )
)

(define-method reorder
  (of-object "GtkCellLayout")
  (c-name "gtk_cell_layout_reorder")
  (return-type "none")
  (parameters
    '("GtkCellRenderer*" "cell" (in))
    '("gint" "position" (in))
  )
)

(define-function gtk_cell_renderer_get_type
  (c-name "gtk_cell_renderer_get_type")
  (return-type "GType")
)

(define-method get_size
  (of-object "GtkCellRenderer")
  (c-name "gtk_cell_renderer_get_size")
  (return-type "none")
  (parameters
    '("GtkWidget*" "widget" (in))
    '("GdkRectangle*" "cell_area" (in) (null-ok))
    '("gint*" "x_offset" (out))
    '("gint*" "y_offset" (out))
    '("gint*" "width" (out))
    '("gint*" "height" (out))
  )
)

(define-method render
  (of-object "GtkCellRenderer")
  (c-name "gtk_cell_renderer_render")
  (return-type "none")
  (parameters
    '("GdkWindow*" "window" (in))
    '("GtkWidget*" "widget" (in))
    '("GdkRectangle*" "background_area" (in))
    '("GdkRectangle*" "cell_area" (in))
    '("GdkRectangle*" "expose_area" (in))
    '("GtkCellRendererState" "flags" (in))
  )
)

(define-method activate
  (of-object "GtkCellRenderer")
  (c-name "gtk_cell_renderer_activate")
  (return-type "gboolean")
  (parameters
    '("GdkEvent*" "event" (in))
    '("GtkWidget*" "widget" (in))
    '("const-gchar*" "path" (in))
    '("GdkRectangle*" "background_area" (in))
    '("GdkRectangle*" "cell_area" (in))
    '("GtkCellRendererState" "flags" (in))
  )
)

(define-method start_editing
  (of-object "GtkCellRenderer")
  (c-name "gtk_cell_renderer_start_editing")
  (return-type "GtkCellEditable*")
  (parameters
    '("GdkEvent*" "event" (in))
    '("GtkWidget*" "widget" (in))
    '("const-gchar*" "path" (in))
    '("GdkRectangle*" "background_area" (in))
    '("GdkRectangle*" "cell_area" (in))
    '("GtkCellRendererState" "flags" (in))
  )
)

(define-method set_fixed_size
  (of-object "GtkCellRenderer")
  (c-name "gtk_cell_renderer_set_fixed_size")
  (return-type "none")
  (parameters
    '("gint" "width" (in))
    '("gint" "height" (in))
  )
)

(define-method get_fixed_size
  (of-object "GtkCellRenderer")
  (c-name "gtk_cell_renderer_get_fixed_size")
  (return-type "none")
  (parameters
    '("gint*" "width" (out))
    '("gint*" "height" (out))
  )
)

(define-method editing_canceled
  (of-object "GtkCellRenderer")
  (c-name "gtk_cell_renderer_editing_canceled")
  (return-type "none")
)

(define-method stop_editing
  (of-object "GtkCellRenderer")
  (c-name "gtk_cell_renderer_stop_editing")
  (return-type "none")
  (parameters
    '("gboolean" "canceled" (in))
  )
)

(define-function gtk_cell_renderer_combo_get_type
  (c-name "gtk_cell_renderer_combo_get_type")
  (return-type "GType")
)

(define-function gtk_cell_renderer_combo_new
  (is-constructor-of "GtkCellRendererCombo")
  (c-name "gtk_cell_renderer_combo_new")
  (caller-owns-return #t)
  (return-type "GtkCellRenderer*")
)

(define-function gtk_cell_renderer_pixbuf_get_type
  (c-name "gtk_cell_renderer_pixbuf_get_type")
  (return-type "GType")
)

(define-function gtk_cell_renderer_pixbuf_new
  (is-constructor-of "GtkCellRendererPixbuf")
  (c-name "gtk_cell_renderer_pixbuf_new")
  (caller-owns-return #t)
  (return-type "GtkCellRenderer*")
)

(define-function gtk_cell_renderer_progress_get_type
  (c-name "gtk_cell_renderer_progress_get_type")
  (return-type "GType")
)

(define-function gtk_cell_renderer_progress_new
  (is-constructor-of "GtkCellRendererProgress")
  (c-name "gtk_cell_renderer_progress_new")
  (caller-owns-return #t)
  (return-type "GtkCellRenderer*")
)

(define-function gtk_cell_renderer_text_get_type
  (c-name "gtk_cell_renderer_text_get_type")
  (return-type "GType")
)

(define-function gtk_cell_renderer_text_new
  (is-constructor-of "GtkCellRendererText")
  (c-name "gtk_cell_renderer_text_new")
  (caller-owns-return #t)
  (return-type "GtkCellRenderer*")
)

(define-method set_fixed_height_from_font
  (of-object "GtkCellRendererText")
  (c-name "gtk_cell_renderer_text_set_fixed_height_from_font")
  (return-type "none")
  (parameters
    '("gint" "number_of_rows" (in))
  )
)

(define-function gtk_cell_renderer_toggle_get_type
  (c-name "gtk_cell_renderer_toggle_get_type")
  (return-type "GType")
)

(define-function gtk_cell_renderer_toggle_new
  (is-constructor-of "GtkCellRendererToggle")
  (c-name "gtk_cell_renderer_toggle_new")
  (caller-owns-return #t)
  (return-type "GtkCellRenderer*")
)

(define-method get_radio
  (of-object "GtkCellRendererToggle")
  (c-name "gtk_cell_renderer_toggle_get_radio")
  (return-type "gboolean")
)

(define-method set_radio
  (of-object "GtkCellRendererToggle")
  (c-name "gtk_cell_renderer_toggle_set_radio")
  (return-type "none")
  (parameters
    '("gboolean" "radio" (in))
  )
)

(define-method get_active
  (of-object "GtkCellRendererToggle")
  (c-name "gtk_cell_renderer_toggle_get_active")
  (return-type "gboolean")
)

(define-method set_active
  (of-object "GtkCellRendererToggle")
  (c-name "gtk_cell_renderer_toggle_set_active")
  (return-type "none")
  (parameters
    '("gboolean" "setting" (in))
  )
)

(define-function gtk_cell_view_get_type
  (c-name "gtk_cell_view_get_type")
  (return-type "GType")
)

(define-function gtk_cell_view_new
  (is-constructor-of "GtkCellView")
  (c-name "gtk_cell_view_new")
  (caller-owns-return #t)
  (return-type "GtkWidget*")
)

(define-function cell_view_new_with_text
  (c-name "gtk_cell_view_new_with_text")
  (caller-owns-return #t)
  (return-type "GtkWidget*")
  (parameters
    '("const-gchar*" "text" (in))
  )
)

(define-function cell_view_new_with_markup
  (c-name "gtk_cell_view_new_with_markup")
  (caller-owns-return #t)
  (return-type "GtkWidget*")
  (parameters
    '("const-gchar*" "markup" (in))
  )
)

(define-function cell_view_new_with_pixbuf
  (c-name "gtk_cell_view_new_with_pixbuf")
  (caller-owns-return #t)
  (return-type "GtkWidget*")
  (parameters
    '("GdkPixbuf*" "pixbuf" (in))
  )
)

(define-method set_model
  (of-object "GtkCellView")
  (c-name "gtk_cell_view_set_model")
  (return-type "none")
  (parameters
    '("GtkTreeModel*" "model" (in) (null-ok))
  )
)

(define-method set_displayed_row
  (of-object "GtkCellView")
  (c-name "gtk_cell_view_set_displayed_row")
  (return-type "none")
  (parameters
    '("GtkTreePath*" "path" (in) (null-ok))
  )
)

(define-method get_displayed_row
  (of-object "GtkCellView")
  (c-name "gtk_cell_view_get_displayed_row")
  (caller-owns-return #t)
  (return-type "GtkTreePath*")
)

(define-method get_size_of_row
  (of-object "GtkCellView")
  (c-name "gtk_cell_view_get_size_of_row")
  (return-type "gboolean")
  (parameters
    '("GtkTreePath*" "path" (in))
    '("GtkRequisition*" "requisition" (out))
  )
)

(define-method set_background_color
  (of-object "GtkCellView")
  (c-name "gtk_cell_view_set_background_color")
  (return-type "none")
  (parameters
    '("const-GdkColor*" "color" (in))
  )
)

(define-method get_cell_renderers
  (of-object "GtkCellView")
  (c-name "gtk_cell_view_get_cell_renderers")
  (caller-owns-return #t)
  (return-type "GList[GtkCellRenderer]")
)

(define-method set_can_store
  (of-object "GtkClipboard")
  (c-name "gtk_clipboard_set_can_store")
  (return-type "none")
  (parameters
    '("const-GtkTargetEntry[]" "targets" (in))
    '("gint" "n_targets" (in))
  )
)

(define-method store
  (of-object "GtkClipboard")
  (c-name "gtk_clipboard_store")
  (return-type "none")
)

(define-function gtk_check_button_get_type
  (c-name "gtk_check_button_get_type")
  (return-type "GType")
)

(define-function gtk_check_button_new
  (is-constructor-of "GtkCheckButton")
  (c-name "gtk_check_button_new")
  (caller-owns-return #t)
  (return-type "GtkWidget*")
)

(define-function gtk_check_button_new_with_label
  (is-constructor-of "GtkCheckButton")
  (c-name "gtk_check_button_new_with_label")
  (caller-owns-return #t)
  (return-type "GtkWidget*")
  (parameters
    '("const-gchar*" "label" (in))
  )
)

(define-function gtk_check_button_new_with_mnemonic
  (is-constructor-of "GtkCheckButton")
  (c-name "gtk_check_button_new_with_mnemonic")
  (caller-owns-return #t)
  (return-type "GtkWidget*")
  (parameters
    '("const-gchar*" "label" (in))
  )
)

(define-function gtk_check_menu_item_get_type
  (c-name "gtk_check_menu_item_get_type")
  (return-type "GType")
)

(define-function gtk_check_menu_item_new
  (is-constructor-of "GtkCheckMenuItem")
  (c-name "gtk_check_menu_item_new")
  (caller-owns-return #t)
  (return-type "GtkWidget*")
)

(define-function gtk_check_menu_item_new_with_label
  (is-constructor-of "GtkCheckMenuItem")
  (c-name "gtk_check_menu_item_new_with_label")
  (caller-owns-return #t)
  (return-type "GtkWidget*")
  (parameters
    '("const-gchar*" "label" (in))
  )
)

(define-function gtk_check_menu_item_new_with_mnemonic
  (is-constructor-of "GtkCheckMenuItem")
  (c-name "gtk_check_menu_item_new_with_mnemonic")
  (caller-owns-return #t)
  (return-type "GtkWidget*")
  (parameters
    '("const-gchar*" "label" (in))
  )
)

(define-method set_active
  (of-object "GtkCheckMenuItem")
  (c-name "gtk_check_menu_item_set_active")
  (return-type "none")
  (parameters
    '("gboolean" "is_active" (in))
  )
)

(define-method get_active
  (of-object "GtkCheckMenuItem")
  (c-name "gtk_check_menu_item_get_active")
  (return-type "gboolean")
)

(define-method toggled
  (of-object "GtkCheckMenuItem")
  (c-name "gtk_check_menu_item_toggled")
  (return-type "none")
)

(define-method set_inconsistent
  (of-object "GtkCheckMenuItem")
  (c-name "gtk_check_menu_item_set_inconsistent")
  (return-type "none")
  (parameters
    '("gboolean" "setting" (in))
  )
)

(define-method get_inconsistent
  (of-object "GtkCheckMenuItem")
  (c-name "gtk_check_menu_item_get_inconsistent")
  (return-type "gboolean")
)

(define-method set_draw_as_radio
  (of-object "GtkCheckMenuItem")
  (c-name "gtk_check_menu_item_set_draw_as_radio")
  (return-type "none")
  (parameters
    '("gboolean" "draw_as_radio" (in))
  )
)

(define-method get_draw_as_radio
  (of-object "GtkCheckMenuItem")
  (c-name "gtk_check_menu_item_get_draw_as_radio")
  (return-type "gboolean")
)

(define-method set_show_toggle
  (of-object "GtkCheckMenuItem")
  (c-name "gtk_check_menu_item_set_show_toggle")
  (return-type "none")
  (deprecated "don't use this method")
  (parameters
    '("gboolean" "always" (in))
  )
)

(define-method set_state
  (of-object "GtkCheckMenuItem")
  (c-name "gtk_check_menu_item_set_state")
  (return-type "none")
  (deprecated "use GtkCheckMenuItem.set_active")
  (parameters
    '("gboolean" "is_active" (in))
  )
)

(define-function gtk_clipboard_get_type
  (c-name "gtk_clipboard_get_type")
  (return-type "GType")
)

(define-function clipboard_get_for_display
  (is-constructor-of "GtkClipboard")
  (c-name "gtk_clipboard_get_for_display")
  (caller-owns-return #t)
  (return-type "GtkClipboard*")
  (parameters
    '("GdkDisplay*" "display" (in))
    '("GdkAtom" "selection" (in) (default "GDK_SELECTION_CLIPBOARD"))
  )
)

(define-function clipboard_get
  (c-name "gtk_clipboard_get")
  (return-type "GtkClipboard*")
  (parameters
    '("GdkAtom" "selection" (in) (default "GDK_SELECTION_CLIPBOARD"))
  )
)

(define-method get_display
  (of-object "GtkClipboard")
  (c-name "gtk_clipboard_get_display")
  (return-type "GdkDisplay*")
)

(define-method set_with_data
  (of-object "GtkClipboard")
  (c-name "gtk_clipboard_set_with_data")
  (return-type "gboolean")
  (parameters
    '("const-GtkTargetEntry[]" "targets" (in))
    '("guint" "n_targets" (in))
    '("GtkClipboardGetFunc" "get_func" (in))
    '("GtkClipboardClearFunc" "clear_func" (in))
    '("gpointer" "user_data" (in) (null-ok))
  )
)

(define-method set_with_owner
  (of-object "GtkClipboard")
  (c-name "gtk_clipboard_set_with_owner")
  (return-type "gboolean")
  (parameters
    '("const-GtkTargetEntry[]" "targets" (in))
    '("guint" "n_targets" (in))
    '("GtkClipboardGetFunc" "get_func" (in))
    '("GtkClipboardClearFunc" "clear_func" (in))
    '("GObject*" "owner" (in) (null-ok))
  )
)

(define-method get_owner
  (of-object "GtkClipboard")
  (c-name "gtk_clipboard_get_owner")
  (return-type "GObject*")
)

(define-method clear
  (of-object "GtkClipboard")
  (c-name "gtk_clipboard_clear")
  (return-type "none")
)

(define-method set_text
  (of-object "GtkClipboard")
  (c-name "gtk_clipboard_set_text")
  (return-type "none")
  (parameters
    '("const-gchar*" "text" (in))
    '("gint" "len" (in) (default "-1"))
  )
)

(define-method set_image
  (of-object "GtkClipboard")
  (c-name "gtk_clipboard_set_image")
  (return-type "none")
  (parameters
    '("GdkPixbuf*" "pixbuf" (in))
  )
)

(define-method request_contents
  (of-object "GtkClipboard")
  (c-name "gtk_clipboard_request_contents")
  (return-type "none")
  (parameters
    '("GdkAtom" "target" (in))
    '("GtkClipboardReceivedFunc" "callback" (in))
    '("gpointer" "user_data" (in) (null-ok))
  )
)

(define-method request_image
  (of-object "GtkClipboard")
  (c-name "gtk_clipboard_request_image")
  (return-type "none")
  (parameters
    '("GtkClipboardImageReceivedFunc" "callback" (in))
    '("gpointer" "user_data" (in) (null-ok))
  )
)

(define-method request_text
  (of-object "GtkClipboard")
  (c-name "gtk_clipboard_request_text")
  (return-type "none")
  (parameters
    '("GtkClipboardTextReceivedFunc" "callback" (in))
    '("gpointer" "user_data" (in) (null-ok))
  )
)

(define-method request_targets
  (of-object "GtkClipboard")
  (c-name "gtk_clipboard_request_targets")
  (return-type "none")
  (parameters
    '("GtkClipboardTargetsReceivedFunc" "callback" (in))
    '("gpointer" "user_data" (in) (null-ok))
  )
)

(define-method wait_for_contents
  (of-object "GtkClipboard")
  (c-name "gtk_clipboard_wait_for_contents")
  (caller-owns-return #t)
  (return-type "GtkSelectionData*")
  (parameters
    '("GdkAtom" "target" (in))
  )
)

(define-method wait_for_image
  (of-object "GtkClipboard")
  (c-name "gtk_clipboard_wait_for_image")
  (caller-owns-return #t)
  (return-type "GdkPixbuf*")
)

(define-method wait_for_text
  (of-object "GtkClipboard")
  (c-name "gtk_clipboard_wait_for_text")
  (caller-owns-return #t)
  (return-type "gchar*")
)

(define-method wait_is_image_available
  (of-object "GtkClipboard")
  (c-name "gtk_clipboard_wait_is_image_available")
  (return-type "gboolean")
)

(define-method wait_is_text_available
  (of-object "GtkClipboard")
  (c-name "gtk_clipboard_wait_is_text_available")
  (return-type "gboolean")
)

(define-method wait_is_target_available
  (of-object "GtkClipboard")
  (c-name "gtk_clipboard_wait_is_target_available")
  (return-type "gboolean")
  (parameters
	  '("GdkAtom" "target")
  )
)

(define-method wait_for_targets
  (of-object "GtkClipboard")
  (c-name "gtk_clipboard_wait_for_targets")
  (return-type "gboolean")
  (parameters
    '("GdkAtom*[]" "targets" (out))
    '("gint*" "n_targets" (out))
  )
)

(define-function gtk_clist_get_type
  (c-name "gtk_clist_get_type")
  (return-type "GType")
)

(define-function gtk_clist_new
  (is-constructor-of "GtkCList")
  (c-name "gtk_clist_new")
  (caller-owns-return #t)
  (return-type "GtkWidget*")
  (deprecated "use GtkListStore/GtkTreeView")
  (parameters
    '("gint" "columns" (in) (default "1"))
  )
)

(define-function gtk_clist_new_with_titles
  (is-constructor-of "GtkCList")
  (c-name "gtk_clist_new_with_titles")
  (caller-owns-return #t)
  (return-type "GtkWidget*")
  (deprecated "use GtkListStore/GtkTreeView")
  (parameters
    '("gint" "columns" (in) (default "1"))
    '("gchar*[]" "titles" (in))
  )
)

(define-method set_hadjustment
  (of-object "GtkCList")
  (c-name "gtk_clist_set_hadjustment")
  (return-type "none")
  (parameters
    '("GtkAdjustment*" "adjustment" (in))
  )
)

(define-method set_vadjustment
  (of-object "GtkCList")
  (c-name "gtk_clist_set_vadjustment")
  (return-type "none")
  (parameters
    '("GtkAdjustment*" "adjustment" (in))
  )
)

(define-method get_hadjustment
  (of-object "GtkCList")
  (c-name "gtk_clist_get_hadjustment")
  (return-type "GtkAdjustment*")
)

(define-method get_vadjustment
  (of-object "GtkCList")
  (c-name "gtk_clist_get_vadjustment")
  (return-type "GtkAdjustment*")
)

(define-method set_shadow_type
  (of-object "GtkCList")
  (c-name "gtk_clist_set_shadow_type")
  (return-type "none")
  (parameters
    '("GtkShadowType" "type" (in))
  )
)

(define-method set_selection_mode
  (of-object "GtkCList")
  (c-name "gtk_clist_set_selection_mode")
  (return-type "none")
  (parameters
    '("GtkSelectionMode" "mode" (in))
  )
)

(define-method set_reorderable
  (of-object "GtkCList")
  (c-name "gtk_clist_set_reorderable")
  (return-type "none")
  (parameters
    '("gboolean" "reorderable" (in))
  )
)

(define-method set_use_drag_icons
  (of-object "GtkCList")
  (c-name "gtk_clist_set_use_drag_icons")
  (return-type "none")
  (parameters
    '("gboolean" "use_icons" (in))
  )
)

(define-method set_button_actions
  (of-object "GtkCList")
  (c-name "gtk_clist_set_button_actions")
  (return-type "none")
  (parameters
    '("guint" "button" (in))
    '("guint8" "button_actions" (in))
  )
)

(define-method freeze
  (of-object "GtkCList")
  (c-name "gtk_clist_freeze")
  (return-type "none")
)

(define-method thaw
  (of-object "GtkCList")
  (c-name "gtk_clist_thaw")
  (return-type "none")
)

(define-method column_titles_show
  (of-object "GtkCList")
  (c-name "gtk_clist_column_titles_show")
  (return-type "none")
)

(define-method column_titles_hide
  (of-object "GtkCList")
  (c-name "gtk_clist_column_titles_hide")
  (return-type "none")
)

(define-method column_title_active
  (of-object "GtkCList")
  (c-name "gtk_clist_column_title_active")
  (return-type "none")
  (parameters
    '("gint" "column" (in))
  )
)

(define-method column_title_passive
  (of-object "GtkCList")
  (c-name "gtk_clist_column_title_passive")
  (return-type "none")
  (parameters
    '("gint" "column" (in))
  )
)

(define-method column_titles_active
  (of-object "GtkCList")
  (c-name "gtk_clist_column_titles_active")
  (return-type "none")
)

(define-method column_titles_passive
  (of-object "GtkCList")
  (c-name "gtk_clist_column_titles_passive")
  (return-type "none")
)

(define-method set_column_title
  (of-object "GtkCList")
  (c-name "gtk_clist_set_column_title")
  (return-type "none")
  (parameters
    '("gint" "column" (in))
    '("const-gchar*" "title" (in))
  )
)

(define-method get_column_title
  (of-object "GtkCList")
  (c-name "gtk_clist_get_column_title")
  (caller-owns-return #t)
  (return-type "gchar*")
  (parameters
    '("gint" "column" (in))
  )
)

(define-method set_column_widget
  (of-object "GtkCList")
  (c-name "gtk_clist_set_column_widget")
  (return-type "none")
  (parameters
    '("gint" "column" (in))
    '("GtkWidget*" "widget" (in))
  )
)

(define-method get_column_widget
  (of-object "GtkCList")
  (c-name "gtk_clist_get_column_widget")
  (return-type "GtkWidget*")
  (parameters
    '("gint" "column" (in))
  )
)

(define-method set_column_justification
  (of-object "GtkCList")
  (c-name "gtk_clist_set_column_justification")
  (return-type "none")
  (parameters
    '("gint" "column" (in))
    '("GtkJustification" "justification" (in))
  )
)

(define-method set_column_visibility
  (of-object "GtkCList")
  (c-name "gtk_clist_set_column_visibility")
  (return-type "none")
  (parameters
    '("gint" "column" (in))
    '("gboolean" "visible" (in))
  )
)

(define-method set_column_resizeable
  (of-object "GtkCList")
  (c-name "gtk_clist_set_column_resizeable")
  (return-type "none")
  (parameters
    '("gint" "column" (in))
    '("gboolean" "resizeable" (in))
  )
)

(define-method set_column_auto_resize
  (of-object "GtkCList")
  (c-name "gtk_clist_set_column_auto_resize")
  (return-type "none")
  (parameters
    '("gint" "column" (in))
    '("gboolean" "auto_resize" (in))
  )
)

(define-method columns_autosize
  (of-object "GtkCList")
  (c-name "gtk_clist_columns_autosize")
  (return-type "gint")
)

(define-method optimal_column_width
  (of-object "GtkCList")
  (c-name "gtk_clist_optimal_column_width")
  (return-type "gint")
  (parameters
    '("gint" "column" (in))
  )
)

(define-method set_column_width
  (of-object "GtkCList")
  (c-name "gtk_clist_set_column_width")
  (return-type "none")
  (parameters
    '("gint" "column" (in))
    '("gint" "width" (in))
  )
)

(define-method set_column_min_width
  (of-object "GtkCList")
  (c-name "gtk_clist_set_column_min_width")
  (return-type "none")
  (parameters
    '("gint" "column" (in))
    '("gint" "min_width" (in))
  )
)

(define-method set_column_max_width
  (of-object "GtkCList")
  (c-name "gtk_clist_set_column_max_width")
  (return-type "none")
  (parameters
    '("gint" "column" (in))
    '("gint" "max_width" (in))
  )
)

(define-method set_row_height
  (of-object "GtkCList")
  (c-name "gtk_clist_set_row_height")
  (return-type "none")
  (parameters
    '("guint" "height" (in))
  )
)

(define-method moveto
  (of-object "GtkCList")
  (c-name "gtk_clist_moveto")
  (return-type "none")
  (parameters
    '("gint" "row" (in))
    '("gint" "column" (in))
    '("gfloat" "row_align" (in))
    '("gfloat" "col_align" (in))
  )
)

(define-method row_is_visible
  (of-object "GtkCList")
  (c-name "gtk_clist_row_is_visible")
  (return-type "GtkVisibility")
  (parameters
    '("gint" "row" (in))
  )
)

(define-method get_cell_type
  (of-object "GtkCList")
  (c-name "gtk_clist_get_cell_type")
  (return-type "GtkCellType")
  (parameters
    '("gint" "row" (in))
    '("gint" "column" (in))
  )
)

(define-method set_text
  (of-object "GtkCList")
  (c-name "gtk_clist_set_text")
  (return-type "none")
  (parameters
    '("gint" "row" (in))
    '("gint" "column" (in))
    '("const-gchar*" "text" (in))
  )
)

(define-method get_text
  (of-object "GtkCList")
  (c-name "gtk_clist_get_text")
  (return-type "gint")
  (parameters
    '("gint" "row" (in))
    '("gint" "column" (in))
    '("gchar**" "text" (out))
  )
)

(define-method set_pixmap
  (of-object "GtkCList")
  (c-name "gtk_clist_set_pixmap")
  (return-type "none")
  (parameters
    '("gint" "row" (in))
    '("gint" "column" (in))
    '("GdkPixmap*" "pixmap" (in))
    '("GdkBitmap*" "mask" (in) (default "NULL") (null-ok))
  )
)

(define-method get_pixmap
  (of-object "GtkCList")
  (c-name "gtk_clist_get_pixmap")
  (return-type "gint")
  (parameters
    '("gint" "row" (in))
    '("gint" "column" (in))
    '("GdkPixmap**" "pixmap" (out))
    '("GdkBitmap**" "mask" (out))
  )
)

(define-method set_pixtext
  (of-object "GtkCList")
  (c-name "gtk_clist_set_pixtext")
  (return-type "none")
  (parameters
    '("gint" "row" (in))
    '("gint" "column" (in))
    '("const-gchar*" "text" (in))
    '("guint8" "spacing" (in))
    '("GdkPixmap*" "pixmap" (in))
    '("GdkBitmap*" "mask" (in))
  )
)

(define-method get_pixtext
  (of-object "GtkCList")
  (c-name "gtk_clist_get_pixtext")
  (return-type "gint")
  (parameters
    '("gint" "row" (in))
    '("gint" "column" (in))
    '("gchar**" "text" (out))
    '("guint8*" "spacing" (out))
    '("GdkPixmap**" "pixmap" (out))
    '("GdkBitmap**" "mask" (out))
  )
)

(define-method set_foreground
  (of-object "GtkCList")
  (c-name "gtk_clist_set_foreground")
  (return-type "none")
  (parameters
    '("gint" "row" (in))
    '("GdkColor*" "color" (in))
  )
)

(define-method set_background
  (of-object "GtkCList")
  (c-name "gtk_clist_set_background")
  (return-type "none")
  (parameters
    '("gint" "row" (in))
    '("GdkColor*" "color" (in))
  )
)

(define-method set_cell_style
  (of-object "GtkCList")
  (c-name "gtk_clist_set_cell_style")
  (return-type "none")
  (parameters
    '("gint" "row" (in))
    '("gint" "column" (in))
    '("GtkStyle*" "style" (in))
  )
)

(define-method get_cell_style
  (of-object "GtkCList")
  (c-name "gtk_clist_get_cell_style")
  (return-type "GtkStyle*")
  (parameters
    '("gint" "row" (in))
    '("gint" "column" (in))
  )
)

(define-method set_row_style
  (of-object "GtkCList")
  (c-name "gtk_clist_set_row_style")
  (return-type "none")
  (parameters
    '("gint" "row" (in))
    '("GtkStyle*" "style" (in))
  )
)

(define-method get_row_style
  (of-object "GtkCList")
  (c-name "gtk_clist_get_row_style")
  (return-type "GtkStyle*")
  (parameters
    '("gint" "row" (in))
  )
)

(define-method set_shift
  (of-object "GtkCList")
  (c-name "gtk_clist_set_shift")
  (return-type "none")
  (parameters
    '("gint" "row" (in))
    '("gint" "column" (in))
    '("gint" "vertical" (in))
    '("gint" "horizontal" (in))
  )
)

(define-method set_selectable
  (of-object "GtkCList")
  (c-name "gtk_clist_set_selectable")
  (return-type "none")
  (parameters
    '("gint" "row" (in))
    '("gboolean" "selectable" (in))
  )
)

(define-method get_selectable
  (of-object "GtkCList")
  (c-name "gtk_clist_get_selectable")
  (return-type "gboolean")
  (parameters
    '("gint" "row" (in))
  )
)

(define-method prepend
  (of-object "GtkCList")
  (c-name "gtk_clist_prepend")
  (return-type "gint")
  (parameters
    '("gchar*[]" "text" (in))
  )
)

(define-method append
  (of-object "GtkCList")
  (c-name "gtk_clist_append")
  (return-type "gint")
  (parameters
    '("gchar*[]" "text" (in))
  )
)

(define-method insert
  (of-object "GtkCList")
  (c-name "gtk_clist_insert")
  (return-type "gint")
  (parameters
    '("gint" "row" (in))
    '("gchar*[]" "text" (in))
  )
)

(define-method remove
  (of-object "GtkCList")
  (c-name "gtk_clist_remove")
  (return-type "none")
  (parameters
    '("gint" "row" (in))
  )
)

(define-method set_row_data
  (of-object "GtkCList")
  (c-name "gtk_clist_set_row_data")
  (return-type "none")
  (parameters
    '("gint" "row" (in))
    '("gpointer" "data" (in) (null-ok))
  )
)

(define-method set_row_data_full
  (of-object "GtkCList")
  (c-name "gtk_clist_set_row_data_full")
  (return-type "none")
  (parameters
    '("gint" "row" (in))
    '("gpointer" "data" (in) (null-ok))
    '("GtkDestroyNotify" "destroy" (in))
  )
)

(define-method get_row_data
  (of-object "GtkCList")
  (c-name "gtk_clist_get_row_data")
  (return-type "gpointer")
  (parameters
    '("gint" "row" (in))
  )
)

(define-method find_row_from_data
  (of-object "GtkCList")
  (c-name "gtk_clist_find_row_from_data")
  (return-type "gint")
  (parameters
    '("gpointer" "data" (in))
  )
)

(define-method select_row
  (of-object "GtkCList")
  (c-name "gtk_clist_select_row")
  (return-type "none")
  (parameters
    '("gint" "row" (in))
    '("gint" "column" (in))
  )
)

(define-method unselect_row
  (of-object "GtkCList")
  (c-name "gtk_clist_unselect_row")
  (return-type "none")
  (parameters
    '("gint" "row" (in))
    '("gint" "column" (in))
  )
)

(define-method undo_selection
  (of-object "GtkCList")
  (c-name "gtk_clist_undo_selection")
  (return-type "none")
)

(define-method clear
  (of-object "GtkCList")
  (c-name "gtk_clist_clear")
  (return-type "none")
)

(define-method get_selection_info
  (of-object "GtkCList")
  (c-name "gtk_clist_get_selection_info")
  (return-type "gint")
  (parameters
    '("gint" "x" (in))
    '("gint" "y" (in))
    '("gint*" "row" (out))
    '("gint*" "column" (out))
  )
)

(define-method select_all
  (of-object "GtkCList")
  (c-name "gtk_clist_select_all")
  (return-type "none")
)

(define-method unselect_all
  (of-object "GtkCList")
  (c-name "gtk_clist_unselect_all")
  (return-type "none")
)

(define-method swap_rows
  (of-object "GtkCList")
  (c-name "gtk_clist_swap_rows")
  (return-type "none")
  (parameters
    '("gint" "row1" (in))
    '("gint" "row2" (in))
  )
)

(define-method row_move
  (of-object "GtkCList")
  (c-name "gtk_clist_row_move")
  (return-type "none")
  (parameters
    '("gint" "source_row" (in))
    '("gint" "dest_row" (in))
  )
)

(define-method set_compare_func
  (of-object "GtkCList")
  (c-name "gtk_clist_set_compare_func")
  (return-type "none")
  (parameters
    '("GtkCListCompareFunc" "cmp_func" (in))
  )
)

(define-method set_sort_column
  (of-object "GtkCList")
  (c-name "gtk_clist_set_sort_column")
  (return-type "none")
  (parameters
    '("gint" "column" (in))
  )
)

(define-method set_sort_type
  (of-object "GtkCList")
  (c-name "gtk_clist_set_sort_type")
  (return-type "none")
  (parameters
    '("GtkSortType" "sort_type" (in))
  )
)

(define-method sort
  (of-object "GtkCList")
  (c-name "gtk_clist_sort")
  (return-type "none")
)

(define-method set_auto_sort
  (of-object "GtkCList")
  (c-name "gtk_clist_set_auto_sort")
  (return-type "none")
  (parameters
    '("gboolean" "auto_sort" (in))
  )
)

(define-function gtk_color_button_get_type
  (c-name "gtk_color_button_get_type")
  (return-type "GType")
)

(define-function color_button_new
  (is-constructor-of "GtkColorButton")
  (c-name "gtk_color_button_new")
  (caller-owns-return #t)
  (return-type "GtkWidget*")
)

(define-function color_button_new_with_color
  (is-constructor-of "GtkColorButton")
  (c-name "gtk_color_button_new_with_color")
  (caller-owns-return #t)
  (return-type "GtkWidget*")
  (parameters
    '("const-GdkColor*" "color" (in))
  )
)

(define-method set_color
  (of-object "GtkColorButton")
  (c-name "gtk_color_button_set_color")
  (return-type "none")
  (parameters
    '("const-GdkColor*" "color" (in))
  )
)

(define-method set_alpha
  (of-object "GtkColorButton")
  (c-name "gtk_color_button_set_alpha")
  (return-type "none")
  (parameters
    '("guint16" "alpha" (in))
  )
)

(define-method get_color
  (of-object "GtkColorButton")
  (c-name "gtk_color_button_get_color")
  (return-type "none")
  (parameters
    '("GdkColor*" "color" (in))
  )
)

(define-method get_alpha
  (of-object "GtkColorButton")
  (c-name "gtk_color_button_get_alpha")
  (return-type "guint16")
)

(define-method set_use_alpha
  (of-object "GtkColorButton")
  (c-name "gtk_color_button_set_use_alpha")
  (return-type "none")
  (parameters
    '("gboolean" "use_alpha" (in))
  )
)

(define-method get_use_alpha
  (of-object "GtkColorButton")
  (c-name "gtk_color_button_get_use_alpha")
  (return-type "gboolean")
)

(define-method set_title
  (of-object "GtkColorButton")
  (c-name "gtk_color_button_set_title")
  (return-type "none")
  (parameters
    '("const-gchar*" "title" (in))
  )
)

(define-method get_title
  (of-object "GtkColorButton")
  (c-name "gtk_color_button_get_title")
  (return-type "const-gchar*")
)

(define-function gtk_color_selection_get_type
  (c-name "gtk_color_selection_get_type")
  (return-type "GType")
)

(define-function gtk_color_selection_new
  (is-constructor-of "GtkColorSelection")
  (c-name "gtk_color_selection_new")
  (caller-owns-return #t)
  (return-type "GtkWidget*")
)

(define-method get_has_opacity_control
  (of-object "GtkColorSelection")
  (c-name "gtk_color_selection_get_has_opacity_control")
  (return-type "gboolean")
)

(define-method set_has_opacity_control
  (of-object "GtkColorSelection")
  (c-name "gtk_color_selection_set_has_opacity_control")
  (return-type "none")
  (parameters
    '("gboolean" "has_opacity" (in))
  )
)

(define-method get_has_palette
  (of-object "GtkColorSelection")
  (c-name "gtk_color_selection_get_has_palette")
  (return-type "gboolean")
)

(define-method set_has_palette
  (of-object "GtkColorSelection")
  (c-name "gtk_color_selection_set_has_palette")
  (return-type "none")
  (parameters
    '("gboolean" "has_palette" (in))
  )
)

(define-method set_current_color
  (of-object "GtkColorSelection")
  (c-name "gtk_color_selection_set_current_color")
  (return-type "none")
  (parameters
    '("GdkColor*" "color" (in))
  )
)

(define-method set_current_alpha
  (of-object "GtkColorSelection")
  (c-name "gtk_color_selection_set_current_alpha")
  (return-type "none")
  (parameters
    '("guint16" "alpha" (in))
  )
)

(define-method get_current_color
  (of-object "GtkColorSelection")
  (c-name "gtk_color_selection_get_current_color")
  (return-type "none")
  (parameters
    '("GdkColor*" "color" (out))
  )
)

(define-method get_current_alpha
  (of-object "GtkColorSelection")
  (c-name "gtk_color_selection_get_current_alpha")
  (return-type "guint16")
)

(define-method set_previous_color
  (of-object "GtkColorSelection")
  (c-name "gtk_color_selection_set_previous_color")
  (return-type "none")
  (parameters
    '("GdkColor*" "color" (in))
  )
)

(define-method set_previous_alpha
  (of-object "GtkColorSelection")
  (c-name "gtk_color_selection_set_previous_alpha")
  (return-type "none")
  (parameters
    '("guint16" "alpha" (in))
  )
)

(define-method get_previous_color
  (of-object "GtkColorSelection")
  (c-name "gtk_color_selection_get_previous_color")
  (return-type "none")
  (parameters
    '("GdkColor*" "color" (in))
  )
)

(define-method get_previous_alpha
  (of-object "GtkColorSelection")
  (c-name "gtk_color_selection_get_previous_alpha")
  (return-type "guint16")
)

(define-method is_adjusting
  (of-object "GtkColorSelection")
  (c-name "gtk_color_selection_is_adjusting")
  (return-type "gboolean")
)

(define-function color_selection_palette_from_string
  (c-name "gtk_color_selection_palette_from_string")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "str" (in))
    '("GdkColor*[]" "colors" (out))
    '("gint*" "n_colors" (out))
  )
)

(define-function color_selection_palette_to_string
  (c-name "gtk_color_selection_palette_to_string")
  (caller-owns-return #t)
  (return-type "gchar*")
  (parameters
    '("const-GdkColor[]" "colors" (in))
    '("gint" "n_colors" (in))
  )
)

(define-function color_selection_set_change_palette_hook
  (c-name "gtk_color_selection_set_change_palette_hook")
  (return-type "GtkColorSelectionChangePaletteFunc")
  (parameters
    '("GtkColorSelectionChangePaletteFunc" "func" (in))
  )
)

(define-function color_selection_set_change_palette_with_screen_hook
  (c-name "gtk_color_selection_set_change_palette_with_screen_hook")
  (return-type "GtkColorSelectionChangePaletteWithScreenFunc")
  (parameters
    '("GtkColorSelectionChangePaletteWithScreenFunc" "func" (in))
  )
)

(define-method set_color
  (of-object "GtkColorSelection")
  (c-name "gtk_color_selection_set_color")
  (return-type "none")
  (deprecated "use GtkColorSelection.set_current_color")
  (parameters
    '("gdouble*" "color" (in))
  )
)

(define-method get_color
  (of-object "GtkColorSelection")
  (c-name "gtk_color_selection_get_color")
  (return-type "none")
  (deprecated "use GtkColorSelection.get_current_color")
  (parameters
    '("gdouble*" "color" (out))
  )
)

(define-method set_update_policy
  (of-object "GtkColorSelection")
  (c-name "gtk_color_selection_set_update_policy")
  (return-type "none")
  (parameters
    '("GtkUpdateType" "policy" (in))
  )
)

(define-function gtk_color_selection_dialog_get_type
  (c-name "gtk_color_selection_dialog_get_type")
  (return-type "GType")
)

(define-function gtk_color_selection_dialog_new
  (is-constructor-of "GtkColorSelectionDialog")
  (c-name "gtk_color_selection_dialog_new")
  (caller-owns-return #t)
  (return-type "GtkWidget*")
  (properties
    '("title" (argname "title"))
  )
)

(define-function gtk_combo_get_type
  (c-name "gtk_combo_get_type")
  (return-type "GType")
)

(define-function gtk_combo_new
  (is-constructor-of "GtkCombo")
  (c-name "gtk_combo_new")
  (caller-owns-return #t)
  (return-type "GtkWidget*")
  (deprecated "use gtk.ComboBoxEntry")
)

(define-method set_value_in_list
  (of-object "GtkCombo")
  (c-name "gtk_combo_set_value_in_list")
  (return-type "none")
  (parameters
    '("gboolean" "val" (in))
    '("gboolean" "ok_if_empty" (in))
  )
)

(define-method set_use_arrows
  (of-object "GtkCombo")
  (c-name "gtk_combo_set_use_arrows")
  (return-type "none")
  (parameters
    '("gboolean" "val" (in))
  )
)

(define-method set_use_arrows_always
  (of-object "GtkCombo")
  (c-name "gtk_combo_set_use_arrows_always")
  (return-type "none")
  (parameters
    '("gboolean" "val" (in))
  )
)

(define-method set_case_sensitive
  (of-object "GtkCombo")
  (c-name "gtk_combo_set_case_sensitive")
  (return-type "none")
  (parameters
    '("gboolean" "val" (in))
  )
)

(define-method set_item_string
  (of-object "GtkCombo")
  (c-name "gtk_combo_set_item_string")
  (return-type "none")
  (parameters
    '("GtkItem*" "item" (in))
    '("const-gchar*" "item_value" (in))
  )
)

(define-method set_popdown_strings
  (of-object "GtkCombo")
  (c-name "gtk_combo_set_popdown_strings")
  (return-type "none")
  (parameters
    '("GList*" "strings" (in))
  )
)

(define-method disable_activate
  (of-object "GtkCombo")
  (c-name "gtk_combo_disable_activate")
  (return-type "none")
)

(define-function gtk_combo_box_get_type
  (c-name "gtk_combo_box_get_type")
  (return-type "GType")
)

(define-function gtk_combo_box_new
  (is-constructor-of "GtkComboBox")
  (c-name "gtk_combo_box_new")
  (caller-owns-return #t)
  (return-type "GtkWidget*")
)

(define-function gtk_combo_box_new_with_model
  (is-constructor-of "GtkComboBox")
  (c-name "gtk_combo_box_new_with_model")
  (caller-owns-return #t)
  (return-type "GtkWidget*")
  (parameters
    '("GtkTreeModel*" "model" (in))
  )
)

(define-method set_wrap_width
  (of-object "GtkComboBox")
  (c-name "gtk_combo_box_set_wrap_width")
  (return-type "none")
  (parameters
    '("gint" "width" (in))
  )
)

(define-method set_row_span_column
  (of-object "GtkComboBox")
  (c-name "gtk_combo_box_set_row_span_column")
  (return-type "none")
  (parameters
    '("gint" "row_span" (in))
  )
)

(define-method set_column_span_column
  (of-object "GtkComboBox")
  (c-name "gtk_combo_box_set_column_span_column")
  (return-type "none")
  (parameters
    '("gint" "column_span" (in))
  )
)

(define-method get_active
  (of-object "GtkComboBox")
  (c-name "gtk_combo_box_get_active")
  (return-type "gint")
)

(define-method set_active
  (of-object "GtkComboBox")
  (c-name "gtk_combo_box_set_active")
  (return-type "none")
  (parameters
    '("gint" "index" (in))
  )
)

(define-method get_active_iter
  (of-object "GtkComboBox")
  (c-name "gtk_combo_box_get_active_iter")
  (return-type "gboolean")
  (parameters
    '("GtkTreeIter*" "iter" (out))
  )
)

(define-method set_active_iter
  (of-object "GtkComboBox")
  (c-name "gtk_combo_box_set_active_iter")
  (return-type "none")
  (parameters
    '("GtkTreeIter*" "iter" (in))
  )
)

(define-method set_model
  (of-object "GtkComboBox")
  (c-name "gtk_combo_box_set_model")
  (return-type "none")
  (parameters
    '("GtkTreeModel*" "model" (in) (default "NULL") (null-ok))
  )
)

(define-method get_model
  (of-object "GtkComboBox")
  (c-name "gtk_combo_box_get_model")
  (return-type "GtkTreeModel*")
)

(define-function combo_box_new_text
  (c-name "gtk_combo_box_new_text")
  (caller-owns-return #t)
  (return-type "GtkWidget*")
)

(define-method append_text
  (of-object "GtkComboBox")
  (c-name "gtk_combo_box_append_text")
  (return-type "none")
  (parameters
    '("const-gchar*" "text" (in))
  )
)

(define-method insert_text
  (of-object "GtkComboBox")
  (c-name "gtk_combo_box_insert_text")
  (return-type "none")
  (parameters
    '("gint" "position" (in))
    '("const-gchar*" "text" (in))
  )
)

(define-method prepend_text
  (of-object "GtkComboBox")
  (c-name "gtk_combo_box_prepend_text")
  (return-type "none")
  (parameters
    '("const-gchar*" "text" (in))
  )
)

(define-method remove_text
  (of-object "GtkComboBox")
  (c-name "gtk_combo_box_remove_text")
  (return-type "none")
  (parameters
    '("gint" "position" (in))
  )
)

(define-method popup
  (of-object "GtkComboBox")
  (c-name "gtk_combo_box_popup")
  (return-type "none")
)

(define-method popdown
  (of-object "GtkComboBox")
  (c-name "gtk_combo_box_popdown")
  (return-type "none")
)

(define-method get_wrap_width
  (of-object "GtkComboBox")
  (c-name "gtk_combo_box_get_wrap_width")
  (return-type "gint")
)

(define-method get_row_span_column
  (of-object "GtkComboBox")
  (c-name "gtk_combo_box_get_row_span_column")
  (return-type "gint")
)

(define-method get_column_span_column
  (of-object "GtkComboBox")
  (c-name "gtk_combo_box_get_column_span_column")
  (return-type "gint")
)

(define-method set_add_tearoffs
  (of-object "GtkComboBox")
  (c-name "gtk_combo_box_set_add_tearoffs")
  (return-type "none")
  (parameters
    '("gboolean" "add_tearoffs" (in))
  )
)

(define-method get_add_tearoffs
  (of-object "GtkComboBox")
  (c-name "gtk_combo_box_get_add_tearoffs")
  (return-type "gboolean")
)

(define-method get_focus_on_click
  (of-object "GtkComboBox")
  (c-name "gtk_combo_box_get_focus_on_click")
  (return-type "gboolean")
)

(define-method set_focus_on_click
  (of-object "GtkComboBox")
  (c-name "gtk_combo_box_set_focus_on_click")
  (return-type "none")
  (parameters
    '("gboolean" "focus_on_click" (in))
  )
)

(define-method set_row_separator_func
  (of-object "GtkComboBox")
  (c-name "gtk_combo_box_set_row_separator_func")
  (return-type "none")
  (parameters
    '("GtkTreeViewRowSeparatorFunc" "func" (in))
    '("gpointer" "data" (in) (null-ok))
    '("GtkDestroyNotify" "destroy" (in))
  )
)

(define-method get_row_separator_func
  (of-object "GtkComboBox")
  (c-name "gtk_combo_box_get_row_separator_func")
  (return-type "GtkTreeViewRowSeparatorFunc")
)

(define-method get_active_text
  (of-object "GtkComboBox")
  (c-name "gtk_combo_box_get_active_text")
  (caller-owns-return #t)
  (return-type "gchar*")
)

(define-method get_popup_accessible
  (of-object "GtkComboBox")
  (c-name "gtk_combo_box_get_popup_accessible")
  (return-type "AtkObject*")
)

(define-function gtk_combo_box_entry_get_type
  (c-name "gtk_combo_box_entry_get_type")
  (return-type "GType")
)

(define-function gtk_combo_box_entry_new
  (is-constructor-of "GtkComboBoxEntry")
  (c-name "gtk_combo_box_entry_new")
  (caller-owns-return #t)
  (return-type "GtkWidget*")
)

(define-function combo_box_entry_new_with_model
  (c-name "gtk_combo_box_entry_new_with_model")
  (caller-owns-return #t)
  (return-type "GtkWidget*")
  (parameters
    '("GtkTreeModel*" "model" (in))
    '("gint" "text_column" (in))
  )
)

(define-method set_text_column
  (of-object "GtkComboBoxEntry")
  (c-name "gtk_combo_box_entry_set_text_column")
  (return-type "none")
  (parameters
    '("gint" "text_column" (in))
  )
)

(define-method get_text_column
  (of-object "GtkComboBoxEntry")
  (c-name "gtk_combo_box_entry_get_text_column")
  (return-type "gint")
)

(define-function combo_box_entry_new_text
  (c-name "gtk_combo_box_entry_new_text")
  (caller-owns-return #t)
  (return-type "GtkWidget*")
)

(define-function gtk_container_get_type
  (c-name "gtk_container_get_type")
  (return-type "GType")
)

(define-method set_border_width
  (of-object "GtkContainer")
  (c-name "gtk_container_set_border_width")
  (return-type "none")
  (parameters
    '("guint" "border_width" (in))
  )
)

(define-method get_border_width
  (of-object "GtkContainer")
  (c-name "gtk_container_get_border_width")
  (return-type "guint")
)

(define-method add
  (of-object "GtkContainer")
  (c-name "gtk_container_add")
  (return-type "none")
  (parameters
    '("GtkWidget*" "widget" (in))
  )
)

(define-method remove
  (of-object "GtkContainer")
  (c-name "gtk_container_remove")
  (return-type "none")
  (parameters
    '("GtkWidget*" "widget" (in))
  )
)

(define-method set_resize_mode
  (of-object "GtkContainer")
  (c-name "gtk_container_set_resize_mode")
  (return-type "none")
  (parameters
    '("GtkResizeMode" "resize_mode" (in))
  )
)

(define-method get_resize_mode
  (of-object "GtkContainer")
  (c-name "gtk_container_get_resize_mode")
  (return-type "GtkResizeMode")
)

(define-method check_resize
  (of-object "GtkContainer")
  (c-name "gtk_container_check_resize")
  (return-type "none")
)

(define-method foreach
  (of-object "GtkContainer")
  (c-name "gtk_container_foreach")
  (return-type "none")
  (parameters
    '("GtkCallback" "callback" (in))
    '("gpointer" "callback_data" (in) (null-ok))
  )
)

(define-method foreach_full
  (of-object "GtkContainer")
  (c-name "gtk_container_foreach_full")
  (return-type "none")
  (parameters
    '("GtkCallback" "callback" (in))
    '("GtkCallbackMarshal" "marshal" (in))
    '("gpointer" "callback_data" (in) (null-ok))
    '("GtkDestroyNotify" "notify" (in))
  )
)

(define-method get_children
  (of-object "GtkContainer")
  (c-name "gtk_container_get_children")
  (caller-owns-return #t)
  (return-type "GList[GtkWidget]")
)

(define-method children
  (of-object "GtkContainer")
  (c-name "gtk_container_children")
  (caller-owns-return #t)
  (return-type "GList[GtkWidget]")
  (deprecated "use GtkContainer.get_children")
)

(define-method propagate_expose
  (of-object "GtkContainer")
  (c-name "gtk_container_propagate_expose")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child" (in))
    '("GdkEventExpose*" "event" (in))
  )
)

(define-method set_focus_chain
  (of-object "GtkContainer")
  (c-name "gtk_container_set_focus_chain")
  (return-type "none")
  (parameters
    '("GList*" "focusable_widgets" (in))
  )
)

(define-method get_focus_chain
  (of-object "GtkContainer")
  (c-name "gtk_container_get_focus_chain")
  (return-type "gboolean")
  (parameters
    '("GList*[GtkWidget]" "focusable_widgets" (out))
  )
)

(define-method unset_focus_chain
  (of-object "GtkContainer")
  (c-name "gtk_container_unset_focus_chain")
  (return-type "none")
)

(define-method set_reallocate_redraws
  (of-object "GtkContainer")
  (c-name "gtk_container_set_reallocate_redraws")
  (return-type "none")
  (parameters
    '("gboolean" "needs_redraws" (in))
  )
)

(define-method set_focus_child
  (of-object "GtkContainer")
  (c-name "gtk_container_set_focus_child")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child" (in))
  )
)

(define-method set_focus_vadjustment
  (of-object "GtkContainer")
  (c-name "gtk_container_set_focus_vadjustment")
  (return-type "none")
  (parameters
    '("GtkAdjustment*" "adjustment" (in))
  )
)

(define-method get_focus_vadjustment
  (of-object "GtkContainer")
  (c-name "gtk_container_get_focus_vadjustment")
  (return-type "GtkAdjustment*")
)

(define-method set_focus_hadjustment
  (of-object "GtkContainer")
  (c-name "gtk_container_set_focus_hadjustment")
  (return-type "none")
  (parameters
    '("GtkAdjustment*" "adjustment" (in))
  )
)

(define-method get_focus_hadjustment
  (of-object "GtkContainer")
  (c-name "gtk_container_get_focus_hadjustment")
  (return-type "GtkAdjustment*")
)

(define-method resize_children
  (of-object "GtkContainer")
  (c-name "gtk_container_resize_children")
  (return-type "none")
)

(define-method child_type
  (of-object "GtkContainer")
  (c-name "gtk_container_child_type")
  (return-type "GType")
)

(define-function container_class_install_child_property
  (c-name "gtk_container_class_install_child_property")
  (return-type "none")
  (parameters
    '("GtkContainerClass*" "cclass" (in))
    '("guint" "property_id" (in))
    '("GParamSpec*" "pspec" (in))
  )
)

(define-function container_class_find_child_property
  (c-name "gtk_container_class_find_child_property")
  (return-type "GParamSpec*")
  (parameters
    '("GObjectClass*" "cclass" (in))
    '("const-gchar*" "property_name" (in))
  )
)

(define-function container_class_list_child_properties
  (c-name "gtk_container_class_list_child_properties")
  (caller-owns-return #t)
  (return-type "GParamSpec*[]")
  (parameters
    '("GObjectClass*" "cclass" (in))
    '("guint*" "n_properties" (out))
  )
)

(define-method add_with_properties
  (of-object "GtkContainer")
  (c-name "gtk_container_add_with_properties")
  (return-type "none")
  (parameters
    '("GtkWidget*" "widget" (in))
    '("const-gchar*" "first_prop_name" (in))
  )
  (varargs #t)
)

(define-method child_set
  (of-object "GtkContainer")
  (c-name "gtk_container_child_set")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child" (in))
    '("const-gchar*" "first_prop_name" (in))
  )
  (varargs #t)
)

(define-method child_get
  (of-object "GtkContainer")
  (c-name "gtk_container_child_get")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child" (in))
    '("const-gchar*" "first_prop_name" (in))
  )
  (varargs #t)
)

(define-method child_set_valist
  (of-object "GtkContainer")
  (c-name "gtk_container_child_set_valist")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child" (in))
    '("const-gchar*" "first_property_name" (in))
    '("va_list" "var_args" (in))
  )
)

(define-method child_get_valist
  (of-object "GtkContainer")
  (c-name "gtk_container_child_get_valist")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child" (in))
    '("const-gchar*" "first_property_name" (in))
    '("va_list" "var_args" (in))
  )
)

(define-method child_set_property
  (of-object "GtkContainer")
  (c-name "gtk_container_child_set_property")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child" (in))
    '("const-gchar*" "property_name" (in))
    '("const-GValue*" "value" (in))
  )
)

(define-method child_get_property
  (of-object "GtkContainer")
  (c-name "gtk_container_child_get_property")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child" (in))
    '("const-gchar*" "property_name" (in))
    '("GValue*" "value" (out))
  )
)

(define-method forall
  (of-object "GtkContainer")
  (c-name "gtk_container_forall")
  (return-type "none")
  (parameters
    '("GtkCallback" "callback" (in))
    '("gpointer" "callback_data" (in) (null-ok))
  )
)

(define-function gtk_ctree_get_type
  (c-name "gtk_ctree_get_type")
  (return-type "GType")
)

(define-function gtk_ctree_new_with_titles
  (is-constructor-of "GtkCTree")
  (c-name "gtk_ctree_new_with_titles")
  (caller-owns-return #t)
  (return-type "GtkWidget*")
  (deprecated "use GtkTreeStore/GtkTreeView")
  (parameters
    '("gint" "columns" (in) (default "1"))
    '("gint" "tree_column" (in) (default "0"))
    '("gchar*[]" "titles" (in))
  )
)

(define-function gtk_ctree_new
  (is-constructor-of "GtkCTree")
  (c-name "gtk_ctree_new")
  (caller-owns-return #t)
  (return-type "GtkWidget*")
  (deprecated "use GtkTreeStore/GtkTreeView")
  (parameters
    '("gint" "columns" (in) (default "1"))
    '("gint" "tree_column" (in) (default "0"))
  )
)

(define-method insert_node
  (of-object "GtkCTree")
  (c-name "gtk_ctree_insert_node")
  (return-type "GtkCTreeNode*")
  (parameters
    '("GtkCTreeNode*" "parent" (in))
    '("GtkCTreeNode*" "sibling" (in))
    '("gchar*[]" "text" (in))
    '("guint8" "spacing" (in) (default "5"))
    '("GdkPixmap*" "pixmap_closed" (in) (default "NULL") (null-ok))
    '("GdkBitmap*" "mask_closed" (in) (default "NULL") (null-ok))
    '("GdkPixmap*" "pixmap_opened" (in) (default "NULL") (null-ok))
    '("GdkBitmap*" "mask_opened" (in) (default "NULL") (null-ok))
    '("gboolean" "is_leaf" (in) (default "1"))
    '("gboolean" "expanded" (in) (default "0"))
  )
)

(define-method remove_node
  (of-object "GtkCTree")
  (c-name "gtk_ctree_remove_node")
  (return-type "none")
  (parameters
    '("GtkCTreeNode*" "node" (in))
  )
)

(define-method insert_gnode
  (of-object "GtkCTree")
  (c-name "gtk_ctree_insert_gnode")
  (return-type "GtkCTreeNode*")
  (parameters
    '("GtkCTreeNode*" "parent" (in))
    '("GtkCTreeNode*" "sibling" (in))
    '("GNode*" "gnode" (in))
    '("GtkCTreeGNodeFunc" "func" (in))
    '("gpointer" "data" (in) (null-ok))
  )
)

(define-method export_to_gnode
  (of-object "GtkCTree")
  (c-name "gtk_ctree_export_to_gnode")
  (caller-owns-return #t)
  (return-type "GNode*")
  (parameters
    '("GNode*" "parent" (in))
    '("GNode*" "sibling" (in))
    '("GtkCTreeNode*" "node" (in))
    '("GtkCTreeGNodeFunc" "func" (in))
    '("gpointer" "data" (in) (null-ok))
  )
)

(define-method post_recursive
  (of-object "GtkCTree")
  (c-name "gtk_ctree_post_recursive")
  (return-type "none")
  (parameters
    '("GtkCTreeNode*" "node" (in))
    '("GtkCTreeFunc" "func" (in))
    '("gpointer" "data" (in) (null-ok))
  )
)

(define-method post_recursive_to_depth
  (of-object "GtkCTree")
  (c-name "gtk_ctree_post_recursive_to_depth")
  (return-type "none")
  (parameters
    '("GtkCTreeNode*" "node" (in))
    '("gint" "depth" (in))
    '("GtkCTreeFunc" "func" (in))
    '("gpointer" "data" (in) (null-ok))
  )
)

(define-method pre_recursive
  (of-object "GtkCTree")
  (c-name "gtk_ctree_pre_recursive")
  (return-type "none")
  (parameters
    '("GtkCTreeNode*" "node" (in))
    '("GtkCTreeFunc" "func" (in))
    '("gpointer" "data" (in) (null-ok))
  )
)

(define-method pre_recursive_to_depth
  (of-object "GtkCTree")
  (c-name "gtk_ctree_pre_recursive_to_depth")
  (return-type "none")
  (parameters
    '("GtkCTreeNode*" "node" (in))
    '("gint" "depth" (in))
    '("GtkCTreeFunc" "func" (in))
    '("gpointer" "data" (in) (null-ok))
  )
)

(define-method is_viewable
  (of-object "GtkCTree")
  (c-name "gtk_ctree_is_viewable")
  (return-type "gboolean")
  (parameters
    '("GtkCTreeNode*" "node" (in))
  )
)

(define-method last
  (of-object "GtkCTree")
  (c-name "gtk_ctree_last")
  (return-type "GtkCTreeNode*")
  (parameters
    '("GtkCTreeNode*" "node" (in))
  )
)

(define-method find_node_ptr
  (of-object "GtkCTree")
  (c-name "gtk_ctree_find_node_ptr")
  (return-type "GtkCTreeNode*")
  (parameters
    '("GtkCTreeRow*" "ctree_row" (in))
  )
)

(define-method node_nth
  (of-object "GtkCTree")
  (c-name "gtk_ctree_node_nth")
  (return-type "GtkCTreeNode*")
  (parameters
    '("guint" "row" (in))
  )
)

(define-method find
  (of-object "GtkCTree")
  (c-name "gtk_ctree_find")
  (return-type "gboolean")
  (parameters
    '("GtkCTreeNode*" "node" (in))
    '("GtkCTreeNode*" "child" (in))
  )
)

(define-method is_ancestor
  (of-object "GtkCTree")
  (c-name "gtk_ctree_is_ancestor")
  (return-type "gboolean")
  (parameters
    '("GtkCTreeNode*" "node" (in))
    '("GtkCTreeNode*" "child" (in))
  )
)

(define-method find_by_row_data
  (of-object "GtkCTree")
  (c-name "gtk_ctree_find_by_row_data")
  (return-type "GtkCTreeNode*")
  (parameters
    '("GtkCTreeNode*" "node" (in))
    '("gpointer" "data" (in) (null-ok))
  )
)

(define-method find_all_by_row_data
  (of-object "GtkCTree")
  (c-name "gtk_ctree_find_all_by_row_data")
  (caller-owns-return #t)
  (return-type "GList[GtkCTreeNode]")
  (parameters
    '("GtkCTreeNode*" "node" (in))
    '("gpointer" "data" (in) (null-ok))
  )
)

(define-method find_by_row_data_custom
  (of-object "GtkCTree")
  (c-name "gtk_ctree_find_by_row_data_custom")
  (return-type "GtkCTreeNode*")
  (parameters
    '("GtkCTreeNode*" "node" (in))
    '("gpointer" "data" (in) (null-ok))
    '("GCompareFunc" "func" (in))
  )
)

(define-method find_all_by_row_data_custom
  (of-object "GtkCTree")
  (c-name "gtk_ctree_find_all_by_row_data_custom")
  (caller-owns-return #t)
  (return-type "GList[GtkCTreeNode]")
  (parameters
    '("GtkCTreeNode*" "node" (in))
    '("gpointer" "data" (in) (null-ok))
    '("GCompareFunc" "func" (in))
  )
)

(define-method is_hot_spot
  (of-object "GtkCTree")
  (c-name "gtk_ctree_is_hot_spot")
  (return-type "gboolean")
  (parameters
    '("gint" "x" (in))
    '("gint" "y" (in))
  )
)

(define-method move
  (of-object "GtkCTree")
  (c-name "gtk_ctree_move")
  (return-type "none")
  (parameters
    '("GtkCTreeNode*" "node" (in))
    '("GtkCTreeNode*" "new_parent" (in) (null-ok))
    '("GtkCTreeNode*" "new_sibling" (in) (null-ok))
  )
)

(define-method expand
  (of-object "GtkCTree")
  (c-name "gtk_ctree_expand")
  (return-type "none")
  (parameters
    '("GtkCTreeNode*" "node" (in))
  )
)

(define-method expand_recursive
  (of-object "GtkCTree")
  (c-name "gtk_ctree_expand_recursive")
  (return-type "none")
  (parameters
    '("GtkCTreeNode*" "node" (in))
  )
)

(define-method expand_to_depth
  (of-object "GtkCTree")
  (c-name "gtk_ctree_expand_to_depth")
  (return-type "none")
  (parameters
    '("GtkCTreeNode*" "node" (in))
    '("gint" "depth" (in))
  )
)

(define-method collapse
  (of-object "GtkCTree")
  (c-name "gtk_ctree_collapse")
  (return-type "none")
  (parameters
    '("GtkCTreeNode*" "node" (in))
  )
)

(define-method collapse_recursive
  (of-object "GtkCTree")
  (c-name "gtk_ctree_collapse_recursive")
  (return-type "none")
  (parameters
    '("GtkCTreeNode*" "node" (in))
  )
)

(define-method collapse_to_depth
  (of-object "GtkCTree")
  (c-name "gtk_ctree_collapse_to_depth")
  (return-type "none")
  (parameters
    '("GtkCTreeNode*" "node" (in))
    '("gint" "depth" (in))
  )
)

(define-method toggle_expansion
  (of-object "GtkCTree")
  (c-name "gtk_ctree_toggle_expansion")
  (return-type "none")
  (parameters
    '("GtkCTreeNode*" "node" (in))
  )
)

(define-method toggle_expansion_recursive
  (of-object "GtkCTree")
  (c-name "gtk_ctree_toggle_expansion_recursive")
  (return-type "none")
  (parameters
    '("GtkCTreeNode*" "node" (in))
  )
)

(define-method select
  (of-object "GtkCTree")
  (c-name "gtk_ctree_select")
  (return-type "none")
  (parameters
    '("GtkCTreeNode*" "node" (in))
  )
)

(define-method select_recursive
  (of-object "GtkCTree")
  (c-name "gtk_ctree_select_recursive")
  (return-type "none")
  (parameters
    '("GtkCTreeNode*" "node" (in))
  )
)

(define-method unselect
  (of-object "GtkCTree")
  (c-name "gtk_ctree_unselect")
  (return-type "none")
  (parameters
    '("GtkCTreeNode*" "node" (in))
  )
)

(define-method unselect_recursive
  (of-object "GtkCTree")
  (c-name "gtk_ctree_unselect_recursive")
  (return-type "none")
  (parameters
    '("GtkCTreeNode*" "node" (in))
  )
)

(define-method real_select_recursive
  (of-object "GtkCTree")
  (c-name "gtk_ctree_real_select_recursive")
  (return-type "none")
  (parameters
    '("GtkCTreeNode*" "node" (in))
    '("gint" "state" (in))
  )
)

(define-method node_set_text
  (of-object "GtkCTree")
  (c-name "gtk_ctree_node_set_text")
  (return-type "none")
  (parameters
    '("GtkCTreeNode*" "node" (in))
    '("gint" "column" (in))
    '("const-gchar*" "text" (in))
  )
)

(define-method node_set_pixmap
  (of-object "GtkCTree")
  (c-name "gtk_ctree_node_set_pixmap")
  (return-type "none")
  (parameters
    '("GtkCTreeNode*" "node" (in))
    '("gint" "column" (in))
    '("GdkPixmap*" "pixmap" (in))
    '("GdkBitmap*" "mask" (in) (null-ok))
  )
)

(define-method node_set_pixtext
  (of-object "GtkCTree")
  (c-name "gtk_ctree_node_set_pixtext")
  (return-type "none")
  (parameters
    '("GtkCTreeNode*" "node" (in))
    '("gint" "column" (in))
    '("const-gchar*" "text" (in))
    '("guint8" "spacing" (in))
    '("GdkPixmap*" "pixmap" (in))
    '("GdkBitmap*" "mask" (in) (null-ok))
  )
)

(define-method set_node_info
  (of-object "GtkCTree")
  (c-name "gtk_ctree_set_node_info")
  (return-type "none")
  (parameters
    '("GtkCTreeNode*" "node" (in))
    '("const-gchar*" "text" (in))
    '("guint8" "spacing" (in))
    '("GdkPixmap*" "pixmap_closed" (in) (null-ok))
    '("GdkBitmap*" "mask_closed" (in) (null-ok))
    '("GdkPixmap*" "pixmap_opened" (in) (null-ok))
    '("GdkBitmap*" "mask_opened" (in) (null-ok))
    '("gboolean" "is_leaf" (in))
    '("gboolean" "expanded" (in))
  )
)

(define-method node_set_shift
  (of-object "GtkCTree")
  (c-name "gtk_ctree_node_set_shift")
  (return-type "none")
  (parameters
    '("GtkCTreeNode*" "node" (in))
    '("gint" "column" (in))
    '("gint" "vertical" (in))
    '("gint" "horizontal" (in))
  )
)

(define-method node_set_selectable
  (of-object "GtkCTree")
  (c-name "gtk_ctree_node_set_selectable")
  (return-type "none")
  (parameters
    '("GtkCTreeNode*" "node" (in))
    '("gboolean" "selectable" (in))
  )
)

(define-method node_get_selectable
  (of-object "GtkCTree")
  (c-name "gtk_ctree_node_get_selectable")
  (return-type "gboolean")
  (parameters
    '("GtkCTreeNode*" "node" (in))
  )
)

(define-method node_get_cell_type
  (of-object "GtkCTree")
  (c-name "gtk_ctree_node_get_cell_type")
  (return-type "GtkCellType")
  (parameters
    '("GtkCTreeNode*" "node" (in))
    '("gint" "column" (in))
  )
)

(define-method node_get_text
  (of-object "GtkCTree")
  (c-name "gtk_ctree_node_get_text")
  (return-type "gboolean")
  (parameters
    '("GtkCTreeNode*" "node" (in))
    '("gint" "column" (in))
    '("gchar**" "text" (out))
  )
)

(define-method node_get_pixmap
  (of-object "GtkCTree")
  (c-name "gtk_ctree_node_get_pixmap")
  (return-type "gboolean")
  (parameters
    '("GtkCTreeNode*" "node" (in))
    '("gint" "column" (in))
    '("GdkPixmap**" "pixmap" (out))
    '("GdkBitmap**" "mask" (out))
  )
)

(define-method node_get_pixtext
  (of-object "GtkCTree")
  (c-name "gtk_ctree_node_get_pixtext")
  (return-type "gboolean")
  (parameters
    '("GtkCTreeNode*" "node" (in))
    '("gint" "column" (in))
    '("gchar**" "text" (out))
    '("guint8*" "spacing" (out))
    '("GdkPixmap**" "pixmap" (out))
    '("GdkBitmap**" "mask" (out))
  )
)

(define-method get_node_info
  (of-object "GtkCTree")
  (c-name "gtk_ctree_get_node_info")
  (return-type "gboolean")
  (parameters
    '("GtkCTreeNode*" "node" (in))
    '("gchar**" "text" (out))
    '("guint8*" "spacing" (out))
    '("GdkPixmap**" "pixmap_closed" (out))
    '("GdkBitmap**" "mask_closed" (out))
    '("GdkPixmap**" "pixmap_opened" (out))
    '("GdkBitmap**" "mask_opened" (out))
    '("gboolean*" "is_leaf" (out))
    '("gboolean*" "expanded" (out))
  )
)

(define-method node_set_row_style
  (of-object "GtkCTree")
  (c-name "gtk_ctree_node_set_row_style")
  (return-type "none")
  (parameters
    '("GtkCTreeNode*" "node" (in))
    '("GtkStyle*" "style" (in))
  )
)

(define-method node_get_row_style
  (of-object "GtkCTree")
  (c-name "gtk_ctree_node_get_row_style")
  (return-type "GtkStyle*")
  (parameters
    '("GtkCTreeNode*" "node" (in))
  )
)

(define-method node_set_cell_style
  (of-object "GtkCTree")
  (c-name "gtk_ctree_node_set_cell_style")
  (return-type "none")
  (parameters
    '("GtkCTreeNode*" "node" (in))
    '("gint" "column" (in))
    '("GtkStyle*" "style" (in))
  )
)

(define-method node_get_cell_style
  (of-object "GtkCTree")
  (c-name "gtk_ctree_node_get_cell_style")
  (return-type "GtkStyle*")
  (parameters
    '("GtkCTreeNode*" "node" (in))
    '("gint" "column" (in))
  )
)

(define-method node_set_foreground
  (of-object "GtkCTree")
  (c-name "gtk_ctree_node_set_foreground")
  (return-type "none")
  (parameters
    '("GtkCTreeNode*" "node" (in))
    '("GdkColor*" "color" (in))
  )
)

(define-method node_set_background
  (of-object "GtkCTree")
  (c-name "gtk_ctree_node_set_background")
  (return-type "none")
  (parameters
    '("GtkCTreeNode*" "node" (in))
    '("GdkColor*" "color" (in))
  )
)

(define-method node_set_row_data
  (of-object "GtkCTree")
  (c-name "gtk_ctree_node_set_row_data")
  (return-type "none")
  (parameters
    '("GtkCTreeNode*" "node" (in))
    '("gpointer" "data" (in))
  )
)

(define-method node_set_row_data_full
  (of-object "GtkCTree")
  (c-name "gtk_ctree_node_set_row_data_full")
  (return-type "none")
  (parameters
    '("GtkCTreeNode*" "node" (in))
    '("gpointer" "data" (in))
    '("GtkDestroyNotify" "destroy" (in))
  )
)

(define-method node_get_row_data
  (of-object "GtkCTree")
  (c-name "gtk_ctree_node_get_row_data")
  (return-type "gpointer")
  (parameters
    '("GtkCTreeNode*" "node" (in))
  )
)

(define-method node_moveto
  (of-object "GtkCTree")
  (c-name "gtk_ctree_node_moveto")
  (return-type "none")
  (parameters
    '("GtkCTreeNode*" "node" (in))
    '("gint" "column" (in))
    '("gfloat" "row_align" (in))
    '("gfloat" "col_align" (in))
  )
)

(define-method node_is_visible
  (of-object "GtkCTree")
  (c-name "gtk_ctree_node_is_visible")
  (return-type "GtkVisibility")
  (parameters
    '("GtkCTreeNode*" "node" (in))
  )
)

(define-method set_indent
  (of-object "GtkCTree")
  (c-name "gtk_ctree_set_indent")
  (return-type "none")
  (parameters
    '("gint" "indent" (in))
  )
)

(define-method set_spacing
  (of-object "GtkCTree")
  (c-name "gtk_ctree_set_spacing")
  (return-type "none")
  (parameters
    '("gint" "spacing" (in))
  )
)

(define-method set_show_stub
  (of-object "GtkCTree")
  (c-name "gtk_ctree_set_show_stub")
  (return-type "none")
  (parameters
    '("gboolean" "show_stub" (in))
  )
)

(define-method set_line_style
  (of-object "GtkCTree")
  (c-name "gtk_ctree_set_line_style")
  (return-type "none")
  (parameters
    '("GtkCTreeLineStyle" "line_style" (in))
  )
)

(define-method set_expander_style
  (of-object "GtkCTree")
  (c-name "gtk_ctree_set_expander_style")
  (return-type "none")
  (parameters
    '("GtkCTreeExpanderStyle" "expander_style" (in))
  )
)

(define-method set_drag_compare_func
  (of-object "GtkCTree")
  (c-name "gtk_ctree_set_drag_compare_func")
  (return-type "none")
  (parameters
    '("GtkCTreeCompareDragFunc" "cmp_func" (in))
  )
)

(define-method sort_node
  (of-object "GtkCTree")
  (c-name "gtk_ctree_sort_node")
  (return-type "none")
  (parameters
    '("GtkCTreeNode*" "node" (in))
  )
)

(define-method sort_recursive
  (of-object "GtkCTree")
  (c-name "gtk_ctree_sort_recursive")
  (return-type "none")
  (parameters
    '("GtkCTreeNode*" "node" (in))
  )
)

(define-function gtk_ctree_node_get_type
  (c-name "gtk_ctree_node_get_type")
  (return-type "GType")
)

(define-function gtk_curve_get_type
  (c-name "gtk_curve_get_type")
  (return-type "GType")
)

(define-function gtk_curve_new
  (is-constructor-of "GtkCurve")
  (c-name "gtk_curve_new")
  (caller-owns-return #t)
  (return-type "GtkWidget*")
)

(define-method reset
  (of-object "GtkCurve")
  (c-name "gtk_curve_reset")
  (return-type "none")
)

(define-method set_gamma
  (of-object "GtkCurve")
  (c-name "gtk_curve_set_gamma")
  (return-type "none")
  (parameters
    '("gfloat" "gamma" (in))
  )
)

(define-method set_range
  (of-object "GtkCurve")
  (c-name "gtk_curve_set_range")
  (return-type "none")
  (parameters
    '("gfloat" "min_x" (in))
    '("gfloat" "max_x" (in))
    '("gfloat" "min_y" (in))
    '("gfloat" "max_y" (in))
  )
)

(define-method get_vector
  (of-object "GtkCurve")
  (c-name "gtk_curve_get_vector")
  (return-type "none")
  (parameters
    '("int" "veclen" (in))
    '("gfloat[]" "vector" (out))
  )
)

(define-method set_vector
  (of-object "GtkCurve")
  (c-name "gtk_curve_set_vector")
  (return-type "none")
  (parameters
    '("int" "veclen" (in))
    '("gfloat[]" "vector" (in))
  )
)

(define-method set_curve_type
  (of-object "GtkCurve")
  (c-name "gtk_curve_set_curve_type")
  (return-type "none")
  (parameters
    '("GtkCurveType" "type" (in))
  )
)

(define-function gtk_dialog_get_type
  (c-name "gtk_dialog_get_type")
  (return-type "GType")
)

(define-function gtk_dialog_new
  (is-constructor-of "GtkDialog")
  (c-name "gtk_dialog_new")
  (caller-owns-return #t)
  (return-type "GtkWidget*")
)

(define-function gtk_dialog_new_with_buttons
  (is-constructor-of "GtkDialog")
  (c-name "gtk_dialog_new_with_buttons")
  (caller-owns-return #t)
  (return-type "GtkWidget*")
  (parameters
    '("const-gchar*" "title" (in) (default "NULL") (null-ok))
    '("GtkWindow*" "parent" (in) (default "NULL") (null-ok))
    '("GtkDialogFlags" "flags" (in) (default "0"))
    '("const-gchar*" "first_button_text" (in) (default "NULL") (null-ok))
  )
  (varargs #t)
)

(define-method add_action_widget
  (of-object "GtkDialog")
  (c-name "gtk_dialog_add_action_widget")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child" (in))
    '("gint" "response_id" (in))
  )
)

(define-method add_button
  (of-object "GtkDialog")
  (c-name "gtk_dialog_add_button")
  (return-type "GtkWidget*")
  (parameters
    '("const-gchar*" "button_text" (in))
    '("gint" "response_id" (in))
  )
)

(define-method add_buttons
  (of-object "GtkDialog")
  (c-name "gtk_dialog_add_buttons")
  (return-type "none")
  (parameters
    '("const-gchar*" "first_button_text" (in))
  )
  (varargs #t)
)

(define-method set_response_sensitive
  (of-object "GtkDialog")
  (c-name "gtk_dialog_set_response_sensitive")
  (return-type "none")
  (parameters
    '("gint" "response_id" (in))
    '("gboolean" "setting" (in))
  )
)

(define-method set_default_response
  (of-object "GtkDialog")
  (c-name "gtk_dialog_set_default_response")
  (return-type "none")
  (parameters
    '("gint" "response_id" (in))
  )
)

(define-method get_response_for_widget
  (of-object "GtkDialog")
  (c-name "gtk_dialog_get_response_for_widget")
  (return-type "gint")
  (parameters
    '("GtkWidget*" "widget" (in))
  )
)

(define-method set_has_separator
  (of-object "GtkDialog")
  (c-name "gtk_dialog_set_has_separator")
  (return-type "none")
  (parameters
    '("gboolean" "setting" (in))
  )
)

(define-method get_has_separator
  (of-object "GtkDialog")
  (c-name "gtk_dialog_get_has_separator")
  (return-type "gboolean")
)

(define-method response
  (of-object "GtkDialog")
  (c-name "gtk_dialog_response")
  (return-type "none")
  (parameters
    '("gint" "response_id" (in))
  )
)

(define-method run
  (of-object "GtkDialog")
  (c-name "gtk_dialog_run")
  (return-type "gint")
)

(define-method set_alternative_button_order
  (of-object "GtkDialog")
  (c-name "gtk_dialog_set_alternative_button_order")
  (return-type "none")
  (parameters
    '("gint" "first_response_id" (in))
  )
  (varargs #t)
)

(define-method set_alternative_button_order_from_array
  (of-object "GtkDialog")
  (c-name "gtk_dialog_set_alternative_button_order_from_array")
  (return-type "none")
  (parameters
    '("gint" "n_params" (in))
    '("gint[]" "new_order" (in))
  )
)

(define-method drag_check_threshold
  (of-object "GtkWidget")
  (c-name "gtk_drag_check_threshold")
  (return-type "gboolean")
  (parameters
    '("gint" "start_x" (in))
    '("gint" "start_y" (in))
    '("gint" "current_x" (in))
    '("gint" "current_y" (in))
  )
)

(define-method drag_get_data
  (of-object "GtkWidget")
  (c-name "gtk_drag_get_data")
  (return-type "none")
  (parameters
    '("GdkDragContext*" "context" (in))
    '("GdkAtom" "target" (in))
    '("guint32" "time" (in) (default "GDK_CURRENT_TIME"))
  )
)

(define-method drag_highlight
  (of-object "GtkWidget")
  (c-name "gtk_drag_highlight")
  (return-type "none")
)

(define-method drag_unhighlight
  (of-object "GtkWidget")
  (c-name "gtk_drag_unhighlight")
  (return-type "none")
)

(define-method drag_dest_set
  (of-object "GtkWidget")
  (c-name "gtk_drag_dest_set")
  (return-type "none")
  (parameters
    '("GtkDestDefaults" "flags" (in))
    '("const-GtkTargetEntry[]" "targets" (in))
    '("gint" "n_targets" (in))
    '("GdkDragAction" "actions" (in))
  )
)

(define-method drag_dest_set_proxy
  (of-object "GtkWidget")
  (c-name "gtk_drag_dest_set_proxy")
  (return-type "none")
  (parameters
    '("GdkWindow*" "proxy_window" (in))
    '("GdkDragProtocol" "protocol" (in))
    '("gboolean" "use_coordinates" (in))
  )
)

(define-method drag_dest_unset
  (of-object "GtkWidget")
  (c-name "gtk_drag_dest_unset")
  (return-type "none")
)

(define-method drag_dest_find_target
  (of-object "GtkWidget")
  (c-name "gtk_drag_dest_find_target")
  (return-type "GdkAtom")
  (parameters
    '("GdkDragContext*" "context" (in))
    '("GtkTargetList*" "target_list" (in))
  )
)

(define-method drag_dest_get_target_list
  (of-object "GtkWidget")
  (c-name "gtk_drag_dest_get_target_list")
  (return-type "GtkTargetList*")
)

(define-method drag_dest_set_target_list
  (of-object "GtkWidget")
  (c-name "gtk_drag_dest_set_target_list")
  (return-type "none")
  (parameters
    '("GtkTargetList*" "target_list" (in))
  )
)

(define-method drag_source_set
  (of-object "GtkWidget")
  (c-name "gtk_drag_source_set")
  (return-type "none")
  (parameters
    '("GdkModifierType" "start_button_mask" (in))
    '("const-GtkTargetEntry[]" "targets" (in))
    '("gint" "n_targets" (in))
    '("GdkDragAction" "actions" (in))
  )
)

(define-method drag_source_unset
  (of-object "GtkWidget")
  (c-name "gtk_drag_source_unset")
  (return-type "none")
)

(define-method drag_source_set_icon
  (of-object "GtkWidget")
  (c-name "gtk_drag_source_set_icon")
  (return-type "none")
  (parameters
    '("GdkColormap*" "colormap" (in))
    '("GdkPixmap*" "pixmap" (in))
    '("GdkBitmap*" "mask" (in) (default "NULL") (null-ok))
  )
)

(define-method drag_source_set_icon_pixbuf
  (of-object "GtkWidget")
  (c-name "gtk_drag_source_set_icon_pixbuf")
  (return-type "none")
  (parameters
    '("GdkPixbuf*" "pixbuf" (in))
  )
)

(define-method drag_source_set_icon_stock
  (of-object "GtkWidget")
  (c-name "gtk_drag_source_set_icon_stock")
  (return-type "none")
  (parameters
    '("const-gchar*" "stock_id" (in))
  )
)

(define-method drag_source_get_target_list
  (of-object "GtkWidget")
  (c-name "gtk_drag_source_get_target_list")
  (return-type "GtkTargetList*")
)

(define-method drag_source_set_target_list
  (of-object "GtkWidget")
  (c-name "gtk_drag_source_set_target_list")
  (return-type "none")
  (parameters
    '("GtkTargetList*" "target_list" (in))
  )
)

(define-method drag_begin
  (of-object "GtkWidget")
  (c-name "gtk_drag_begin")
  (return-type "GdkDragContext*")
  (parameters
    '("GtkTargetList*" "targets" (in))
    '("GdkDragAction" "actions" (in))
    '("gint" "button" (in))
    '("GdkEvent*" "event" (in))
  )
)

(define-function drag_set_default_icon
  (c-name "gtk_drag_set_default_icon")
  (return-type "none")
  (deprecated "change the stock pixbuf for GTK_STOCK_DND")
  (parameters
    '("GdkColormap*" "colormap" (in))
    '("GdkPixmap*" "pixmap" (in))
    '("GdkBitmap*" "mask" (in))
    '("gint" "hot_x" (in))
    '("gint" "hot_y" (in))
  )
)

(define-method drag_dest_add_text_targets
  (of-object "GtkWidget")
  (c-name "gtk_drag_dest_add_text_targets")
  (return-type "none")
)

(define-method drag_dest_add_image_targets
  (of-object "GtkWidget")
  (c-name "gtk_drag_dest_add_image_targets")
  (return-type "none")
)

(define-method drag_dest_add_uri_targets
  (of-object "GtkWidget")
  (c-name "gtk_drag_dest_add_uri_targets")
  (return-type "none")
)

(define-method drag_source_add_text_targets
  (of-object "GtkWidget")
  (c-name "gtk_drag_source_add_text_targets")
  (return-type "none")
)

(define-method drag_source_add_image_targets
  (of-object "GtkWidget")
  (c-name "gtk_drag_source_add_image_targets")
  (return-type "none")
)

(define-method drag_source_add_uri_targets
  (of-object "GtkWidget")
  (c-name "gtk_drag_source_add_uri_targets")
  (return-type "none")
)

(define-function target_list_add_text_targets
  (c-name "gtk_target_list_add_text_targets")
  (return-type "none")
  (parameters
    '("GtkTargetList*" "list" (in))
    '("guint" "info" (in))
  )
)

(define-function target_list_add_image_targets
  (c-name "gtk_target_list_add_image_targets")
  (return-type "none")
  (parameters
    '("GtkTargetList*" "list" (in))
    '("guint" "info" (in))
    '("gboolean" "writable" (in))
  )
)

(define-function target_list_add_uri_targets
  (c-name "gtk_target_list_add_uri_targets")
  (return-type "none")
  (parameters
    '("GtkTargetList*" "list" (in))
    '("guint" "info" (in))
  )
)

(define-function drag_get_source_widget
  (c-name "gtk_drag_get_source_widget")
  (return-type "GtkWidget*")
  (parameters
    '("GdkDragContext*" "context" (in))
  )
)

(define-function drag_source_set_icon_name
  (c-name "gtk_drag_source_set_icon_name")
  (return-type "none")
  (parameters
    '("GtkWidget*" "widget" (in))
    '("const-gchar*" "icon_name" (in))
  )
)

(define-function gtk_drawing_area_get_type
  (c-name "gtk_drawing_area_get_type")
  (return-type "GType")
)

(define-function gtk_drawing_area_new
  (is-constructor-of "GtkDrawingArea")
  (c-name "gtk_drawing_area_new")
  (caller-owns-return #t)
  (return-type "GtkWidget*")
)

(define-method size
  (of-object "GtkDrawingArea")
  (c-name "gtk_drawing_area_size")
  (return-type "none")
  (deprecated "use GtkWidget.set_size_request")
  (parameters
    '("gint" "width" (in))
    '("gint" "height" (in))
  )
)

(define-function gtk_editable_get_type
  (c-name "gtk_editable_get_type")
  (return-type "GType")
)

(define-method select_region
  (of-object "GtkEditable")
  (c-name "gtk_editable_select_region")
  (return-type "none")
  (parameters
    '("gint" "start" (in))
    '("gint" "end" (in))
  )
)

(define-method get_selection_bounds
  (of-object "GtkEditable")
  (c-name "gtk_editable_get_selection_bounds")
  (return-type "gboolean")
  (parameters
    '("gint*" "start" (out))
    '("gint*" "end" (out))
  )
)

(define-method insert_text
  (of-object "GtkEditable")
  (c-name "gtk_editable_insert_text")
  (return-type "none")
  (parameters
    '("const-gchar*" "new_text" (in))
    '("gint" "new_text_length" (in))
    '("gint*" "position" (in) (default "0"))
  )
)

(define-method delete_text
  (of-object "GtkEditable")
  (c-name "gtk_editable_delete_text")
  (return-type "none")
  (parameters
    '("gint" "start_pos" (in))
    '("gint" "end_pos" (in))
  )
)

(define-method get_chars
  (of-object "GtkEditable")
  (c-name "gtk_editable_get_chars")
  (caller-owns-return #t)
  (return-type "gchar*")
  (parameters
    '("gint" "start_pos" (in))
    '("gint" "end_pos" (in))
  )
)

(define-method cut_clipboard
  (of-object "GtkEditable")
  (c-name "gtk_editable_cut_clipboard")
  (return-type "none")
)

(define-method copy_clipboard
  (of-object "GtkEditable")
  (c-name "gtk_editable_copy_clipboard")
  (return-type "none")
)

(define-method paste_clipboard
  (of-object "GtkEditable")
  (c-name "gtk_editable_paste_clipboard")
  (return-type "none")
)

(define-method delete_selection
  (of-object "GtkEditable")
  (c-name "gtk_editable_delete_selection")
  (return-type "none")
)

(define-method set_position
  (of-object "GtkEditable")
  (c-name "gtk_editable_set_position")
  (return-type "none")
  (parameters
    '("gint" "position" (in))
  )
)

(define-method get_position
  (of-object "GtkEditable")
  (c-name "gtk_editable_get_position")
  (return-type "gint")
)

(define-method set_editable
  (of-object "GtkEditable")
  (c-name "gtk_editable_set_editable")
  (return-type "none")
  (parameters
    '("gboolean" "is_editable" (in))
  )
)

(define-method get_editable
  (of-object "GtkEditable")
  (c-name "gtk_editable_get_editable")
  (return-type "gboolean")
)

(define-function gtk_entry_get_type
  (c-name "gtk_entry_get_type")
  (return-type "GType")
)

(define-function gtk_entry_new
  (is-constructor-of "GtkEntry")
  (c-name "gtk_entry_new")
  (caller-owns-return #t)
  (return-type "GtkWidget*")
)

(define-function gtk_entry_new_with_max_length
  (is-constructor-of "GtkEntry")
  (c-name "gtk_entry_new_with_max_length")
  (caller-owns-return #t)
  (return-type "GtkWidget*")
  (deprecated "use gtk.Entry() instead")
  (parameters
    '("guint16" "max" (in) (default "0"))
  )
)

(define-method set_visibility
  (of-object "GtkEntry")
  (c-name "gtk_entry_set_visibility")
  (return-type "none")
  (parameters
    '("gboolean" "visible" (in))
  )
)

(define-method get_visibility
  (of-object "GtkEntry")
  (c-name "gtk_entry_get_visibility")
  (return-type "gboolean")
)

(define-method set_invisible_char
  (of-object "GtkEntry")
  (c-name "gtk_entry_set_invisible_char")
  (return-type "none")
  (parameters
    '("gunichar" "ch" (in))
  )
)

(define-method get_invisible_char
  (of-object "GtkEntry")
  (c-name "gtk_entry_get_invisible_char")
  (return-type "gunichar")
)

(define-method set_has_frame
  (of-object "GtkEntry")
  (c-name "gtk_entry_set_has_frame")
  (return-type "none")
  (parameters
    '("gboolean" "setting" (in))
  )
)

(define-method get_has_frame
  (of-object "GtkEntry")
  (c-name "gtk_entry_get_has_frame")
  (return-type "gboolean")
)

(define-method set_max_length
  (of-object "GtkEntry")
  (c-name "gtk_entry_set_max_length")
  (return-type "none")
  (parameters
    '("gint" "max" (in))
  )
)

(define-method get_max_length
  (of-object "GtkEntry")
  (c-name "gtk_entry_get_max_length")
  (return-type "gint")
)

(define-method set_activates_default
  (of-object "GtkEntry")
  (c-name "gtk_entry_set_activates_default")
  (return-type "none")
  (parameters
    '("gboolean" "setting" (in))
  )
)

(define-method get_activates_default
  (of-object "GtkEntry")
  (c-name "gtk_entry_get_activates_default")
  (return-type "gboolean")
)

(define-method set_width_chars
  (of-object "GtkEntry")
  (c-name "gtk_entry_set_width_chars")
  (return-type "none")
  (parameters
    '("gint" "n_chars" (in))
  )
)

(define-method get_width_chars
  (of-object "GtkEntry")
  (c-name "gtk_entry_get_width_chars")
  (return-type "gint")
)

(define-method set_text
  (of-object "GtkEntry")
  (c-name "gtk_entry_set_text")
  (return-type "none")
  (parameters
    '("const-gchar*" "text" (in))
  )
)

(define-method get_text
  (of-object "GtkEntry")
  (c-name "gtk_entry_get_text")
  (return-type "const-gchar*")
)

(define-method get_layout
  (of-object "GtkEntry")
  (c-name "gtk_entry_get_layout")
  (return-type "PangoLayout*")
)

(define-method get_layout_offsets
  (of-object "GtkEntry")
  (c-name "gtk_entry_get_layout_offsets")
  (return-type "none")
  (parameters
    '("gint*" "x" (out))
    '("gint*" "y" (out))
  )
)

(define-method layout_index_to_text_index
	(of-object "GtkEntry")
	(c-name "gtk_entry_layout_index_to_text_index")
	(return-type "none")
	(parameters
		'("gint" "layout_index")
	)
)
(define-method text_index_to_layout_index
	(of-object "GtkEntry")
	(c-name "gtk_entry_text_index_to_layout_index")
	(return-type "none")
	(parameters
		'("gint" "text_index")
	)
)

(define-method set_alignment
  (of-object "GtkEntry")
  (c-name "gtk_entry_set_alignment")
  (return-type "none")
  (parameters
    '("gfloat" "xalign" (in))
  )
)

(define-method get_alignment
  (of-object "GtkEntry")
  (c-name "gtk_entry_get_alignment")
  (return-type "gfloat")
)

(define-method set_completion
  (of-object "GtkEntry")
  (c-name "gtk_entry_set_completion")
  (return-type "none")
  (parameters
    '("GtkEntryCompletion*" "completion" (in))
  )
)

(define-method get_completion
  (of-object "GtkEntry")
  (c-name "gtk_entry_get_completion")
  (return-type "GtkEntryCompletion*")
)

(define-method append_text
  (of-object "GtkEntry")
  (c-name "gtk_entry_append_text")
  (return-type "none")
  (deprecated "use GtkEditable.insert_text")
  (parameters
    '("const-gchar*" "text" (in))
  )
)

(define-method prepend_text
  (of-object "GtkEntry")
  (c-name "gtk_entry_prepend_text")
  (return-type "none")
  (deprecated "use GtkEditable.insert_text")
  (parameters
    '("const-gchar*" "text" (in))
  )
)

(define-method set_position
  (of-object "GtkEntry")
  (c-name "gtk_entry_set_position")
  (return-type "none")
  (parameters
    '("gint" "position" (in))
  )
)

(define-method select_region
  (of-object "GtkEntry")
  (c-name "gtk_entry_select_region")
  (return-type "none")
  (parameters
    '("gint" "start" (in))
    '("gint" "end" (in))
  )
)

(define-method set_editable
  (of-object "GtkEntry")
  (c-name "gtk_entry_set_editable")
  (return-type "none")
  (parameters
    '("gboolean" "editable" (in))
  )
)

(define-function gtk_entry_completion_get_type
  (c-name "gtk_entry_completion_get_type")
  (return-type "GType")
)

(define-function gtk_entry_completion_new
  (is-constructor-of "GtkEntryCompletion")
  (c-name "gtk_entry_completion_new")
  (caller-owns-return #t)
  (return-type "GtkEntryCompletion*")
)

(define-method get_entry
  (of-object "GtkEntryCompletion")
  (c-name "gtk_entry_completion_get_entry")
  (return-type "GtkWidget*")
)

(define-method set_model
  (of-object "GtkEntryCompletion")
  (c-name "gtk_entry_completion_set_model")
  (return-type "none")
  (parameters
    '("GtkTreeModel*" "model" (in) (default "NULL") (null-ok))
  )
)

(define-method get_model
  (of-object "GtkEntryCompletion")
  (c-name "gtk_entry_completion_get_model")
  (return-type "GtkTreeModel*")
)

(define-method set_match_func
  (of-object "GtkEntryCompletion")
  (c-name "gtk_entry_completion_set_match_func")
  (return-type "none")
  (parameters
    '("GtkEntryCompletionMatchFunc" "func" (in))
    '("gpointer" "func_data" (in) (null-ok))
    '("GDestroyNotify" "func_notify" (in))
  )
)

(define-method set_minimum_key_length
  (of-object "GtkEntryCompletion")
  (c-name "gtk_entry_completion_set_minimum_key_length")
  (return-type "none")
  (parameters
    '("gint" "length" (in))
  )
)

(define-method get_minimum_key_length
  (of-object "GtkEntryCompletion")
  (c-name "gtk_entry_completion_get_minimum_key_length")
  (return-type "gint")
)

(define-method complete
  (of-object "GtkEntryCompletion")
  (c-name "gtk_entry_completion_complete")
  (return-type "none")
)

(define-method insert_action_text
  (of-object "GtkEntryCompletion")
  (c-name "gtk_entry_completion_insert_action_text")
  (return-type "none")
  (parameters
    '("gint" "index" (in))
    '("const-gchar*" "text" (in))
  )
)

(define-method insert_action_markup
  (of-object "GtkEntryCompletion")
  (c-name "gtk_entry_completion_insert_action_markup")
  (return-type "none")
  (parameters
    '("gint" "index" (in))
    '("const-gchar*" "markup" (in))
  )
)

(define-method delete_action
  (of-object "GtkEntryCompletion")
  (c-name "gtk_entry_completion_delete_action")
  (return-type "none")
  (parameters
    '("gint" "index" (in))
  )
)

(define-method set_text_column
  (of-object "GtkEntryCompletion")
  (c-name "gtk_entry_completion_set_text_column")
  (return-type "none")
  (parameters
    '("gint" "column" (in))
  )
)

(define-method get_text_column
  (of-object "GtkEntryCompletion")
  (c-name "gtk_entry_completion_get_text_column")
  (return-type "gint")
)

(define-method insert_prefix
  (of-object "GtkEntryCompletion")
  (c-name "gtk_entry_completion_insert_prefix")
  (return-type "none")
)

(define-method set_inline_completion
  (of-object "GtkEntryCompletion")
  (c-name "gtk_entry_completion_set_inline_completion")
  (return-type "none")
  (parameters
    '("gboolean" "inline_completion" (in))
  )
)

(define-method get_inline_completion
  (of-object "GtkEntryCompletion")
  (c-name "gtk_entry_completion_get_inline_completion")
  (return-type "gboolean")
)

(define-method set_popup_completion
  (of-object "GtkEntryCompletion")
  (c-name "gtk_entry_completion_set_popup_completion")
  (return-type "none")
  (parameters
    '("gboolean" "popup_completion" (in))
  )
)

(define-method get_popup_completion
  (of-object "GtkEntryCompletion")
  (c-name "gtk_entry_completion_get_popup_completion")
  (return-type "gboolean")
)

(define-method set_popup_set_width
  (of-object "GtkEntryCompletion")
  (c-name "gtk_entry_completion_set_popup_set_width")
  (return-type "none")
  (parameters
    '("gboolean" "popup_set_width" (in))
  )
)

(define-method get_popup_set_width
  (of-object "GtkEntryCompletion")
  (c-name "gtk_entry_completion_get_popup_set_width")
  (return-type "gboolean")
)

(define-method set_popup_single_match
  (of-object "GtkEntryCompletion")
  (c-name "gtk_entry_completion_set_popup_single_match")
  (return-type "none")
  (parameters
    '("gboolean" "popup_single_match" (in))
  )
)

(define-method get_popup_single_match
  (of-object "GtkEntryCompletion")
  (c-name "gtk_entry_completion_get_popup_single_match")
  (return-type "gboolean")
)

(define-function gtk_event_box_get_type
  (c-name "gtk_event_box_get_type")
  (return-type "GType")
)

(define-function gtk_event_box_new
  (is-constructor-of "GtkEventBox")
  (c-name "gtk_event_box_new")
  (caller-owns-return #t)
  (return-type "GtkWidget*")
)

(define-method get_visible_window
  (of-object "GtkEventBox")
  (c-name "gtk_event_box_get_visible_window")
  (return-type "gboolean")
)

(define-method set_visible_window
  (of-object "GtkEventBox")
  (c-name "gtk_event_box_set_visible_window")
  (return-type "none")
  (parameters
    '("gboolean" "visible_window" (in))
  )
)

(define-method get_above_child
  (of-object "GtkEventBox")
  (c-name "gtk_event_box_get_above_child")
  (return-type "gboolean")
)

(define-method set_above_child
  (of-object "GtkEventBox")
  (c-name "gtk_event_box_set_above_child")
  (return-type "none")
  (parameters
    '("gboolean" "above_child" (in))
  )
)

(define-function gtk_expander_get_type
  (c-name "gtk_expander_get_type")
  (return-type "GType")
)

(define-function gtk_expander_new
  (is-constructor-of "GtkExpander")
  (c-name "gtk_expander_new")
  (caller-owns-return #t)
  (return-type "GtkWidget*")
  (properties
    '("label" (optional) (argname "label"))
  )
)

(define-function expander_new_with_mnemonic
  (c-name "gtk_expander_new_with_mnemonic")
  (caller-owns-return #t)
  (return-type "GtkWidget*")
  (parameters
    '("const-gchar*" "label" (in) (default "NULL") (null-ok))
  )
)

(define-method set_expanded
  (of-object "GtkExpander")
  (c-name "gtk_expander_set_expanded")
  (return-type "none")
  (parameters
    '("gboolean" "expanded" (in))
  )
)

(define-method get_expanded
  (of-object "GtkExpander")
  (c-name "gtk_expander_get_expanded")
  (return-type "gboolean")
)

(define-method set_spacing
  (of-object "GtkExpander")
  (c-name "gtk_expander_set_spacing")
  (return-type "none")
  (parameters
    '("gint" "spacing" (in))
  )
)

(define-method get_spacing
  (of-object "GtkExpander")
  (c-name "gtk_expander_get_spacing")
  (return-type "gint")
)

(define-method set_label
  (of-object "GtkExpander")
  (c-name "gtk_expander_set_label")
  (return-type "none")
  (parameters
    '("const-gchar*" "label" (in) (null-ok))
  )
)

(define-method get_label
  (of-object "GtkExpander")
  (c-name "gtk_expander_get_label")
  (return-type "const-gchar*")
)

(define-method set_use_underline
  (of-object "GtkExpander")
  (c-name "gtk_expander_set_use_underline")
  (return-type "none")
  (parameters
    '("gboolean" "use_underline" (in))
  )
)

(define-method get_use_underline
  (of-object "GtkExpander")
  (c-name "gtk_expander_get_use_underline")
  (return-type "gboolean")
)

(define-method set_use_markup
  (of-object "GtkExpander")
  (c-name "gtk_expander_set_use_markup")
  (return-type "none")
  (parameters
    '("gboolean" "use_markup" (in))
  )
)

(define-method get_use_markup
  (of-object "GtkExpander")
  (c-name "gtk_expander_get_use_markup")
  (return-type "gboolean")
)

(define-method set_label_widget
  (of-object "GtkExpander")
  (c-name "gtk_expander_set_label_widget")
  (return-type "none")
  (parameters
    '("GtkWidget*" "label_widget" (in) (null-ok))
  )
)

(define-method get_label_widget
  (of-object "GtkExpander")
  (c-name "gtk_expander_get_label_widget")
  (return-type "GtkWidget*")
)

(define-function gtk_file_chooser_get_type
  (c-name "gtk_file_chooser_get_type")
  (return-type "GType")
)

(define-function gtk_file_chooser_error_quark
  (c-name "gtk_file_chooser_error_quark")
  (return-type "GQuark")
)

(define-method set_action
  (of-object "GtkFileChooser")
  (c-name "gtk_file_chooser_set_action")
  (return-type "none")
  (parameters
    '("GtkFileChooserAction" "action" (in))
  )
)

(define-method get_action
  (of-object "GtkFileChooser")
  (c-name "gtk_file_chooser_get_action")
  (return-type "GtkFileChooserAction")
)

(define-method set_local_only
  (of-object "GtkFileChooser")
  (c-name "gtk_file_chooser_set_local_only")
  (return-type "none")
  (parameters
    '("gboolean" "local_only" (in))
  )
)

(define-method get_local_only
  (of-object "GtkFileChooser")
  (c-name "gtk_file_chooser_get_local_only")
  (return-type "gboolean")
)

(define-method set_select_multiple
  (of-object "GtkFileChooser")
  (c-name "gtk_file_chooser_set_select_multiple")
  (return-type "none")
  (parameters
    '("gboolean" "select_multiple" (in))
  )
)

(define-method get_select_multiple
  (of-object "GtkFileChooser")
  (c-name "gtk_file_chooser_get_select_multiple")
  (return-type "gboolean")
)

(define-method set_show_hidden
  (of-object "GtkFileChooser")
  (c-name "gtk_file_chooser_set_show_hidden")
  (return-type "none")
  (parameters
    '("gboolean" "show_hidden" (in))
  )
)

(define-method get_show_hidden
  (of-object "GtkFileChooser")
  (c-name "gtk_file_chooser_get_show_hidden")
  (return-type "gboolean")
)

(define-method set_do_overwrite_confirmation
  (of-object "GtkFileChooser")
  (c-name "gtk_file_chooser_set_do_overwrite_confirmation")
  (return-type "none")
  (parameters
    '("gboolean" "do_overwrite_confirmation" (in))
  )
)

(define-method get_do_overwrite_confirmation
  (of-object "GtkFileChooser")
  (c-name "gtk_file_chooser_get_do_overwrite_confirmation")
  (return-type "gboolean")
)

(define-method set_current_name
  (of-object "GtkFileChooser")
  (c-name "gtk_file_chooser_set_current_name")
  (return-type "none")
  (parameters
    '("const-gchar*" "name" (in))
  )
)

(define-method get_filename
  (of-object "GtkFileChooser")
  (c-name "gtk_file_chooser_get_filename")
  (caller-owns-return #t)
  (return-type "gchar*")
)

(define-method set_filename
  (of-object "GtkFileChooser")
  (c-name "gtk_file_chooser_set_filename")
  (return-type "gboolean")
  (parameters
    '("const-char*" "filename" (in))
  )
)

(define-method select_filename
  (of-object "GtkFileChooser")
  (c-name "gtk_file_chooser_select_filename")
  (return-type "gboolean")
  (parameters
    '("const-char*" "filename" (in))
  )
)

(define-method unselect_filename
  (of-object "GtkFileChooser")
  (c-name "gtk_file_chooser_unselect_filename")
  (return-type "none")
  (parameters
    '("const-char*" "filename" (in))
  )
)

(define-method select_all
  (of-object "GtkFileChooser")
  (c-name "gtk_file_chooser_select_all")
  (return-type "none")
)

(define-method unselect_all
  (of-object "GtkFileChooser")
  (c-name "gtk_file_chooser_unselect_all")
  (return-type "none")
)

(define-method get_filenames
  (of-object "GtkFileChooser")
  (c-name "gtk_file_chooser_get_filenames")
  (caller-owns-return #t)
  (return-type "GSList[gchar*]")
)

(define-method set_current_folder
  (of-object "GtkFileChooser")
  (c-name "gtk_file_chooser_set_current_folder")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "filename" (in))
  )
)

(define-method get_current_folder
  (of-object "GtkFileChooser")
  (c-name "gtk_file_chooser_get_current_folder")
  (caller-owns-return #t)
  (return-type "gchar*")
)

(define-method get_uri
  (of-object "GtkFileChooser")
  (c-name "gtk_file_chooser_get_uri")
  (caller-owns-return #t)
  (return-type "gchar*")
)

(define-method set_uri
  (of-object "GtkFileChooser")
  (c-name "gtk_file_chooser_set_uri")
  (return-type "gboolean")
  (parameters
    '("const-char*" "uri" (in))
  )
)

(define-method select_uri
  (of-object "GtkFileChooser")
  (c-name "gtk_file_chooser_select_uri")
  (return-type "gboolean")
  (parameters
    '("const-char*" "uri" (in))
  )
)

(define-method unselect_uri
  (of-object "GtkFileChooser")
  (c-name "gtk_file_chooser_unselect_uri")
  (return-type "none")
  (parameters
    '("const-char*" "uri" (in))
  )
)

(define-method get_uris
  (of-object "GtkFileChooser")
  (c-name "gtk_file_chooser_get_uris")
  (caller-owns-return #t)
  (return-type "GSList[gchar*]")
)

(define-method set_current_folder_uri
  (of-object "GtkFileChooser")
  (c-name "gtk_file_chooser_set_current_folder_uri")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "uri" (in))
  )
)

(define-method get_current_folder_uri
  (of-object "GtkFileChooser")
  (c-name "gtk_file_chooser_get_current_folder_uri")
  (caller-owns-return #t)
  (return-type "gchar*")
)

(define-method set_preview_widget
  (of-object "GtkFileChooser")
  (c-name "gtk_file_chooser_set_preview_widget")
  (return-type "none")
  (parameters
    '("GtkWidget*" "preview_widget" (in))
  )
)

(define-method get_preview_widget
  (of-object "GtkFileChooser")
  (c-name "gtk_file_chooser_get_preview_widget")
  (return-type "GtkWidget*")
)

(define-method set_preview_widget_active
  (of-object "GtkFileChooser")
  (c-name "gtk_file_chooser_set_preview_widget_active")
  (return-type "none")
  (parameters
    '("gboolean" "active" (in))
  )
)

(define-method get_preview_widget_active
  (of-object "GtkFileChooser")
  (c-name "gtk_file_chooser_get_preview_widget_active")
  (return-type "gboolean")
)

(define-method set_use_preview_label
  (of-object "GtkFileChooser")
  (c-name "gtk_file_chooser_set_use_preview_label")
  (return-type "none")
  (parameters
    '("gboolean" "use_label" (in))
  )
)

(define-method get_use_preview_label
  (of-object "GtkFileChooser")
  (c-name "gtk_file_chooser_get_use_preview_label")
  (return-type "gboolean")
)

(define-method get_preview_filename
  (of-object "GtkFileChooser")
  (c-name "gtk_file_chooser_get_preview_filename")
  (caller-owns-return #t)
  (return-type "char*")
)

(define-method get_preview_uri
  (of-object "GtkFileChooser")
  (c-name "gtk_file_chooser_get_preview_uri")
  (caller-owns-return #t)
  (return-type "char*")
)

(define-method set_extra_widget
  (of-object "GtkFileChooser")
  (c-name "gtk_file_chooser_set_extra_widget")
  (return-type "none")
  (parameters
    '("GtkWidget*" "extra_widget" (in))
  )
)

(define-method get_extra_widget
  (of-object "GtkFileChooser")
  (c-name "gtk_file_chooser_get_extra_widget")
  (return-type "GtkWidget*")
)

(define-method add_filter
  (of-object "GtkFileChooser")
  (c-name "gtk_file_chooser_add_filter")
  (return-type "none")
  (parameters
    '("GtkFileFilter*" "filter" (in))
  )
)

(define-method remove_filter
  (of-object "GtkFileChooser")
  (c-name "gtk_file_chooser_remove_filter")
  (return-type "none")
  (parameters
    '("GtkFileFilter*" "filter" (in))
  )
)

(define-method list_filters
  (of-object "GtkFileChooser")
  (c-name "gtk_file_chooser_list_filters")
  (caller-owns-return #t)
  (return-type "GSList[GtkFileFilter]")
)

(define-method set_filter
  (of-object "GtkFileChooser")
  (c-name "gtk_file_chooser_set_filter")
  (return-type "none")
  (parameters
    '("GtkFileFilter*" "filter" (in))
  )
)

(define-method get_filter
  (of-object "GtkFileChooser")
  (c-name "gtk_file_chooser_get_filter")
  (return-type "GtkFileFilter*")
)

(define-method add_shortcut_folder
  (of-object "GtkFileChooser")
  (c-name "gtk_file_chooser_add_shortcut_folder")
  (return-type "gboolean")
  (parameters
    '("const-char*" "folder" (in))
    '("GError**" "error" (out))
  )
)

(define-method remove_shortcut_folder
  (of-object "GtkFileChooser")
  (c-name "gtk_file_chooser_remove_shortcut_folder")
  (return-type "gboolean")
  (parameters
    '("const-char*" "folder" (in))
    '("GError**" "error" (out))
  )
)

(define-method list_shortcut_folders
  (of-object "GtkFileChooser")
  (c-name "gtk_file_chooser_list_shortcut_folders")
  (caller-owns-return #t)
  (return-type "GSList[gchar*]")
)

(define-method add_shortcut_folder_uri
  (of-object "GtkFileChooser")
  (c-name "gtk_file_chooser_add_shortcut_folder_uri")
  (return-type "gboolean")
  (parameters
    '("const-char*" "uri" (in))
    '("GError**" "error" (out))
  )
)

(define-method remove_shortcut_folder_uri
  (of-object "GtkFileChooser")
  (c-name "gtk_file_chooser_remove_shortcut_folder_uri")
  (return-type "gboolean")
  (parameters
    '("const-char*" "uri" (in))
    '("GError**" "error" (out))
  )
)

(define-method list_shortcut_folder_uris
  (of-object "GtkFileChooser")
  (c-name "gtk_file_chooser_list_shortcut_folder_uris")
  (caller-owns-return #t)
  (return-type "GSList[gchar*]")
)

(define-function gtk_file_chooser_button_get_type
  (c-name "gtk_file_chooser_button_get_type")
  (return-type "GType")
)

(define-function file_chooser_button_new
  (is-constructor-of "GtkFileChooserButton")
  (c-name "gtk_file_chooser_button_new")
  (caller-owns-return #t)
  (return-type "GtkWidget*")
  (parameters
    '("const-gchar*" "title" (in))
    '("GtkFileChooserAction" "action" (in))
  )
)

(define-function file_chooser_button_new_with_backend
  (c-name "gtk_file_chooser_button_new_with_backend")
  (is-constructor-of "GtkFileChooserButton")
  (caller-owns-return #t)
  (return-type "GtkWidget*")
  (parameters
    '("const-gchar*" "title" (in))
    '("GtkFileChooserAction" "action" (in))
    '("const-gchar*" "backend" (in))
  )
)

(define-function file_chooser_button_new_with_dialog
  (c-name "gtk_file_chooser_button_new_with_dialog")
  (caller-owns-return #t)
  (return-type "GtkWidget*")
  (parameters
    '("GtkWidget*" "dialog" (in))
  )
)

(define-method get_title
  (of-object "GtkFileChooserButton")
  (c-name "gtk_file_chooser_button_get_title")
  (return-type "const-gchar*")
)

(define-method set_title
  (of-object "GtkFileChooserButton")
  (c-name "gtk_file_chooser_button_set_title")
  (return-type "none")
  (parameters
    '("const-gchar*" "title" (in))
  )
)

(define-method get_width_chars
  (of-object "GtkFileChooserButton")
  (c-name "gtk_file_chooser_button_get_width_chars")
  (return-type "gint")
)

(define-method set_width_chars
  (of-object "GtkFileChooserButton")
  (c-name "gtk_file_chooser_button_set_width_chars")
  (return-type "none")
  (parameters
    '("gint" "n_chars" (in))
  )
)

(define-function gtk_file_chooser_dialog_get_type
  (c-name "gtk_file_chooser_dialog_get_type")
  (return-type "GType")
)

(define-function gtk_file_chooser_dialog_new
  (is-constructor-of "GtkFileChooserDialog")
  (c-name "gtk_file_chooser_dialog_new")
  (caller-owns-return #t)
  (return-type "GtkWidget*")
  (parameters
	  '("const-gchar*" "title" (in) (null-ok))
	  '("GtkWindow*" "parent" (in) (null-ok))
    '("GtkFileChooserAction" "action" (in))
    '("const-gchar*" "first_button_text" (in))
  )
  (varargs #t)
)

(define-function file_chooser_dialog_new_with_backend
  (c-name "gtk_file_chooser_dialog_new_with_backend")
  (is-constructor-of "GtkFileChooserDialog")
  (caller-owns-return #t)
  (return-type "GtkWidget*")
  (parameters
	  '("const-gchar*" "title" (in) (null-ok))
	  '("GtkWindow*" "parent" (in) (null-ok))
    '("GtkFileChooserAction" "action" (in))
    '("const-gchar*" "backend" (in))
    '("const-gchar*" "first_button_text" (in))
  )
  (varargs #t)
)

(define-function gtk_file_chooser_widget_get_type
  (c-name "gtk_file_chooser_widget_get_type")
  (return-type "GType")
)

(define-function gtk_file_chooser_widget_new
  (is-constructor-of "GtkFileChooserWidget")
  (c-name "gtk_file_chooser_widget_new")
  (caller-owns-return #t)
  (return-type "GtkWidget*")
  (parameters
    '("GtkFileChooserAction" "action" (in))
  )
)

(define-function file_chooser_widget_new_with_backend
  (c-name "gtk_file_chooser_widget_new_with_backend")
  (is-constructor-of "GtkFileChooserWidget")
  (caller-owns-return #t)
  (return-type "GtkWidget*")
  (parameters
    '("GtkFileChooserAction" "action" (in))
    '("const-gchar*" "backend" (in))
  )
)

(define-function gtk_file_filter_get_type
  (c-name "gtk_file_filter_get_type")
  (return-type "GType")
)

(define-function gtk_file_filter_new
  (is-constructor-of "GtkFileFilter")
  (c-name "gtk_file_filter_new")
  (caller-owns-return #t)
  (return-type "GtkFileFilter*")
)

(define-method set_name
  (of-object "GtkFileFilter")
  (c-name "gtk_file_filter_set_name")
  (return-type "none")
  (parameters
    '("const-gchar*" "name" (in))
  )
)

(define-method get_name
  (of-object "GtkFileFilter")
  (c-name "gtk_file_filter_get_name")
  (return-type "const-gchar*")
)

(define-method add_mime_type
  (of-object "GtkFileFilter")
  (c-name "gtk_file_filter_add_mime_type")
  (return-type "none")
  (parameters
    '("const-gchar*" "mime_type" (in))
  )
)

(define-method add_pattern
  (of-object "GtkFileFilter")
  (c-name "gtk_file_filter_add_pattern")
  (return-type "none")
  (parameters
    '("const-gchar*" "pattern" (in))
  )
)

(define-method add_pixbuf_formats
  (of-object "GtkFileFilter")
  (c-name "gtk_file_filter_add_pixbuf_formats")
  (return-type "none")
)

(define-method add_custom
  (of-object "GtkFileFilter")
  (c-name "gtk_file_filter_add_custom")
  (return-type "none")
  (parameters
    '("GtkFileFilterFlags" "needed" (in))
    '("GtkFileFilterFunc" "func" (in))
    '("gpointer" "data" (in) (null-ok))
    '("GDestroyNotify" "notify" (in))
  )
)

(define-method get_needed
  (of-object "GtkFileFilter")
  (c-name "gtk_file_filter_get_needed")
  (return-type "GtkFileFilterFlags")
)

(define-method filter
  (of-object "GtkFileFilter")
  (c-name "gtk_file_filter_filter")
  (return-type "gboolean")
  (parameters
    '("const-GtkFileFilterInfo*" "filter_info" (in))
  )
)

(define-function gtk_file_selection_get_type
  (c-name "gtk_file_selection_get_type")
  (return-type "GType")
)

(define-function gtk_file_selection_new
  (is-constructor-of "GtkFileSelection")
  (c-name "gtk_file_selection_new")
  (caller-owns-return #t)
  (return-type "GtkWidget*")
  (properties
    '("title" (optional) (argname "title"))
  )
)

(define-method set_filename
  (of-object "GtkFileSelection")
  (c-name "gtk_file_selection_set_filename")
  (return-type "none")
  (parameters
    '("const-gchar*" "filename" (in))
  )
)

(define-method get_filename
  (of-object "GtkFileSelection")
  (c-name "gtk_file_selection_get_filename")
  (return-type "const-gchar*")
)

(define-method complete
  (of-object "GtkFileSelection")
  (c-name "gtk_file_selection_complete")
  (return-type "none")
  (parameters
    '("const-gchar*" "pattern" (in))
  )
)

(define-method show_fileop_buttons
  (of-object "GtkFileSelection")
  (c-name "gtk_file_selection_show_fileop_buttons")
  (return-type "none")
)

(define-method hide_fileop_buttons
  (of-object "GtkFileSelection")
  (c-name "gtk_file_selection_hide_fileop_buttons")
  (return-type "none")
)

(define-method get_selections
  (of-object "GtkFileSelection")
  (c-name "gtk_file_selection_get_selections")
  (caller-owns-return #t)
  (return-type "gchar**")
)

(define-method set_select_multiple
  (of-object "GtkFileSelection")
  (c-name "gtk_file_selection_set_select_multiple")
  (return-type "none")
  (parameters
    '("gboolean" "select_multiple" (in))
  )
)

(define-method get_select_multiple
  (of-object "GtkFileSelection")
  (c-name "gtk_file_selection_get_select_multiple")
  (return-type "gboolean")
)

(define-function gtk_fixed_get_type
  (c-name "gtk_fixed_get_type")
  (return-type "GType")
)

(define-function gtk_fixed_new
  (is-constructor-of "GtkFixed")
  (c-name "gtk_fixed_new")
  (caller-owns-return #t)
  (return-type "GtkWidget*")
)

(define-method put
  (of-object "GtkFixed")
  (c-name "gtk_fixed_put")
  (return-type "none")
  (parameters
    '("GtkWidget*" "widget" (in))
    '("gint" "x" (in))
    '("gint" "y" (in))
  )
)

(define-method move
  (of-object "GtkFixed")
  (c-name "gtk_fixed_move")
  (return-type "none")
  (parameters
    '("GtkWidget*" "widget" (in))
    '("gint" "x" (in))
    '("gint" "y" (in))
  )
)

(define-method set_has_window
  (of-object "GtkFixed")
  (c-name "gtk_fixed_set_has_window")
  (return-type "none")
  (parameters
    '("gboolean" "has_window" (in))
  )
)

(define-method get_has_window
  (of-object "GtkFixed")
  (c-name "gtk_fixed_get_has_window")
  (return-type "gboolean")
)

(define-function gtk_font_button_get_type
  (c-name "gtk_font_button_get_type")
  (return-type "GType")
)

(define-function gtk_font_button_new
  (is-constructor-of "GtkFontButton")
  (c-name "gtk_font_button_new")
  (caller-owns-return #t)
  (return-type "GtkWidget*")
)

(define-function gtk_font_button_new_with_font
  (c-name "gtk_font_button_new_with_font")
  (caller-owns-return #t)
  (return-type "GtkWidget*")
  (parameters
    '("const-gchar*" "fontname" (in))
  )
)

(define-method get_title
  (of-object "GtkFontButton")
  (c-name "gtk_font_button_get_title")
  (return-type "const-gchar*")
)

(define-method set_title
  (of-object "GtkFontButton")
  (c-name "gtk_font_button_set_title")
  (return-type "none")
  (parameters
    '("const-gchar*" "title" (in))
  )
)

(define-method get_use_font
  (of-object "GtkFontButton")
  (c-name "gtk_font_button_get_use_font")
  (return-type "gboolean")
)

(define-method set_use_font
  (of-object "GtkFontButton")
  (c-name "gtk_font_button_set_use_font")
  (return-type "none")
  (parameters
    '("gboolean" "use_font" (in))
  )
)

(define-method get_use_size
  (of-object "GtkFontButton")
  (c-name "gtk_font_button_get_use_size")
  (return-type "gboolean")
)

(define-method set_use_size
  (of-object "GtkFontButton")
  (c-name "gtk_font_button_set_use_size")
  (return-type "none")
  (parameters
    '("gboolean" "use_size" (in))
  )
)

(define-method get_font_name
  (of-object "GtkFontButton")
  (c-name "gtk_font_button_get_font_name")
  (return-type "const-gchar*")
)

(define-method set_font_name
  (of-object "GtkFontButton")
  (c-name "gtk_font_button_set_font_name")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "fontname" (in))
  )
)

(define-method get_show_style
  (of-object "GtkFontButton")
  (c-name "gtk_font_button_get_show_style")
  (return-type "gboolean")
)

(define-method set_show_style
  (of-object "GtkFontButton")
  (c-name "gtk_font_button_set_show_style")
  (return-type "none")
  (parameters
    '("gboolean" "show_style" (in))
  )
)

(define-method get_show_size
  (of-object "GtkFontButton")
  (c-name "gtk_font_button_get_show_size")
  (return-type "gboolean")
)

(define-method set_show_size
  (of-object "GtkFontButton")
  (c-name "gtk_font_button_set_show_size")
  (return-type "none")
  (parameters
    '("gboolean" "show_size" (in))
  )
)

(define-function gtk_font_selection_get_type
  (c-name "gtk_font_selection_get_type")
  (return-type "GType")
)

(define-function gtk_font_selection_new
  (is-constructor-of "GtkFontSelection")
  (c-name "gtk_font_selection_new")
  (caller-owns-return #t)
  (return-type "GtkWidget*")
)

(define-method get_font_name
  (of-object "GtkFontSelection")
  (c-name "gtk_font_selection_get_font_name")
  (caller-owns-return #t)
  (return-type "gchar*")
)

(define-method get_font
  (of-object "GtkFontSelection")
  (c-name "gtk_font_selection_get_font")
  (return-type "GdkFont*")
  (deprecated "use GtkFontSelection.get_font_name")
)

(define-method set_font_name
  (of-object "GtkFontSelection")
  (c-name "gtk_font_selection_set_font_name")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "fontname" (in))
  )
)

(define-method get_preview_text
  (of-object "GtkFontSelection")
  (c-name "gtk_font_selection_get_preview_text")
  (return-type "const-gchar*")
)

(define-method set_preview_text
  (of-object "GtkFontSelection")
  (c-name "gtk_font_selection_set_preview_text")
  (return-type "none")
  (parameters
    '("const-gchar*" "text" (in))
  )
)

(define-function gtk_font_selection_dialog_get_type
  (c-name "gtk_font_selection_dialog_get_type")
  (return-type "GType")
)

(define-function gtk_font_selection_dialog_new
  (is-constructor-of "GtkFontSelectionDialog")
  (c-name "gtk_font_selection_dialog_new")
  (caller-owns-return #t)
  (return-type "GtkWidget*")
  (properties
    '("title" (argname "title"))
  )
)

(define-method get_font_name
  (of-object "GtkFontSelectionDialog")
  (c-name "gtk_font_selection_dialog_get_font_name")
  (caller-owns-return #t)
  (return-type "gchar*")
)

(define-method get_font
  (of-object "GtkFontSelectionDialog")
  (c-name "gtk_font_selection_dialog_get_font")
  (return-type "GdkFont*")
  (deprecated "use GtkFontSelectionDialog.get_font_name")
)

(define-method set_font_name
  (of-object "GtkFontSelectionDialog")
  (c-name "gtk_font_selection_dialog_set_font_name")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "fontname" (in))
  )
)

(define-method get_preview_text
  (of-object "GtkFontSelectionDialog")
  (c-name "gtk_font_selection_dialog_get_preview_text")
  (return-type "const-gchar*")
)

(define-method set_preview_text
  (of-object "GtkFontSelectionDialog")
  (c-name "gtk_font_selection_dialog_set_preview_text")
  (return-type "none")
  (parameters
    '("const-gchar*" "text" (in))
  )
)

(define-function gtk_frame_get_type
  (c-name "gtk_frame_get_type")
  (return-type "GType")
)

(define-function gtk_frame_new
  (is-constructor-of "GtkFrame")
  (c-name "gtk_frame_new")
  (caller-owns-return #t)
  (return-type "GtkWidget*")
  (properties
    '("label" (optional) (argname "label"))
  )
)

(define-method set_label
  (of-object "GtkFrame")
  (c-name "gtk_frame_set_label")
  (return-type "none")
  (parameters
    '("const-gchar*" "label" (in) (null-ok))
  )
)

(define-method get_label
  (of-object "GtkFrame")
  (c-name "gtk_frame_get_label")
  (return-type "const-gchar*")
)

(define-method set_label_widget
  (of-object "GtkFrame")
  (c-name "gtk_frame_set_label_widget")
  (return-type "none")
  (parameters
    '("GtkWidget*" "label_widget" (in))
  )
)

(define-method get_label_widget
  (of-object "GtkFrame")
  (c-name "gtk_frame_get_label_widget")
  (return-type "GtkWidget*")
)

(define-method set_label_align
  (of-object "GtkFrame")
  (c-name "gtk_frame_set_label_align")
  (return-type "none")
  (parameters
    '("gfloat" "xalign" (in))
    '("gfloat" "yalign" (in))
  )
)

(define-method get_label_align
  (of-object "GtkFrame")
  (c-name "gtk_frame_get_label_align")
  (return-type "none")
  (parameters
    '("gfloat*" "xalign" (out))
    '("gfloat*" "yalign" (out))
  )
)

(define-method set_shadow_type
  (of-object "GtkFrame")
  (c-name "gtk_frame_set_shadow_type")
  (return-type "none")
  (parameters
    '("GtkShadowType" "type" (in))
  )
)

(define-method get_shadow_type
  (of-object "GtkFrame")
  (c-name "gtk_frame_get_shadow_type")
  (return-type "GtkShadowType")
)

(define-function gtk_gamma_curve_get_type
  (c-name "gtk_gamma_curve_get_type")
  (return-type "GType")
)

(define-function gtk_gamma_curve_new
  (is-constructor-of "GtkGammaCurve")
  (c-name "gtk_gamma_curve_new")
  (caller-owns-return #t)
  (return-type "GtkWidget*")
)

(define-function gc_get
  (c-name "gtk_gc_get")
  (return-type "GdkGC*")
  (parameters
    '("gint" "depth" (in))
    '("GdkColormap*" "colormap" (in))
    '("GdkGCValues*" "values" (in))
    '("GdkGCValuesMask" "values_mask" (in))
  )
)

(define-function gc_release
  (c-name "gtk_gc_release")
  (return-type "none")
  (parameters
    '("GdkGC*" "gc" (in))
  )
)

(define-function gtk_handle_box_get_type
  (c-name "gtk_handle_box_get_type")
  (return-type "GType")
)

(define-function gtk_handle_box_new
  (is-constructor-of "GtkHandleBox")
  (c-name "gtk_handle_box_new")
  (caller-owns-return #t)
  (return-type "GtkWidget*")
)

(define-method set_shadow_type
  (of-object "GtkHandleBox")
  (c-name "gtk_handle_box_set_shadow_type")
  (return-type "none")
  (parameters
    '("GtkShadowType" "type" (in))
  )
)

(define-method get_shadow_type
  (of-object "GtkHandleBox")
  (c-name "gtk_handle_box_get_shadow_type")
  (return-type "GtkShadowType")
)

(define-method set_handle_position
  (of-object "GtkHandleBox")
  (c-name "gtk_handle_box_set_handle_position")
  (return-type "none")
  (parameters
    '("GtkPositionType" "position" (in))
  )
)

(define-method get_handle_position
  (of-object "GtkHandleBox")
  (c-name "gtk_handle_box_get_handle_position")
  (return-type "GtkPositionType")
)

(define-method set_snap_edge
  (of-object "GtkHandleBox")
  (c-name "gtk_handle_box_set_snap_edge")
  (return-type "none")
  (parameters
    '("GtkPositionType" "edge" (in))
  )
)

(define-method get_snap_edge
  (of-object "GtkHandleBox")
  (c-name "gtk_handle_box_get_snap_edge")
  (return-type "GtkPositionType")
)

(define-function gtk_hbutton_box_get_type
  (c-name "gtk_hbutton_box_get_type")
  (return-type "GType")
)

(define-function gtk_hbutton_box_new
  (is-constructor-of "GtkHButtonBox")
  (c-name "gtk_hbutton_box_new")
  (caller-owns-return #t)
  (return-type "GtkWidget*")
)

(define-function hbutton_box_get_spacing_default
  (c-name "gtk_hbutton_box_get_spacing_default")
  (return-type "gint")
)

(define-function hbutton_box_get_layout_default
  (c-name "gtk_hbutton_box_get_layout_default")
  (return-type "GtkButtonBoxStyle")
)

(define-function hbutton_box_set_spacing_default
  (c-name "gtk_hbutton_box_set_spacing_default")
  (return-type "none")
  (parameters
    '("gint" "spacing" (in))
  )
)

(define-function hbutton_box_set_layout_default
  (c-name "gtk_hbutton_box_set_layout_default")
  (return-type "none")
  (parameters
    '("GtkButtonBoxStyle" "layout" (in))
  )
)

(define-function gtk_hbox_get_type
  (c-name "gtk_hbox_get_type")
  (return-type "GType")
)

(define-function gtk_hbox_new
  (is-constructor-of "GtkHBox")
  (c-name "gtk_hbox_new")
  (caller-owns-return #t)
  (return-type "GtkWidget*")
  (properties
    '("homogeneous" (optional) (argname "homogeneous"))
    '("spacing" (optional) (argname "spacing"))
  )
)

(define-function gtk_hpaned_get_type
  (c-name "gtk_hpaned_get_type")
  (return-type "GType")
)

(define-function gtk_hpaned_new
  (is-constructor-of "GtkHPaned")
  (c-name "gtk_hpaned_new")
  (caller-owns-return #t)
  (return-type "GtkWidget*")
)

(define-function gtk_hruler_get_type
  (c-name "gtk_hruler_get_type")
  (return-type "GType")
)

(define-function gtk_hruler_new
  (is-constructor-of "GtkHRuler")
  (c-name "gtk_hruler_new")
  (caller-owns-return #t)
  (return-type "GtkWidget*")
)

(define-function gtk_hscale_get_type
  (c-name "gtk_hscale_get_type")
  (return-type "GType")
)

(define-function gtk_hscale_new
  (is-constructor-of "GtkHScale")
  (c-name "gtk_hscale_new")
  (caller-owns-return #t)
  (return-type "GtkWidget*")
  (properties
    '("adjustment" (optional) (argname "adjustment"))
  )
)

(define-function gtk_hscale_new_with_range
  (is-constructor-of "GtkHScale")
  (c-name "gtk_hscale_new_with_range")
  (caller-owns-return #t)
  (return-type "GtkWidget*")
  (parameters
    '("gdouble" "min" (in))
    '("gdouble" "max" (in))
    '("gdouble" "step" (in))
  )
)

(define-function gtk_hscrollbar_get_type
  (c-name "gtk_hscrollbar_get_type")
  (return-type "GType")
)

(define-function gtk_hscrollbar_new
  (is-constructor-of "GtkHScrollbar")
  (c-name "gtk_hscrollbar_new")
  (caller-owns-return #t)
  (return-type "GtkWidget*")
  (properties
    '("adjustment" (optional) (argname "adjustment"))
  )
)

(define-function gtk_hseparator_get_type
  (c-name "gtk_hseparator_get_type")
  (return-type "GType")
)

(define-function gtk_hseparator_new
  (is-constructor-of "GtkHSeparator")
  (c-name "gtk_hseparator_new")
  (caller-owns-return #t)
  (return-type "GtkWidget*")
)

(define-function gtk_icon_factory_get_type
  (c-name "gtk_icon_factory_get_type")
  (return-type "GType")
)

(define-function gtk_icon_factory_new
  (is-constructor-of "GtkIconFactory")
  (c-name "gtk_icon_factory_new")
  (caller-owns-return #t)
  (return-type "GtkIconFactory*")
)

(define-method add
  (of-object "GtkIconFactory")
  (c-name "gtk_icon_factory_add")
  (return-type "none")
  (parameters
    '("const-gchar*" "stock_id" (in))
    '("GtkIconSet*" "icon_set" (in))
  )
)

(define-method lookup
  (of-object "GtkIconFactory")
  (c-name "gtk_icon_factory_lookup")
  (return-type "GtkIconSet*")
  (parameters
    '("const-gchar*" "stock_id" (in))
  )
)

(define-method add_default
  (of-object "GtkIconFactory")
  (c-name "gtk_icon_factory_add_default")
  (return-type "none")
)

(define-method remove_default
  (of-object "GtkIconFactory")
  (c-name "gtk_icon_factory_remove_default")
  (return-type "none")
)

(define-function icon_factory_lookup_default
  (c-name "gtk_icon_factory_lookup_default")
  (return-type "GtkIconSet*")
  (parameters
    '("const-gchar*" "stock_id" (in))
  )
)

(define-function icon_size_lookup
  (c-name "gtk_icon_size_lookup")
  (return-type "gboolean")
  (parameters
    '("GtkIconSize" "size" (in))
    '("gint*" "width" (out))
    '("gint*" "height" (out))
  )
)

(define-function icon_size_lookup_for_settings
  (c-name "gtk_icon_size_lookup_for_settings")
  (return-type "gboolean")
  (parameters
    '("GtkSettings*" "settings" (in))
    '("GtkIconSize" "size" (in))
    '("gint*" "width" (out))
    '("gint*" "height" (out))
  )
)

(define-function icon_size_register
  (c-name "gtk_icon_size_register")
  (return-type "GtkIconSize")
  (parameters
    '("const-gchar*" "name" (in))
    '("gint" "width" (in))
    '("gint" "height" (in))
  )
)

(define-function icon_size_register_alias
  (c-name "gtk_icon_size_register_alias")
  (return-type "none")
  (parameters
    '("const-gchar*" "alias" (in))
    '("GtkIconSize" "target" (in))
  )
)

(define-function icon_size_from_name
  (c-name "gtk_icon_size_from_name")
  (return-type "GtkIconSize")
  (parameters
    '("const-gchar*" "name" (in))
  )
)

(define-function icon_size_get_name
  (c-name "gtk_icon_size_get_name")
  (return-type "const-gchar*")
  (parameters
    '("GtkIconSize" "size" (in))
  )
)

(define-function icon_set_get_type
  (c-name "gtk_icon_set_get_type")
  (return-type "GType")
)

(define-function icon_set_new
  (c-name "gtk_icon_set_new")
  (return-type "GtkIconSet*")
)

(define-function icon_set_new_from_pixbuf
  (is-constructor-of "GtkIconSet")
  (c-name "gtk_icon_set_new_from_pixbuf")
  (caller-owns-return #t)
  (return-type "GtkIconSet*")
  (parameters
    '("GdkPixbuf*" "pixbuf" (in))
  )
)

(define-method ref
  (of-object "GtkIconSet")
  (c-name "gtk_icon_set_ref")
  (return-type "GtkIconSet*")
)

(define-method unref
  (of-object "GtkIconSet")
  (c-name "gtk_icon_set_unref")
  (return-type "none")
)

(define-method copy
  (of-object "GtkIconSet")
  (c-name "gtk_icon_set_copy")
  (caller-owns-return #t)
  (return-type "GtkIconSet*")
)

(define-method render_icon
  (of-object "GtkIconSet")
  (c-name "gtk_icon_set_render_icon")
  (caller-owns-return #t)
  (return-type "GdkPixbuf*")
  (parameters
    '("GtkStyle*" "style" (in))
    '("GtkTextDirection" "direction" (in))
    '("GtkStateType" "state" (in))
    '("GtkIconSize" "size" (in))
    '("GtkWidget*" "widget" (in) (default "NULL") (null-ok))
    '("const-char*" "detail" (in) (default "NULL") (null-ok))
  )
)

(define-method add_source
  (of-object "GtkIconSet")
  (c-name "gtk_icon_set_add_source")
  (return-type "none")
  (parameters
    '("const-GtkIconSource*" "source" (in))
  )
)

(define-method get_sizes
  (of-object "GtkIconSet")
  (c-name "gtk_icon_set_get_sizes")
  (return-type "none")
  (parameters
    '("GtkIconSize*[]" "sizes" (out))
    '("gint*" "n_sizes" (out))
  )
)

(define-function gtk_icon_source_get_type
  (c-name "gtk_icon_source_get_type")
  (return-type "GType")
)

(define-function icon_source_new
  (is-constructor-of "GtkIconSource")
  (c-name "gtk_icon_source_new")
  (caller-owns-return #t)
  (return-type "GtkIconSource*")
)

(define-method copy
  (of-object "GtkIconSource")
  (c-name "gtk_icon_source_copy")
  (caller-owns-return #t)
  (return-type "GtkIconSource*")
)

(define-method free
  (of-object "GtkIconSource")
  (c-name "gtk_icon_source_free")
  (return-type "none")
)

(define-method set_filename
  (of-object "GtkIconSource")
  (c-name "gtk_icon_source_set_filename")
  (return-type "none")
  (parameters
    '("const-gchar*" "filename" (in))
  )
)

(define-method set_icon_name
  (of-object "GtkIconSource")
  (c-name "gtk_icon_source_set_icon_name")
  (return-type "none")
  (parameters
    '("const-gchar*" "icon_name" (in))
  )
)

(define-method set_pixbuf
  (of-object "GtkIconSource")
  (c-name "gtk_icon_source_set_pixbuf")
  (return-type "none")
  (parameters
    '("GdkPixbuf*" "pixbuf" (in))
  )
)

(define-method get_filename
  (of-object "GtkIconSource")
  (c-name "gtk_icon_source_get_filename")
  (return-type "const-gchar*")
)

(define-method get_icon_name
  (of-object "GtkIconSource")
  (c-name "gtk_icon_source_get_icon_name")
  (return-type "const-gchar*")
)

(define-method get_pixbuf
  (of-object "GtkIconSource")
  (c-name "gtk_icon_source_get_pixbuf")
  (return-type "GdkPixbuf*")
)

(define-method set_direction_wildcarded
  (of-object "GtkIconSource")
  (c-name "gtk_icon_source_set_direction_wildcarded")
  (return-type "none")
  (parameters
    '("gboolean" "setting" (in))
  )
)

(define-method set_state_wildcarded
  (of-object "GtkIconSource")
  (c-name "gtk_icon_source_set_state_wildcarded")
  (return-type "none")
  (parameters
    '("gboolean" "setting" (in))
  )
)

(define-method set_size_wildcarded
  (of-object "GtkIconSource")
  (c-name "gtk_icon_source_set_size_wildcarded")
  (return-type "none")
  (parameters
    '("gboolean" "setting" (in))
  )
)

(define-method get_size_wildcarded
  (of-object "GtkIconSource")
  (c-name "gtk_icon_source_get_size_wildcarded")
  (return-type "gboolean")
)

(define-method get_state_wildcarded
  (of-object "GtkIconSource")
  (c-name "gtk_icon_source_get_state_wildcarded")
  (return-type "gboolean")
)

(define-method get_direction_wildcarded
  (of-object "GtkIconSource")
  (c-name "gtk_icon_source_get_direction_wildcarded")
  (return-type "gboolean")
)

(define-method set_direction
  (of-object "GtkIconSource")
  (c-name "gtk_icon_source_set_direction")
  (return-type "none")
  (parameters
    '("GtkTextDirection" "direction" (in))
  )
)

(define-method set_state
  (of-object "GtkIconSource")
  (c-name "gtk_icon_source_set_state")
  (return-type "none")
  (parameters
    '("GtkStateType" "state" (in))
  )
)

(define-method set_size
  (of-object "GtkIconSource")
  (c-name "gtk_icon_source_set_size")
  (return-type "none")
  (parameters
    '("GtkIconSize" "size" (in))
  )
)

(define-method get_direction
  (of-object "GtkIconSource")
  (c-name "gtk_icon_source_get_direction")
  (return-type "GtkTextDirection")
)

(define-method get_state
  (of-object "GtkIconSource")
  (c-name "gtk_icon_source_get_state")
  (return-type "GtkStateType")
)

(define-method get_size
  (of-object "GtkIconSource")
  (c-name "gtk_icon_source_get_size")
  (return-type "GtkIconSize")
)

(define-function icon_theme_error_quark
  (c-name "gtk_icon_theme_error_quark")
  (return-type "GQuark")
)

(define-function gtk_icon_theme_get_type
  (c-name "gtk_icon_theme_get_type")
  (return-type "GType")
)

(define-function gtk_icon_theme_new
  (is-constructor-of "GtkIconTheme")
  (c-name "gtk_icon_theme_new")
  (caller-owns-return #t)
  (return-type "GtkIconTheme*")
)

(define-function icon_theme_get_default
  (c-name "gtk_icon_theme_get_default")
  (return-type "GtkIconTheme*")
)

(define-function icon_theme_get_for_screen
  (c-name "gtk_icon_theme_get_for_screen")
  (return-type "GtkIconTheme*")
  (parameters
    '("GdkScreen*" "screen" (in))
  )
)

(define-method set_screen
  (of-object "GtkIconTheme")
  (c-name "gtk_icon_theme_set_screen")
  (return-type "none")
  (parameters
    '("GdkScreen*" "screen" (in))
  )
)

(define-method set_search_path
  (of-object "GtkIconTheme")
  (c-name "gtk_icon_theme_set_search_path")
  (return-type "none")
  (parameters
    '("const-gchar*[]" "path" (in))
    '("gint" "n_elements" (in))
  )
)

(define-method get_search_path
  (of-object "GtkIconTheme")
  (c-name "gtk_icon_theme_get_search_path")
  (return-type "none")
  (parameters
    '("gchar**[]" "path" (out))
    '("gint*" "n_elements" (out))
  )
)

(define-method append_search_path
  (of-object "GtkIconTheme")
  (c-name "gtk_icon_theme_append_search_path")
  (return-type "none")
  (parameters
    '("const-gchar*" "path" (in))
  )
)

(define-method prepend_search_path
  (of-object "GtkIconTheme")
  (c-name "gtk_icon_theme_prepend_search_path")
  (return-type "none")
  (parameters
    '("const-gchar*" "path" (in))
  )
)

(define-method set_custom_theme
  (of-object "GtkIconTheme")
  (c-name "gtk_icon_theme_set_custom_theme")
  (return-type "none")
  (parameters
    '("const-gchar*" "theme_name" (in))
  )
)

(define-method has_icon
  (of-object "GtkIconTheme")
  (c-name "gtk_icon_theme_has_icon")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "icon_name" (in))
  )
)

(define-method lookup_icon
  (of-object "GtkIconTheme")
  (c-name "gtk_icon_theme_lookup_icon")
  (caller-owns-return #t)
  (return-type "GtkIconInfo*")
  (parameters
    '("const-gchar*" "icon_name" (in))
    '("gint" "size" (in))
    '("GtkIconLookupFlags" "flags" (in))
  )
)

(define-method load_icon
  (of-object "GtkIconTheme")
  (c-name "gtk_icon_theme_load_icon")
  (caller-owns-return #t)
  (return-type "GdkPixbuf*")
  (parameters
    '("const-gchar*" "icon_name" (in))
    '("gint" "size" (in))
    '("GtkIconLookupFlags" "flags" (in))
    '("GError**" "error" (out))
  )
)

(define-method list_icons
  (of-object "GtkIconTheme")
  (c-name "gtk_icon_theme_list_icons")
  (caller-owns-return #t)
  (return-type "GList[gchar*]")
  (parameters
    '("const-gchar*" "context" (in) (null-ok))
  )
)

(define-method get_example_icon_name
  (of-object "GtkIconTheme")
  (c-name "gtk_icon_theme_get_example_icon_name")
  (caller-owns-return #t)
  (return-type "char*")
)

(define-method rescan_if_needed
  (of-object "GtkIconTheme")
  (c-name "gtk_icon_theme_rescan_if_needed")
  (return-type "gboolean")
)

(define-function icon_theme_add_builtin_icon
  (c-name "gtk_icon_theme_add_builtin_icon")
  (return-type "none")
  (parameters
    '("const-gchar*" "icon_name" (in))
    '("gint" "size" (in))
    '("GdkPixbuf*" "pixbuf" (in))
  )
)

(define-function gtk_icon_info_get_type
  (c-name "gtk_icon_info_get_type")
  (return-type "GType")
)

(define-method copy
  (of-object "GtkIconInfo")
  (c-name "gtk_icon_info_copy")
  (caller-owns-return #t)
  (return-type "GtkIconInfo*")
)

(define-method free
  (of-object "GtkIconInfo")
  (c-name "gtk_icon_info_free")
  (return-type "none")
)

(define-method get_base_size
  (of-object "GtkIconInfo")
  (c-name "gtk_icon_info_get_base_size")
  (return-type "gint")
)

(define-method get_filename
  (of-object "GtkIconInfo")
  (c-name "gtk_icon_info_get_filename")
  (return-type "const-gchar*")
)

(define-method get_builtin_pixbuf
  (of-object "GtkIconInfo")
  (c-name "gtk_icon_info_get_builtin_pixbuf")
  (return-type "GdkPixbuf*")
)

(define-method load_icon
  (of-object "GtkIconInfo")
  (c-name "gtk_icon_info_load_icon")
  (caller-owns-return #t)
  (return-type "GdkPixbuf*")
  (parameters
    '("GError**" "error" (out))
  )
)

(define-method set_raw_coordinates
  (of-object "GtkIconInfo")
  (c-name "gtk_icon_info_set_raw_coordinates")
  (return-type "none")
  (parameters
    '("gboolean" "raw_coordinates" (in))
  )
)

(define-method get_embedded_rect
  (of-object "GtkIconInfo")
  (c-name "gtk_icon_info_get_embedded_rect")
  (return-type "gboolean")
  (parameters
    '("GdkRectangle*" "rectangle" (out))
  )
)

(define-method get_attach_points
  (of-object "GtkIconInfo")
  (c-name "gtk_icon_info_get_attach_points")
  (return-type "gboolean")
  (parameters
    '("GdkPoint*[]" "points" (out))
    '("gint*" "n_points" (out))
  )
)

(define-method get_display_name
  (of-object "GtkIconInfo")
  (c-name "gtk_icon_info_get_display_name")
  (return-type "const-gchar*")
)

(define-method get_icon_sizes
  (of-object "GtkIconTheme")
  (c-name "gtk_icon_theme_get_icon_sizes")
  (caller-owns-return #t)
  (return-type "gint*")
  (parameters
    '("const-gchar*" "icon_name" (in))
  )
)

(define-function gtk_icon_view_get_type
  (c-name "gtk_icon_view_get_type")
  (return-type "GType")
)

(define-function gtk_icon_view_new
  (is-constructor-of "GtkIconView")
  (c-name "gtk_icon_view_new")
  (caller-owns-return #t)
  (return-type "GtkWidget*")
)

(define-function gtk_icon_view_new_with_model
  (c-name "gtk_icon_view_new_with_model")
  (is-constructor-of "GtkIconView")
  (caller-owns-return #t)
  (return-type "GtkWidget*")
  (properties
    '("model" (argname "model"))
  )
)

(define-method set_model
  (of-object "GtkIconView")
  (c-name "gtk_icon_view_set_model")
  (return-type "none")
  (parameters
    '("GtkTreeModel*" "model" (in) (default "NULL") (null-ok))
  )
)

(define-method get_model
  (of-object "GtkIconView")
  (c-name "gtk_icon_view_get_model")
  (return-type "GtkTreeModel*")
)

(define-method set_text_column
  (of-object "GtkIconView")
  (c-name "gtk_icon_view_set_text_column")
  (return-type "none")
  (parameters
    '("gint" "column" (in))
  )
)

(define-method get_text_column
  (of-object "GtkIconView")
  (c-name "gtk_icon_view_get_text_column")
  (return-type "gint")
)

(define-method set_markup_column
  (of-object "GtkIconView")
  (c-name "gtk_icon_view_set_markup_column")
  (return-type "none")
  (parameters
    '("gint" "column" (in))
  )
)

(define-method get_markup_column
  (of-object "GtkIconView")
  (c-name "gtk_icon_view_get_markup_column")
  (return-type "gint")
)

(define-method set_pixbuf_column
  (of-object "GtkIconView")
  (c-name "gtk_icon_view_set_pixbuf_column")
  (return-type "none")
  (parameters
    '("gint" "column" (in))
  )
)

(define-method get_pixbuf_column
  (of-object "GtkIconView")
  (c-name "gtk_icon_view_get_pixbuf_column")
  (return-type "gint")
)

(define-method set_orientation
  (of-object "GtkIconView")
  (c-name "gtk_icon_view_set_orientation")
  (return-type "none")
  (parameters
    '("GtkOrientation" "orientation" (in))
  )
)

(define-method get_orientation
  (of-object "GtkIconView")
  (c-name "gtk_icon_view_get_orientation")
  (return-type "GtkOrientation")
)

(define-method set_columns
  (of-object "GtkIconView")
  (c-name "gtk_icon_view_set_columns")
  (return-type "none")
  (parameters
    '("gint" "columns" (in))
  )
)

(define-method get_columns
  (of-object "GtkIconView")
  (c-name "gtk_icon_view_get_columns")
  (return-type "gint")
)

(define-method set_item_width
  (of-object "GtkIconView")
  (c-name "gtk_icon_view_set_item_width")
  (return-type "none")
  (parameters
    '("gint" "item_width" (in))
  )
)

(define-method get_item_width
  (of-object "GtkIconView")
  (c-name "gtk_icon_view_get_item_width")
  (return-type "gint")
)

(define-method set_spacing
  (of-object "GtkIconView")
  (c-name "gtk_icon_view_set_spacing")
  (return-type "none")
  (parameters
    '("gint" "spacing" (in))
  )
)

(define-method get_spacing
  (of-object "GtkIconView")
  (c-name "gtk_icon_view_get_spacing")
  (return-type "gint")
)

(define-method set_row_spacing
  (of-object "GtkIconView")
  (c-name "gtk_icon_view_set_row_spacing")
  (return-type "none")
  (parameters
    '("gint" "row_spacing" (in))
  )
)

(define-method get_row_spacing
  (of-object "GtkIconView")
  (c-name "gtk_icon_view_get_row_spacing")
  (return-type "gint")
)

(define-method set_column_spacing
  (of-object "GtkIconView")
  (c-name "gtk_icon_view_set_column_spacing")
  (return-type "none")
  (parameters
    '("gint" "column_spacing" (in))
  )
)

(define-method get_column_spacing
  (of-object "GtkIconView")
  (c-name "gtk_icon_view_get_column_spacing")
  (return-type "gint")
)

(define-method set_margin
  (of-object "GtkIconView")
  (c-name "gtk_icon_view_set_margin")
  (return-type "none")
  (parameters
    '("gint" "margin" (in))
  )
)

(define-method get_margin
  (of-object "GtkIconView")
  (c-name "gtk_icon_view_get_margin")
  (return-type "gint")
)

(define-method get_path_at_pos
  (of-object "GtkIconView")
  (c-name "gtk_icon_view_get_path_at_pos")
  (caller-owns-return #t)
  (return-type "GtkTreePath*")
  (parameters
    '("gint" "x" (in))
    '("gint" "y" (in))
  )
)

(define-method get_item_at_pos
  (of-object "GtkIconView")
  (c-name "gtk_icon_view_get_item_at_pos")
  (return-type "gboolean")
  (parameters
    '("gint" "x" (in))
    '("gint" "y" (in))
    '("GtkTreePath**" "path" (out))
    '("GtkCellRenderer**" "cell" (out))
  )
)

(define-method get_visible_range
  (of-object "GtkIconView")
  (c-name "gtk_icon_view_get_visible_range")
  (return-type "gboolean")
  (parameters
    '("GtkTreePath**" "start_path" (out))
    '("GtkTreePath**" "end_path" (out))
  )
)

(define-method selected_foreach
  (of-object "GtkIconView")
  (c-name "gtk_icon_view_selected_foreach")
  (return-type "none")
  (parameters
    '("GtkIconViewForeachFunc" "func" (in))
    '("gpointer" "data" (in) (null-ok))
  )
)

(define-method set_selection_mode
  (of-object "GtkIconView")
  (c-name "gtk_icon_view_set_selection_mode")
  (return-type "none")
  (parameters
    '("GtkSelectionMode" "mode" (in))
  )
)

(define-method get_selection_mode
  (of-object "GtkIconView")
  (c-name "gtk_icon_view_get_selection_mode")
  (return-type "GtkSelectionMode")
)

(define-method select_path
  (of-object "GtkIconView")
  (c-name "gtk_icon_view_select_path")
  (return-type "none")
  (parameters
    '("GtkTreePath*" "path" (in))
  )
)

(define-method unselect_path
  (of-object "GtkIconView")
  (c-name "gtk_icon_view_unselect_path")
  (return-type "none")
  (parameters
    '("GtkTreePath*" "path" (in))
  )
)

(define-method path_is_selected
  (of-object "GtkIconView")
  (c-name "gtk_icon_view_path_is_selected")
  (return-type "gboolean")
  (parameters
    '("GtkTreePath*" "path" (in))
  )
)

(define-method get_selected_items
  (of-object "GtkIconView")
  (c-name "gtk_icon_view_get_selected_items")
  (caller-owns-return #t)
  (return-type "GList[GtkTreePath]")
)

(define-method select_all
  (of-object "GtkIconView")
  (c-name "gtk_icon_view_select_all")
  (return-type "none")
)

(define-method unselect_all
  (of-object "GtkIconView")
  (c-name "gtk_icon_view_unselect_all")
  (return-type "none")
)

(define-method item_activated
  (of-object "GtkIconView")
  (c-name "gtk_icon_view_item_activated")
  (return-type "none")
  (parameters
    '("GtkTreePath*" "path" (in))
  )
)

(define-method set_cursor
  (of-object "GtkIconView")
  (c-name "gtk_icon_view_set_cursor")
  (return-type "none")
  (parameters
    '("GtkTreePath*" "path" (in))
    '("GtkCellRenderer*" "cell" (in))
    '("gboolean" "start_editing" (in))
  )
)

(define-method get_cursor
  (of-object "GtkIconView")
  (c-name "gtk_icon_view_get_cursor")
  (return-type "gboolean")
  (parameters
    '("GtkTreePath**" "path" (out))
    '("GtkCellRenderer**" "cell" (out))
  )
)

(define-method scroll_to_path
  (of-object "GtkIconView")
  (c-name "gtk_icon_view_scroll_to_path")
  (return-type "none")
  (parameters
    '("GtkTreePath*" "path" (in))
    '("gboolean" "use_align" (in))
    '("gfloat" "row_align" (in))
    '("gfloat" "col_align" (in))
  )
)

(define-method enable_model_drag_source
  (of-object "GtkIconView")
  (c-name "gtk_icon_view_enable_model_drag_source")
  (return-type "none")
  (parameters
    '("GdkModifierType" "start_button_mask" (in))
    '("const-GtkTargetEntry[]" "targets" (in))
    '("gint" "n_targets" (in))
    '("GdkDragAction" "actions" (in))
  )
)

(define-method enable_model_drag_dest
  (of-object "GtkIconView")
  (c-name "gtk_icon_view_enable_model_drag_dest")
  (return-type "none")
  (parameters
    '("const-GtkTargetEntry[]" "targets" (in))
    '("gint" "n_targets" (in))
    '("GdkDragAction" "actions" (in))
  )
)

(define-method unset_model_drag_source
  (of-object "GtkIconView")
  (c-name "gtk_icon_view_unset_model_drag_source")
  (return-type "none")
)

(define-method unset_model_drag_dest
  (of-object "GtkIconView")
  (c-name "gtk_icon_view_unset_model_drag_dest")
  (return-type "none")
)

(define-method set_reorderable
  (of-object "GtkIconView")
  (c-name "gtk_icon_view_set_reorderable")
  (return-type "none")
  (parameters
    '("gboolean" "reorderable" (in))
  )
)

(define-method get_reorderable
  (of-object "GtkIconView")
  (c-name "gtk_icon_view_get_reorderable")
  (return-type "gboolean")
)

(define-method set_drag_dest_item
  (of-object "GtkIconView")
  (c-name "gtk_icon_view_set_drag_dest_item")
  (return-type "none")
  (parameters
    '("GtkTreePath*" "path" (in))
    '("GtkIconViewDropPosition" "pos" (in))
  )
)

(define-method get_drag_dest_item
  (of-object "GtkIconView")
  (c-name "gtk_icon_view_get_drag_dest_item")
  (return-type "none")
  (parameters
    '("GtkTreePath**" "path" (out))
    '("GtkIconViewDropPosition*" "pos" (out))
  )
)

(define-method get_dest_item_at_pos
  (of-object "GtkIconView")
  (c-name "gtk_icon_view_get_dest_item_at_pos")
  (return-type "gboolean")
  (parameters
    '("gint" "drag_x" (in))
    '("gint" "drag_y" (in))
    '("GtkTreePath**" "path" (out))
    '("GtkIconViewDropPosition*" "pos" (out))
  )
)

(define-method create_drag_icon
  (of-object "GtkIconView")
  (c-name "gtk_icon_view_create_drag_icon")
  (return-type "GdkPixmap*")
  (parameters
    '("GtkTreePath*" "path" (in))
  )
)

(define-function gtk_image_get_type
  (c-name "gtk_image_get_type")
  (return-type "GType")
)

(define-function gtk_image_new
  (is-constructor-of "GtkImage")
  (c-name "gtk_image_new")
  (caller-owns-return #t)
  (return-type "GtkWidget*")
)

(define-function image_new_from_pixmap
  (is-constructor-of "GtkImage")
  (c-name "gtk_image_new_from_pixmap")
  (caller-owns-return #t)
  (return-type "GtkWidget*")
  (parameters
    '("GdkPixmap*" "pixmap" (in) (null-ok))
    '("GdkBitmap*" "mask" (in) (null-ok))
  )
)

(define-function image_new_from_image
  (is-constructor-of "GtkImage")
  (c-name "gtk_image_new_from_image")
  (caller-owns-return #t)
  (return-type "GtkWidget*")
  (parameters
    '("GdkImage*" "image" (in) (null-ok))
    '("GdkBitmap*" "mask" (in) (null-ok))
  )
)

(define-function image_new_from_file
  (is-constructor-of "GtkImage")
  (c-name "gtk_image_new_from_file")
  (caller-owns-return #t)
  (return-type "GtkWidget*")
  (parameters
    '("const-gchar*" "filename" (in))
  )
)

(define-function image_new_from_pixbuf
  (is-constructor-of "GtkImage")
  (c-name "gtk_image_new_from_pixbuf")
  (caller-owns-return #t)
  (return-type "GtkWidget*")
  (parameters
    '("GdkPixbuf*" "pixbuf" (in) (null-ok))
  )
)

(define-function image_new_from_stock
  (c-name "gtk_image_new_from_stock")
  (caller-owns-return #t)
  (return-type "GtkWidget*")
  (parameters
    '("const-gchar*" "stock_id" (in))
    '("GtkIconSize" "size" (in))
  )
)

(define-function image_new_from_icon_set
  (c-name "gtk_image_new_from_icon_set")
  (caller-owns-return #t)
  (return-type "GtkWidget*")
  (parameters
    '("GtkIconSet*" "icon_set" (in))
    '("GtkIconSize" "size" (in))
  )
)

(define-function image_new_from_animation
  (c-name "gtk_image_new_from_animation")
  (caller-owns-return #t)
  (return-type "GtkWidget*")
  (parameters
    '("GdkPixbufAnimation*" "animation" (in))
  )
)

(define-method clear
  (of-object "GtkImage")
  (c-name "gtk_image_clear")
  (return-type "none")
)

(define-method set_from_pixmap
  (of-object "GtkImage")
  (c-name "gtk_image_set_from_pixmap")
  (return-type "none")
  (parameters
    '("GdkPixmap*" "pixmap" (in))
    '("GdkBitmap*" "mask" (in) (null-ok))
  )
)

(define-method set_from_image
  (of-object "GtkImage")
  (c-name "gtk_image_set_from_image")
  (return-type "none")
  (parameters
    '("GdkImage*" "gdk_image" (in) (null-ok))
    '("GdkBitmap*" "mask" (in) (null-ok))
  )
)

(define-method set_from_file
  (of-object "GtkImage")
  (c-name "gtk_image_set_from_file")
  (return-type "none")
  (parameters
    '("const-gchar*" "filename" (in) (null-ok))
  )
)

(define-method set_from_pixbuf
  (of-object "GtkImage")
  (c-name "gtk_image_set_from_pixbuf")
  (return-type "none")
  (parameters
    '("GdkPixbuf*" "pixbuf" (in) (null-ok))
  )
)

(define-method set_from_stock
  (of-object "GtkImage")
  (c-name "gtk_image_set_from_stock")
  (return-type "none")
  (parameters
    '("const-gchar*" "stock_id" (in))
    '("GtkIconSize" "size" (in))
  )
)

(define-method set_from_icon_set
  (of-object "GtkImage")
  (c-name "gtk_image_set_from_icon_set")
  (return-type "none")
  (parameters
    '("GtkIconSet*" "icon_set" (in))
    '("GtkIconSize" "size" (in))
  )
)

(define-method set_from_animation
  (of-object "GtkImage")
  (c-name "gtk_image_set_from_animation")
  (return-type "none")
  (parameters
    '("GdkPixbufAnimation*" "animation" (in))
  )
)

(define-method get_storage_type
  (of-object "GtkImage")
  (c-name "gtk_image_get_storage_type")
  (return-type "GtkImageType")
)

(define-method get_pixmap
  (of-object "GtkImage")
  (c-name "gtk_image_get_pixmap")
  (return-type "none")
  (parameters
    '("GdkPixmap**" "pixmap" (out))
    '("GdkBitmap**" "mask" (out))
  )
)

(define-method get_image
  (of-object "GtkImage")
  (c-name "gtk_image_get_image")
  (return-type "none")
  (parameters
    '("GdkImage**" "gdk_image" (out))
    '("GdkBitmap**" "mask" (out))
  )
)

(define-method get_pixbuf
  (of-object "GtkImage")
  (c-name "gtk_image_get_pixbuf")
  (return-type "GdkPixbuf*")
)

(define-method get_stock
  (of-object "GtkImage")
  (c-name "gtk_image_get_stock")
  (return-type "none")
  (parameters
    '("gchar**" "stock_id" (out))
    '("GtkIconSize*" "size" (out))
  )
)

(define-method get_icon_set
  (of-object "GtkImage")
  (c-name "gtk_image_get_icon_set")
  (return-type "none")
  (parameters
    '("GtkIconSet**" "icon_set" (out))
    '("GtkIconSize*" "size" (out))
  )
)

(define-method get_animation
  (of-object "GtkImage")
  (c-name "gtk_image_get_animation")
  (return-type "GdkPixbufAnimation*")
)

(define-method set
  (of-object "GtkImage")
  (c-name "gtk_image_set")
  (return-type "none")
  (parameters
    '("GdkImage*" "val" (in))
    '("GdkBitmap*" "mask" (in))
  )
)

(define-method get
  (of-object "GtkImage")
  (c-name "gtk_image_get")
  (return-type "none")
  (parameters
    '("GdkImage**" "val" (out))
    '("GdkBitmap**" "mask" (out))
  )
)

(define-function image_new_from_icon_name
  (c-name "gtk_image_new_from_icon_name")
  (caller-owns-return #t)
  (return-type "GtkWidget*")
  (parameters
    '("const-gchar*" "icon_name" (in))
    '("GtkIconSize" "size" (in))
  )
)

(define-method set_from_icon_name
  (of-object "GtkImage")
  (c-name "gtk_image_set_from_icon_name")
  (return-type "none")
  (parameters
    '("const-gchar*" "icon_name" (in))
    '("GtkIconSize" "size" (in))
  )
)

(define-method set_pixel_size
  (of-object "GtkImage")
  (c-name "gtk_image_set_pixel_size")
  (return-type "none")
  (parameters
    '("gint" "pixel_size" (in))
  )
)

(define-method get_icon_name
  (of-object "GtkImage")
  (c-name "gtk_image_get_icon_name")
  (return-type "none")
  (parameters
    '("const-gchar**" "icon_name" (out))
    '("GtkIconSize*" "size" (out))
  )
)

(define-method get_pixel_size
  (of-object "GtkImage")
  (c-name "gtk_image_get_pixel_size")
  (return-type "gint")
)

(define-function gtk_image_menu_item_get_type
  (c-name "gtk_image_menu_item_get_type")
  (return-type "GType")
)

(define-function gtk_image_menu_item_new
  (is-constructor-of "GtkImageMenuItem")
  (c-name "gtk_image_menu_item_new")
  (caller-owns-return #t)
  (return-type "GtkWidget*")
)

(define-function gtk_image_menu_item_new_with_label
  (is-constructor-of "GtkImageMenuItem")
  (c-name "gtk_image_menu_item_new_with_label")
  (caller-owns-return #t)
  (return-type "GtkWidget*")
  (parameters
    '("const-gchar*" "label" (in))
  )
)

(define-function gtk_image_menu_item_new_with_mnemonic
  (is-constructor-of "GtkImageMenuItem")
  (c-name "gtk_image_menu_item_new_with_mnemonic")
  (caller-owns-return #t)
  (return-type "GtkWidget*")
  (parameters
    '("const-gchar*" "label" (in))
  )
)

(define-function gtk_image_menu_item_new_from_stock
  (is-constructor-of "GtkImageMenuItem")
  (c-name "gtk_image_menu_item_new_from_stock")
  (caller-owns-return #t)
  (return-type "GtkWidget*")
  (parameters
    '("const-gchar*" "stock_id" (in))
    '("GtkAccelGroup*" "accel_group" (in))
  )
)

(define-method set_image
  (of-object "GtkImageMenuItem")
  (c-name "gtk_image_menu_item_set_image")
  (return-type "none")
  (parameters
    '("GtkWidget*" "image" (in) (null-ok))
  )
)

(define-method get_image
  (of-object "GtkImageMenuItem")
  (c-name "gtk_image_menu_item_get_image")
  (return-type "GtkWidget*")
)

(define-function gtk_im_context_get_type
  (c-name "gtk_im_context_get_type")
  (return-type "GType")
)

(define-method set_client_window
  (of-object "GtkIMContext")
  (c-name "gtk_im_context_set_client_window")
  (return-type "none")
  (parameters
    '("GdkWindow*" "window" (in))
  )
)

(define-method get_preedit_string
  (of-object "GtkIMContext")
  (c-name "gtk_im_context_get_preedit_string")
  (return-type "none")
  (parameters
    '("gchar**" "str" (out))
    '("PangoAttrList**" "attrs" (out))
    '("gint*" "cursor_pos" (out))
  )
)

(define-method filter_keypress
  (of-object "GtkIMContext")
  (c-name "gtk_im_context_filter_keypress")
  (return-type "gboolean")
  (parameters
    '("GdkEventKey*" "event" (in))
  )
)

(define-method focus_in
  (of-object "GtkIMContext")
  (c-name "gtk_im_context_focus_in")
  (return-type "none")
)

(define-method focus_out
  (of-object "GtkIMContext")
  (c-name "gtk_im_context_focus_out")
  (return-type "none")
)

(define-method reset
  (of-object "GtkIMContext")
  (c-name "gtk_im_context_reset")
  (return-type "none")
)

(define-method set_cursor_location
  (of-object "GtkIMContext")
  (c-name "gtk_im_context_set_cursor_location")
  (return-type "none")
  (parameters
    '("GdkRectangle*" "area" (in))
  )
)

(define-method set_use_preedit
  (of-object "GtkIMContext")
  (c-name "gtk_im_context_set_use_preedit")
  (return-type "none")
  (parameters
    '("gboolean" "use_preedit" (in))
  )
)

(define-method set_surrounding
  (of-object "GtkIMContext")
  (c-name "gtk_im_context_set_surrounding")
  (return-type "none")
  (parameters
    '("const-gchar*" "text" (in))
    '("gint" "len" (in))
    '("gint" "cursor_index" (in))
  )
)

(define-method get_surrounding
  (of-object "GtkIMContext")
  (c-name "gtk_im_context_get_surrounding")
  (return-type "gboolean")
  (parameters
    '("gchar**" "text" (out))
    '("gint*" "cursor_index" (out))
  )
)

(define-method delete_surrounding
  (of-object "GtkIMContext")
  (c-name "gtk_im_context_delete_surrounding")
  (return-type "gboolean")
  (parameters
    '("gint" "offset" (in))
    '("gint" "n_chars" (in))
  )
)

(define-function gtk_im_context_simple_get_type
  (c-name "gtk_im_context_simple_get_type")
  (return-type "GType")
)

(define-function gtk_im_context_simple_new
  (is-constructor-of "GtkIMContextSimple")
  (c-name "gtk_im_context_simple_new")
  (caller-owns-return #t)
  (return-type "GtkIMContext*")
)

(define-method add_table
  (of-object "GtkIMContextSimple")
  (c-name "gtk_im_context_simple_add_table")
  (return-type "none")
  (parameters
    '("guint16*" "data" (in))
    '("gint" "max_seq_len" (in))
    '("gint" "n_seqs" (in))
  )
)

(define-function gtk_im_multicontext_get_type
  (c-name "gtk_im_multicontext_get_type")
  (return-type "GType")
)

(define-function gtk_im_multicontext_new
  (is-constructor-of "GtkIMMulticontext")
  (c-name "gtk_im_multicontext_new")
  (caller-owns-return #t)
  (return-type "GtkIMContext*")
)

(define-method append_menuitems
  (of-object "GtkIMMulticontext")
  (c-name "gtk_im_multicontext_append_menuitems")
  (return-type "none")
  (parameters
    '("GtkMenuShell*" "menushell" (in))
  )
)

(define-function gtk_input_dialog_get_type
  (c-name "gtk_input_dialog_get_type")
  (return-type "GType")
)

(define-function gtk_input_dialog_new
  (is-constructor-of "GtkInputDialog")
  (c-name "gtk_input_dialog_new")
  (caller-owns-return #t)
  (return-type "GtkWidget*")
)

(define-function gtk_invisible_get_type
  (c-name "gtk_invisible_get_type")
  (return-type "GType")
)

(define-function gtk_invisible_new
  (is-constructor-of "GtkInvisible")
  (c-name "gtk_invisible_new")
  (caller-owns-return #t)
  (return-type "GtkWidget*")
)

(define-function gtk_invisible_new_for_screen
  (is-constructor-of "GtkInvisible")
  (c-name "gtk_invisible_new_for_screen")
  (caller-owns-return #t)
  (return-type "GtkWidget*")
  (parameters
    '("GdkScreen*" "screen" (in))
  )
)

(define-method set_screen
  (of-object "GtkInvisible")
  (c-name "gtk_invisible_set_screen")
  (return-type "none")
  (parameters
    '("GdkScreen*" "screen" (in))
  )
)

(define-method get_screen
  (of-object "GtkInvisible")
  (c-name "gtk_invisible_get_screen")
  (return-type "GdkScreen*")
)

(define-function gtk_item_get_type
  (c-name "gtk_item_get_type")
  (return-type "GType")
)

(define-method select
  (of-object "GtkItem")
  (c-name "gtk_item_select")
  (return-type "none")
)

(define-method deselect
  (of-object "GtkItem")
  (c-name "gtk_item_deselect")
  (return-type "none")
)

(define-method toggle
  (of-object "GtkItem")
  (c-name "gtk_item_toggle")
  (return-type "none")
)

(define-function gtk_item_factory_get_type
  (c-name "gtk_item_factory_get_type")
  (return-type "GType")
)

(define-function gtk_item_factory_new
  (is-constructor-of "GtkItemFactory")
  (c-name "gtk_item_factory_new")
  (caller-owns-return #t)
  (return-type "GtkItemFactory*")
  (deprecated "use gtk.UIManager")
  (parameters
    '("GType" "container_type" (in))
    '("const-gchar*" "path" (in))
    '("GtkAccelGroup*" "accel_group" (in) (default "NULL") (null-ok))
  )
)

(define-method construct
  (of-object "GtkItemFactory")
  (c-name "gtk_item_factory_construct")
  (return-type "none")
  (parameters
    '("GType" "container_type" (in))
    '("const-gchar*" "path" (in))
    '("GtkAccelGroup*" "accel_group" (in))
  )
)

(define-function item_factory_add_foreign
  (c-name "gtk_item_factory_add_foreign")
  (return-type "none")
  (parameters
    '("GtkWidget*" "accel_widget" (in))
    '("const-gchar*" "full_path" (in))
    '("GtkAccelGroup*" "accel_group" (in))
    '("guint" "keyval" (in))
    '("GdkModifierType" "modifiers" (in))
  )
)

(define-function item_factory_from_widget
  (c-name "gtk_item_factory_from_widget")
  (return-type "GtkItemFactory*")
  (parameters
    '("GtkWidget*" "widget" (in))
  )
)

(define-function item_factory_path_from_widget
  (c-name "gtk_item_factory_path_from_widget")
  (return-type "const-gchar*")
  (parameters
    '("GtkWidget*" "widget" (in))
  )
)

(define-method get_item
  (of-object "GtkItemFactory")
  (c-name "gtk_item_factory_get_item")
  (return-type "GtkWidget*")
  (parameters
    '("const-gchar*" "path" (in))
  )
)

(define-method get_widget
  (of-object "GtkItemFactory")
  (c-name "gtk_item_factory_get_widget")
  (return-type "GtkWidget*")
  (parameters
    '("const-gchar*" "path" (in))
  )
)

(define-method get_widget_by_action
  (of-object "GtkItemFactory")
  (c-name "gtk_item_factory_get_widget_by_action")
  (return-type "GtkWidget*")
  (parameters
    '("guint" "action" (in))
  )
)

(define-method get_item_by_action
  (of-object "GtkItemFactory")
  (c-name "gtk_item_factory_get_item_by_action")
  (return-type "GtkWidget*")
  (parameters
    '("guint" "action" (in))
  )
)

(define-method create_item
  (of-object "GtkItemFactory")
  (c-name "gtk_item_factory_create_item")
  (return-type "none")
  (parameters
    '("GtkItemFactoryEntry*" "entry" (in))
    '("gpointer" "callback_data" (in) (null-ok))
    '("guint" "callback_type" (in))
  )
)

(define-method create_items
  (of-object "GtkItemFactory")
  (c-name "gtk_item_factory_create_items")
  (return-type "none")
  (parameters
    '("guint" "n_entries" (in))
    '("GtkItemFactoryEntry[]" "entries" (in))
    '("gpointer" "callback_data" (in) (null-ok))
  )
)

(define-method delete_item
  (of-object "GtkItemFactory")
  (c-name "gtk_item_factory_delete_item")
  (return-type "none")
  (parameters
    '("const-gchar*" "path" (in))
  )
)

(define-method delete_entry
  (of-object "GtkItemFactory")
  (c-name "gtk_item_factory_delete_entry")
  (return-type "none")
  (parameters
    '("GtkItemFactoryEntry*" "entry" (in))
  )
)

(define-method delete_entries
  (of-object "GtkItemFactory")
  (c-name "gtk_item_factory_delete_entries")
  (return-type "none")
  (parameters
    '("guint" "n_entries" (in))
    '("GtkItemFactoryEntry[]" "entries" (in))
  )
)

(define-method popup
  (of-object "GtkItemFactory")
  (c-name "gtk_item_factory_popup")
  (return-type "none")
  (parameters
    '("guint" "x" (in))
    '("guint" "y" (in))
    '("guint" "mouse_button" (in))
    '("guint32" "time" (in) (default "GDK_CURRENT_TIME"))
  )
)

(define-method popup_with_data
  (of-object "GtkItemFactory")
  (c-name "gtk_item_factory_popup_with_data")
  (return-type "none")
  (parameters
    '("gpointer" "popup_data" (in))
    '("GtkDestroyNotify" "destroy" (in))
    '("guint" "x" (in))
    '("guint" "y" (in))
    '("guint" "mouse_button" (in))
    '("guint32" "time" (in) (default "GDK_CURRENT_TIME"))
  )
)

(define-method popup_data
  (of-object "GtkItemFactory")
  (c-name "gtk_item_factory_popup_data")
  (return-type "gpointer")
)

(define-function item_factory_popup_data_from_widget
  (c-name "gtk_item_factory_popup_data_from_widget")
  (return-type "gpointer")
  (parameters
    '("GtkWidget*" "widget" (in))
  )
)

(define-method set_translate_func
  (of-object "GtkItemFactory")
  (c-name "gtk_item_factory_set_translate_func")
  (return-type "none")
  (parameters
    '("GtkTranslateFunc" "func" (in))
    '("gpointer" "data" (in) (null-ok))
    '("GtkDestroyNotify" "notify" (in))
  )
)

(define-function item_factory_from_path
  (c-name "gtk_item_factory_from_path")
  (return-type "GtkItemFactory*")
  (parameters
    '("const-gchar*" "path" (in))
  )
)

(define-function item_factory_create_menu_entries
  (c-name "gtk_item_factory_create_menu_entries")
  (return-type "none")
  (parameters
    '("guint" "n_entries" (in))
    '("GtkMenuEntry[]" "entries" (in))
  )
)

(define-function item_factories_path_delete
  (c-name "gtk_item_factories_path_delete")
  (return-type "none")
  (parameters
    '("const-gchar*" "ifactory_path" (in))
    '("const-gchar*" "path" (in))
  )
)

(define-method create_items_ac
  (of-object "GtkItemFactory")
  (c-name "gtk_item_factory_create_items_ac")
  (return-type "none")
  (parameters
    '("guint" "n_entries" (in))
    '("GtkItemFactoryEntry[]" "entries" (in))
    '("gpointer" "callback_data" (in))
    '("guint" "callback_type" (in))
  )
)

(define-function gtk_label_get_type
  (c-name "gtk_label_get_type")
  (return-type "GType")
)

(define-function gtk_label_new
  (is-constructor-of "GtkLabel")
  (c-name "gtk_label_new")
  (caller-owns-return #t)
  (return-type "GtkWidget*")
  (properties
    '("label" (optional) (argname "str"))
  )
)

(define-function gtk_label_new_with_mnemonic
  (is-constructor-of "GtkLabel")
  (c-name "gtk_label_new_with_mnemonic")
  (caller-owns-return #t)
  (return-type "GtkWidget*")
  (properties
    '("label" (optional) (argname "str"))
  )
)

(define-method set_text
  (of-object "GtkLabel")
  (c-name "gtk_label_set_text")
  (return-type "none")
  (parameters
    '("const-char*" "str" (in))
  )
)

(define-method get_text
  (of-object "GtkLabel")
  (c-name "gtk_label_get_text")
  (return-type "const-gchar*")
)

(define-method set_attributes
  (of-object "GtkLabel")
  (c-name "gtk_label_set_attributes")
  (return-type "none")
  (parameters
    '("PangoAttrList*" "attrs" (in))
  )
)

(define-method get_attributes
  (of-object "GtkLabel")
  (c-name "gtk_label_get_attributes")
  (return-type "PangoAttrList*")
)

(define-method set_label
  (of-object "GtkLabel")
  (c-name "gtk_label_set_label")
  (return-type "none")
  (parameters
    '("const-gchar*" "str" (in))
  )
)

(define-method get_label
  (of-object "GtkLabel")
  (c-name "gtk_label_get_label")
  (return-type "const-gchar*")
)

(define-method set_markup
  (of-object "GtkLabel")
  (c-name "gtk_label_set_markup")
  (return-type "none")
  (parameters
    '("const-gchar*" "str" (in))
  )
)

(define-method set_use_markup
  (of-object "GtkLabel")
  (c-name "gtk_label_set_use_markup")
  (return-type "none")
  (parameters
    '("gboolean" "setting" (in))
  )
)

(define-method get_use_markup
  (of-object "GtkLabel")
  (c-name "gtk_label_get_use_markup")
  (return-type "gboolean")
)

(define-method set_use_underline
  (of-object "GtkLabel")
  (c-name "gtk_label_set_use_underline")
  (return-type "none")
  (parameters
    '("gboolean" "setting" (in))
  )
)

(define-method get_use_underline
  (of-object "GtkLabel")
  (c-name "gtk_label_get_use_underline")
  (return-type "gboolean")
)

(define-method set_markup_with_mnemonic
  (of-object "GtkLabel")
  (c-name "gtk_label_set_markup_with_mnemonic")
  (return-type "none")
  (parameters
    '("const-gchar*" "str" (in))
  )
)

(define-method get_mnemonic_keyval
  (of-object "GtkLabel")
  (c-name "gtk_label_get_mnemonic_keyval")
  (return-type "guint")
)

(define-method set_mnemonic_widget
  (of-object "GtkLabel")
  (c-name "gtk_label_set_mnemonic_widget")
  (return-type "none")
  (parameters
    '("GtkWidget*" "widget" (in))
  )
)

(define-method get_mnemonic_widget
  (of-object "GtkLabel")
  (c-name "gtk_label_get_mnemonic_widget")
  (return-type "GtkWidget*")
)

(define-method set_text_with_mnemonic
  (of-object "GtkLabel")
  (c-name "gtk_label_set_text_with_mnemonic")
  (return-type "none")
  (parameters
    '("const-gchar*" "str" (in))
  )
)

(define-method set_justify
  (of-object "GtkLabel")
  (c-name "gtk_label_set_justify")
  (return-type "none")
  (parameters
    '("GtkJustification" "jtype" (in))
  )
)

(define-method get_justify
  (of-object "GtkLabel")
  (c-name "gtk_label_get_justify")
  (return-type "GtkJustification")
)

(define-method set_pattern
  (of-object "GtkLabel")
  (c-name "gtk_label_set_pattern")
  (return-type "none")
  (parameters
    '("const-gchar*" "pattern" (in))
  )
)

(define-method set_line_wrap
  (of-object "GtkLabel")
  (c-name "gtk_label_set_line_wrap")
  (return-type "none")
  (parameters
    '("gboolean" "wrap" (in))
  )
)

(define-method get_line_wrap
  (of-object "GtkLabel")
  (c-name "gtk_label_get_line_wrap")
  (return-type "gboolean")
)

(define-method set_selectable
  (of-object "GtkLabel")
  (c-name "gtk_label_set_selectable")
  (return-type "none")
  (parameters
    '("gboolean" "setting" (in))
  )
)

(define-method get_selectable
  (of-object "GtkLabel")
  (c-name "gtk_label_get_selectable")
  (return-type "gboolean")
)

(define-method select_region
  (of-object "GtkLabel")
  (c-name "gtk_label_select_region")
  (return-type "none")
  (parameters
    '("gint" "start_offset" (in))
    '("gint" "end_offset" (in))
  )
)

(define-method get_selection_bounds
  (of-object "GtkLabel")
  (c-name "gtk_label_get_selection_bounds")
  (return-type "gboolean")
  (parameters
    '("gint*" "start" (out))
    '("gint*" "end" (out))
  )
)

(define-method get_layout
  (of-object "GtkLabel")
  (c-name "gtk_label_get_layout")
  (return-type "PangoLayout*")
)

(define-method get_layout_offsets
  (of-object "GtkLabel")
  (c-name "gtk_label_get_layout_offsets")
  (return-type "none")
  (parameters
    '("gint*" "x" (out))
    '("gint*" "y" (out))
  )
)

(define-method set
  (of-object "GtkLabel")
  (c-name "gtk_label_set")
  (return-type "none")
  (deprecated "use GtkLabel.set_text")
  (parameters
    '("const-char*" "str" (in))
  )
)

(define-method get
  (of-object "GtkLabel")
  (c-name "gtk_label_get")
  (return-type "none")
  (deprecated "use GtkLabel.get_text")
  (parameters
    '("char**" "str" (out))
  )
)

(define-method parse_uline
  (of-object "GtkLabel")
  (c-name "gtk_label_parse_uline")
  (return-type "guint")
  (parameters
    '("const-gchar*" "string" (in))
  )
)

(define-method set_ellipsize
  (of-object "GtkLabel")
  (c-name "gtk_label_set_ellipsize")
  (return-type "none")
  (parameters
    '("PangoEllipsizeMode" "mode" (in))
  )
)

(define-method get_ellipsize
  (of-object "GtkLabel")
  (c-name "gtk_label_get_ellipsize")
  (return-type "PangoEllipsizeMode")
)

(define-method set_angle
  (of-object "GtkLabel")
  (c-name "gtk_label_set_angle")
  (return-type "none")
  (parameters
    '("gint" "angle" (in))
  )
)

(define-method get_angle
  (of-object "GtkLabel")
  (c-name "gtk_label_get_angle")
  (return-type "gint")
)

(define-method set_width_chars
  (of-object "GtkLabel")
  (c-name "gtk_label_set_width_chars")
  (return-type "none")
  (parameters
    '("gint" "n_chars" (in))
  )
)

(define-method get_width_chars
  (of-object "GtkLabel")
  (c-name "gtk_label_get_width_chars")
  (return-type "gint")
)

(define-method set_max_width_chars
  (of-object "GtkLabel")
  (c-name "gtk_label_set_max_width_chars")
  (return-type "none")
  (parameters
    '("gint" "n_chars" (in))
  )
)

(define-method get_max_width_chars
  (of-object "GtkLabel")
  (c-name "gtk_label_get_max_width_chars")
  (return-type "gint")
)

(define-method set_single_line_mode
  (of-object "GtkLabel")
  (c-name "gtk_label_set_single_line_mode")
  (return-type "none")
  (parameters
    '("gboolean" "single_line_mode" (in))
  )
)

(define-method get_single_line_mode
  (of-object "GtkLabel")
  (c-name "gtk_label_get_single_line_mode")
  (return-type "gboolean")
)

(define-function gtk_layout_get_type
  (c-name "gtk_layout_get_type")
  (return-type "GType")
)

(define-function gtk_layout_new
  (is-constructor-of "GtkLayout")
  (c-name "gtk_layout_new")
  (caller-owns-return #t)
  (return-type "GtkWidget*")
  (properties
    '("hadjustment" (optional) (argname "hadjustment"))
    '("vadjustment" (optional) (argname "vadjustment"))
  )
)

(define-method put
  (of-object "GtkLayout")
  (c-name "gtk_layout_put")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child_widget" (in))
    '("gint" "x" (in))
    '("gint" "y" (in))
  )
)

(define-method move
  (of-object "GtkLayout")
  (c-name "gtk_layout_move")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child_widget" (in))
    '("gint" "x" (in))
    '("gint" "y" (in))
  )
)

(define-method set_size
  (of-object "GtkLayout")
  (c-name "gtk_layout_set_size")
  (return-type "none")
  (parameters
    '("guint" "width" (in))
    '("guint" "height" (in))
  )
)

(define-method get_size
  (of-object "GtkLayout")
  (c-name "gtk_layout_get_size")
  (return-type "none")
  (parameters
    '("guint*" "width" (out))
    '("guint*" "height" (out))
  )
)

(define-method get_hadjustment
  (of-object "GtkLayout")
  (c-name "gtk_layout_get_hadjustment")
  (return-type "GtkAdjustment*")
)

(define-method get_vadjustment
  (of-object "GtkLayout")
  (c-name "gtk_layout_get_vadjustment")
  (return-type "GtkAdjustment*")
)

(define-method set_hadjustment
  (of-object "GtkLayout")
  (c-name "gtk_layout_set_hadjustment")
  (return-type "none")
  (parameters
    '("GtkAdjustment*" "adjustment" (in) (null-ok))
  )
)

(define-method set_vadjustment
  (of-object "GtkLayout")
  (c-name "gtk_layout_set_vadjustment")
  (return-type "none")
  (parameters
    '("GtkAdjustment*" "adjustment" (in) (null-ok))
  )
)

(define-method freeze
  (of-object "GtkLayout")
  (c-name "gtk_layout_freeze")
  (return-type "none")
)

(define-method thaw
  (of-object "GtkLayout")
  (c-name "gtk_layout_thaw")
  (return-type "none")
)

(define-function gtk_list_get_type
  (c-name "gtk_list_get_type")
  (return-type "GType")
  (deprecated "use GtkListStore/GtkTreeView")
)

(define-function gtk_list_new
  (is-constructor-of "GtkList")
  (c-name "gtk_list_new")
  (caller-owns-return #t)
  (return-type "GtkWidget*")
  (deprecated "use GtkListStore/GtkTreeView")
)

(define-method insert_items
  (of-object "GtkList")
  (c-name "gtk_list_insert_items")
  (return-type "none")
  (parameters
    '("GList*" "items" (in))
    '("gint" "position" (in))
  )
)

(define-method append_items
  (of-object "GtkList")
  (c-name "gtk_list_append_items")
  (return-type "none")
  (parameters
    '("GList*" "items" (in))
  )
)

(define-method prepend_items
  (of-object "GtkList")
  (c-name "gtk_list_prepend_items")
  (return-type "none")
  (parameters
    '("GList*" "items" (in))
  )
)

(define-method remove_items
  (of-object "GtkList")
  (c-name "gtk_list_remove_items")
  (return-type "none")
  (parameters
    '("GList*" "items" (in))
  )
)

(define-method remove_items_no_unref
  (of-object "GtkList")
  (c-name "gtk_list_remove_items_no_unref")
  (return-type "none")
  (deprecated "use GtkListStore/GtkTreeView")
  (parameters
    '("GList*" "items" (in))
  )
)

(define-method clear_items
  (of-object "GtkList")
  (c-name "gtk_list_clear_items")
  (return-type "none")
  (parameters
    '("gint" "start" (in))
    '("gint" "end" (in))
  )
)

(define-method select_item
  (of-object "GtkList")
  (c-name "gtk_list_select_item")
  (return-type "none")
  (parameters
    '("gint" "item" (in))
  )
)

(define-method unselect_item
  (of-object "GtkList")
  (c-name "gtk_list_unselect_item")
  (return-type "none")
  (parameters
    '("gint" "item" (in))
  )
)

(define-method select_child
  (of-object "GtkList")
  (c-name "gtk_list_select_child")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child" (in))
  )
)

(define-method unselect_child
  (of-object "GtkList")
  (c-name "gtk_list_unselect_child")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child" (in))
  )
)

(define-method child_position
  (of-object "GtkList")
  (c-name "gtk_list_child_position")
  (return-type "gint")
  (parameters
    '("GtkWidget*" "child" (in))
  )
)

(define-method set_selection_mode
  (of-object "GtkList")
  (c-name "gtk_list_set_selection_mode")
  (return-type "none")
  (deprecated "use GtkListStore/GtkTreeView")
  (parameters
    '("GtkSelectionMode" "mode" (in))
  )
)

(define-method extend_selection
  (of-object "GtkList")
  (c-name "gtk_list_extend_selection")
  (return-type "none")
  (deprecated "use GtkListStore/GtkTreeView")
  (parameters
    '("GtkScrollType" "scroll_type" (in))
    '("gfloat" "position" (in))
    '("gboolean" "auto_start_selection" (in))
  )
)

(define-method start_selection
  (of-object "GtkList")
  (c-name "gtk_list_start_selection")
  (return-type "none")
  (deprecated "use GtkListStore/GtkTreeView")
)

(define-method end_selection
  (of-object "GtkList")
  (c-name "gtk_list_end_selection")
  (return-type "none")
  (deprecated "use GtkListStore/GtkTreeView")
)

(define-method select_all
  (of-object "GtkList")
  (c-name "gtk_list_select_all")
  (return-type "none")
  (deprecated "use GtkListStore/GtkTreeView")
)

(define-method unselect_all
  (of-object "GtkList")
  (c-name "gtk_list_unselect_all")
  (return-type "none")
  (deprecated "use GtkListStore/GtkTreeView")
)

(define-method scroll_horizontal
  (of-object "GtkList")
  (c-name "gtk_list_scroll_horizontal")
  (return-type "none")
  (deprecated "use GtkListStore/GtkTreeView")
  (parameters
    '("GtkScrollType" "scroll_type" (in))
    '("gfloat" "position" (in))
  )
)

(define-method scroll_vertical
  (of-object "GtkList")
  (c-name "gtk_list_scroll_vertical")
  (return-type "none")
  (deprecated "use GtkListStore/GtkTreeView")
  (parameters
    '("GtkScrollType" "scroll_type" (in))
    '("gfloat" "position" (in))
  )
)

(define-method toggle_add_mode
  (of-object "GtkList")
  (c-name "gtk_list_toggle_add_mode")
  (return-type "none")
  (deprecated "use GtkListStore/GtkTreeView")
)

(define-method toggle_focus_row
  (of-object "GtkList")
  (c-name "gtk_list_toggle_focus_row")
  (return-type "none")
  (deprecated "use GtkListStore/GtkTreeView")
)

(define-method toggle_row
  (of-object "GtkList")
  (c-name "gtk_list_toggle_row")
  (return-type "none")
  (deprecated "use GtkListStore/GtkTreeView")
  (parameters
    '("GtkWidget*" "item" (in))
  )
)

(define-method undo_selection
  (of-object "GtkList")
  (c-name "gtk_list_undo_selection")
  (return-type "none")
  (deprecated "use GtkListStore/GtkTreeView")
)

(define-method end_drag_selection
  (of-object "GtkList")
  (c-name "gtk_list_end_drag_selection")
  (return-type "none")
  (deprecated "use GtkListStore/GtkTreeView")
)

(define-function gtk_list_item_get_type
  (c-name "gtk_list_item_get_type")
  (return-type "GType")
)

(define-function gtk_list_item_new
  (is-constructor-of "GtkListItem")
  (c-name "gtk_list_item_new")
  (caller-owns-return #t)
  (return-type "GtkWidget*")
  (deprecated "use gtk.TreeView")
)

(define-function gtk_list_item_new_with_label
  (is-constructor-of "GtkListItem")
  (c-name "gtk_list_item_new_with_label")
  (caller-owns-return #t)
  (return-type "GtkWidget*")
  (deprecated "use gtk.TreeView")
  (parameters
    '("const-gchar*" "label" (in))
  )
)

(define-method select
  (of-object "GtkListItem")
  (c-name "gtk_list_item_select")
  (return-type "none")
)

(define-method deselect
  (of-object "GtkListItem")
  (c-name "gtk_list_item_deselect")
  (return-type "none")
)

(define-function gtk_list_store_get_type
  (c-name "gtk_list_store_get_type")
  (return-type "GType")
)

(define-function gtk_list_store_new
  (is-constructor-of "GtkListStore")
  (c-name "gtk_list_store_new")
  (caller-owns-return #t)
  (return-type "GtkListStore*")
  (parameters
    '("gint" "n_columns" (in))
  )
  (varargs #t)
)

(define-function gtk_list_store_newv
  (is-constructor-of "GtkListStore")
  (c-name "gtk_list_store_newv")
  (caller-owns-return #t)
  (return-type "GtkListStore*")
  (parameters
    '("gint" "n_columns" (in))
    '("GType[]" "value" (in))
  )
)

(define-method set_column_types
  (of-object "GtkListStore")
  (c-name "gtk_list_store_set_column_types")
  (return-type "none")
  (parameters
    '("gint" "n_columns" (in))
    '("GType[]" "types" (in))
  )
)

(define-method set_value
  (of-object "GtkListStore")
  (c-name "gtk_list_store_set_value")
  (return-type "none")
  (parameters
    '("GtkTreeIter*" "iter" (in))
    '("gint" "column" (in))
    '("GValue*" "value" (in))
  )
)

(define-method set
  (of-object "GtkListStore")
  (c-name "gtk_list_store_set")
  (return-type "none")
  (parameters
    '("GtkTreeIter*" "iter" (in))
  )
  (varargs #t)
)

(define-method set_valist
  (of-object "GtkListStore")
  (c-name "gtk_list_store_set_valist")
  (return-type "none")
  (parameters
    '("GtkTreeIter*" "iter" (in))
    '("va_list" "var_args" (in))
  )
)

(define-method remove
  (of-object "GtkListStore")
  (c-name "gtk_list_store_remove")
  (return-type "gboolean")
  (parameters
    '("GtkTreeIter*" "iter" (in))
  )
)

(define-method insert
  (of-object "GtkListStore")
  (c-name "gtk_list_store_insert")
  (return-type "none")
  (parameters
    '("GtkTreeIter*" "iter" (out))
    '("gint" "position" (in))
  )
)

(define-method insert_before
  (of-object "GtkListStore")
  (c-name "gtk_list_store_insert_before")
  (return-type "none")
  (parameters
    '("GtkTreeIter*" "iter" (out))
    '("GtkTreeIter*" "sibling" (in))
  )
)

(define-method insert_after
  (of-object "GtkListStore")
  (c-name "gtk_list_store_insert_after")
  (return-type "none")
  (parameters
    '("GtkTreeIter*" "iter" (out))
    '("GtkTreeIter*" "sibling" (in))
  )
)

(define-method insert_with_values
  (of-object "GtkListStore")
  (c-name "gtk_list_store_insert_with_values")
  (return-type "none")
  (parameters
    '("GtkTreeIter*" "iter" (out))
    '("gint" "position" (in))
  )
  (varargs #t)
)

(define-method insert_with_valuesv
  (of-object "GtkListStore")
  (c-name "gtk_list_store_insert_with_valuesv")
  (return-type "none")
  (parameters
    '("GtkTreeIter*" "iter" (out))
    '("gint" "position" (in))
    '("gint[]" "columns" (in))
    '("GValue[]" "values" (in))
    '("gint" "n_values" (in))
  )
)

(define-method prepend
  (of-object "GtkListStore")
  (c-name "gtk_list_store_prepend")
  (return-type "none")
  (parameters
    '("GtkTreeIter*" "iter" (in))
  )
)

(define-method append
  (of-object "GtkListStore")
  (c-name "gtk_list_store_append")
  (return-type "none")
  (parameters
    '("GtkTreeIter*" "iter" (out))
  )
)

(define-method clear
  (of-object "GtkListStore")
  (c-name "gtk_list_store_clear")
  (return-type "none")
)

(define-method iter_is_valid
  (of-object "GtkListStore")
  (c-name "gtk_list_store_iter_is_valid")
  (return-type "gboolean")
  (parameters
    '("GtkTreeIter*" "iter" (in))
  )
)

(define-method reorder
  (of-object "GtkListStore")
  (c-name "gtk_list_store_reorder")
  (return-type "none")
  (parameters
    '("gint*" "new_order" (in))
  )
)

(define-method swap
  (of-object "GtkListStore")
  (c-name "gtk_list_store_swap")
  (return-type "none")
  (parameters
    '("GtkTreeIter*" "a" (in))
    '("GtkTreeIter*" "b" (in))
  )
)

(define-method move_after
  (of-object "GtkListStore")
  (c-name "gtk_list_store_move_after")
  (return-type "none")
  (parameters
    '("GtkTreeIter*" "iter" (in))
    '("GtkTreeIter*" "position" (in) (null-ok))
  )
)

(define-method move_before
  (of-object "GtkListStore")
  (c-name "gtk_list_store_move_before")
  (return-type "none")
  (parameters
    '("GtkTreeIter*" "iter" (in))
    '("GtkTreeIter*" "position" (in) (null-ok))
  )
)

(define-function check_version
  (c-name "gtk_check_version")
  (caller-owns-return #t)
  (return-type "gchar*")
  (parameters
    '("guint" "required_major" (in))
    '("guint" "required_minor" (in))
    '("guint" "required_micro" (in))
  )
)

(define-function init
  (c-name "gtk_init")
  (return-type "none")
  (parameters
    '("int*" "argc" (in))
    '("char***" "argv" (in))
  )
)

(define-function init_check
  (c-name "gtk_init_check")
  (return-type "gboolean")
  (parameters
    '("int*" "argc" (in))
    '("char***" "argv" (in))
  )
)

(define-function exit
  (c-name "gtk_exit")
  (return-type "none")
  (parameters
    '("gint" "error_code" (in))
  )
)

(define-function disable_setlocale
  (c-name "gtk_disable_setlocale")
  (return-type "none")
)

(define-function set_locale
  (c-name "gtk_set_locale")
  (caller-owns-return #t)
  (return-type "gchar*")
)

(define-function get_default_language
  (c-name "gtk_get_default_language")
  (return-type "PangoLanguage*")
)

(define-function events_pending
  (c-name "gtk_events_pending")
  (return-type "gint")
)

(define-function main_do_event
  (c-name "gtk_main_do_event")
  (return-type "none")
  (parameters
    '("GdkEvent*" "event" (in))
  )
)

(define-function main
  (c-name "gtk_main")
  (return-type "none")
)

(define-function main_level
  (c-name "gtk_main_level")
  (return-type "guint")
)

(define-function main_quit
  (c-name "gtk_main_quit")
  (return-type "none")
)

(define-function main_iteration
  (c-name "gtk_main_iteration")
  (return-type "gboolean")
)

(define-function main_iteration_do
  (c-name "gtk_main_iteration_do")
  (return-type "gboolean")
  (parameters
    '("gboolean" "blocking" (in) (default "TRUE"))
  )
)

(define-function true
  (c-name "gtk_true")
  (return-type "gboolean")
)

(define-function false
  (c-name "gtk_false")
  (return-type "gboolean")
)

(define-method grab_add
  (of-object "GtkWidget")
  (c-name "gtk_grab_add")
  (return-type "none")
)

(define-function grab_get_current
  (c-name "gtk_grab_get_current")
  (return-type "GtkWidget*")
)

(define-method grab_remove
  (of-object "GtkWidget")
  (c-name "gtk_grab_remove")
  (return-type "none")
)

(define-function init_add
  (c-name "gtk_init_add")
  (return-type "none")
  (parameters
    '("GtkFunction" "function" (in))
    '("gpointer" "data" (in) (null-ok))
  )
)

(define-function quit_add_destroy
  (c-name "gtk_quit_add_destroy")
  (return-type "none")
  (parameters
    '("guint" "main_level" (in))
    '("GtkObject*" "object" (in))
  )
)

(define-function quit_add
  (c-name "gtk_quit_add")
  (return-type "guint")
  (parameters
    '("guint" "main_level" (in))
    '("GtkFunction" "function" (in))
    '("gpointer" "data" (in) (null-ok))
  )
)

(define-function quit_add_full
  (c-name "gtk_quit_add_full")
  (return-type "guint")
  (parameters
    '("guint" "main_level" (in))
    '("GtkFunction" "function" (in))
    '("GtkCallbackMarshal" "marshal" (in))
    '("gpointer" "data" (in) (null-ok))
    '("GtkDestroyNotify" "destroy" (in))
  )
)

(define-function quit_remove
  (c-name "gtk_quit_remove")
  (return-type "none")
  (parameters
    '("guint" "quit_handler_id" (in))
  )
)

(define-function quit_remove_by_data
  (c-name "gtk_quit_remove_by_data")
  (return-type "none")
  (parameters
    '("gpointer" "data" (in))
  )
)

(define-function timeout_add
  (c-name "gtk_timeout_add")
  (return-type "guint")
  (parameters
    '("guint32" "interval" (in))
    '("GtkFunction" "function" (in))
    '("gpointer" "data" (in) (null-ok))
  )
)

(define-function timeout_add_full
  (c-name "gtk_timeout_add_full")
  (return-type "guint")
  (parameters
    '("guint32" "interval" (in))
    '("GtkFunction" "function" (in))
    '("GtkCallbackMarshal" "marshal" (in))
    '("gpointer" "data" (in) (null-ok))
    '("GtkDestroyNotify" "destroy" (in))
  )
)

(define-function timeout_remove
  (c-name "gtk_timeout_remove")
  (return-type "none")
  (parameters
    '("guint" "timeout_handler_id" (in))
  )
)

(define-function idle_add
  (c-name "gtk_idle_add")
  (return-type "guint")
  (parameters
    '("GtkFunction" "function" (in))
    '("gpointer" "data" (in) (null-ok))
  )
)

(define-function idle_add_priority
  (c-name "gtk_idle_add_priority")
  (return-type "guint")
  (parameters
    '("gint" "priority" (in))
    '("GtkFunction" "function" (in))
    '("gpointer" "data" (in) (null-ok))
  )
)

(define-function idle_add_full
  (c-name "gtk_idle_add_full")
  (return-type "guint")
  (parameters
    '("gint" "priority" (in))
    '("GtkFunction" "function" (in))
    '("GtkCallbackMarshal" "marshal" (in))
    '("gpointer" "data" (in) (null-ok))
    '("GtkDestroyNotify" "destroy" (in))
  )
)

(define-function idle_remove
  (c-name "gtk_idle_remove")
  (return-type "none")
  (parameters
    '("guint" "idle_handler_id" (in))
  )
)

(define-function idle_remove_by_data
  (c-name "gtk_idle_remove_by_data")
  (return-type "none")
  (parameters
    '("gpointer" "data" (in))
  )
)

(define-function input_add_full
  (c-name "gtk_input_add_full")
  (return-type "guint")
  (parameters
    '("gint" "source" (in))
    '("GdkInputCondition" "condition" (in))
    '("GdkInputFunction" "function" (in))
    '("GtkCallbackMarshal" "marshal" (in))
    '("gpointer" "data" (in) (null-ok))
    '("GtkDestroyNotify" "destroy" (in))
  )
)

(define-function input_remove
  (c-name "gtk_input_remove")
  (return-type "none")
  (parameters
    '("guint" "input_handler_id" (in))
  )
)

(define-function key_snooper_install
  (c-name "gtk_key_snooper_install")
  (return-type "guint")
  (parameters
    '("GtkKeySnoopFunc" "snooper" (in))
    '("gpointer" "func_data" (in) (null-ok))
  )
)

(define-function key_snooper_remove
  (c-name "gtk_key_snooper_remove")
  (return-type "none")
  (parameters
    '("guint" "snooper_handler_id" (in))
  )
)

(define-function get_current_event
  (c-name "gtk_get_current_event")
  (caller-owns-return #t)
  (return-type "GdkEvent*")
)

(define-function get_current_event_time
  (c-name "gtk_get_current_event_time")
  (return-type "guint32")
)

(define-function get_current_event_state
  (c-name "gtk_get_current_event_state")
  (return-type "gboolean")
  (parameters
    '("GdkModifierType*" "state" (in))
  )
)

(define-function get_event_widget
  (c-name "gtk_get_event_widget")
  (return-type "GtkWidget*")
  (parameters
    '("GdkEvent*" "event" (in))
  )
)

(define-method propagate_event
  (of-object "GtkWidget")
  (c-name "gtk_propagate_event")
  (return-type "none")
  (parameters
    '("GdkEvent*" "event" (in))
  )
)

(define-function gtk_menu_get_type
  (c-name "gtk_menu_get_type")
  (return-type "GType")
)

(define-function gtk_menu_new
  (is-constructor-of "GtkMenu")
  (c-name "gtk_menu_new")
  (caller-owns-return #t)
  (return-type "GtkWidget*")
)

(define-method popup
  (of-object "GtkMenu")
  (c-name "gtk_menu_popup")
  (return-type "none")
  (parameters
    '("GtkWidget*" "parent_menu_shell" (in))
    '("GtkWidget*" "parent_menu_item" (in))
    '("GtkMenuPositionFunc" "func" (in))
    '("gpointer" "data" (in) (null-ok))
    '("guint" "button" (in))
    '("guint32" "activate_time" (in))
  )
)

(define-method reposition
  (of-object "GtkMenu")
  (c-name "gtk_menu_reposition")
  (return-type "none")
)

(define-method popdown
  (of-object "GtkMenu")
  (c-name "gtk_menu_popdown")
  (return-type "none")
)

(define-method get_active
  (of-object "GtkMenu")
  (c-name "gtk_menu_get_active")
  (return-type "GtkWidget*")
)

(define-method set_active
  (of-object "GtkMenu")
  (c-name "gtk_menu_set_active")
  (return-type "none")
  (parameters
    '("guint" "index" (in))
  )
)

(define-method set_accel_group
  (of-object "GtkMenu")
  (c-name "gtk_menu_set_accel_group")
  (return-type "none")
  (parameters
    '("GtkAccelGroup*" "accel_group" (in))
  )
)

(define-method get_accel_group
  (of-object "GtkMenu")
  (c-name "gtk_menu_get_accel_group")
  (return-type "GtkAccelGroup*")
)

(define-method set_accel_path
  (of-object "GtkMenu")
  (c-name "gtk_menu_set_accel_path")
  (return-type "none")
  (parameters
    '("const-gchar*" "accel_path" (in))
  )
)

(define-method attach_to_widget
  (of-object "GtkMenu")
  (c-name "gtk_menu_attach_to_widget")
  (return-type "none")
  (parameters
    '("GtkWidget*" "attach_widget" (in))
    '("GtkMenuDetachFunc" "detacher" (in))
  )
)

(define-method detach
  (of-object "GtkMenu")
  (c-name "gtk_menu_detach")
  (return-type "none")
)

(define-method get_attach_widget
  (of-object "GtkMenu")
  (c-name "gtk_menu_get_attach_widget")
  (return-type "GtkWidget*")
)

(define-method set_tearoff_state
  (of-object "GtkMenu")
  (c-name "gtk_menu_set_tearoff_state")
  (return-type "none")
  (parameters
    '("gboolean" "torn_off" (in))
  )
)

(define-method get_tearoff_state
  (of-object "GtkMenu")
  (c-name "gtk_menu_get_tearoff_state")
  (return-type "gboolean")
)

(define-method set_title
  (of-object "GtkMenu")
  (c-name "gtk_menu_set_title")
  (return-type "none")
  (parameters
    '("const-gchar*" "title" (in))
  )
)

(define-method get_title
  (of-object "GtkMenu")
  (c-name "gtk_menu_get_title")
  (return-type "const-gchar*")
)

(define-method reorder_child
  (of-object "GtkMenu")
  (c-name "gtk_menu_reorder_child")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child" (in))
    '("gint" "position" (in))
  )
)

(define-method set_screen
  (of-object "GtkMenu")
  (c-name "gtk_menu_set_screen")
  (return-type "none")
  (parameters
    '("GdkScreen*" "screen" (in) (null-ok))
  )
)

(define-method attach
  (of-object "GtkMenu")
  (c-name "gtk_menu_attach")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child" (in))
    '("guint" "left_attach" (in))
    '("guint" "right_attach" (in))
    '("guint" "top_attach" (in))
    '("guint" "bottom_attach" (in))
  )
)

(define-method set_monitor
  (of-object "GtkMenu")
  (c-name "gtk_menu_set_monitor")
  (return-type "none")
  (parameters
    '("gint" "monitor_num" (in))
  )
)

(define-method menu_get_for_attach_widget
  (of-object "GtkWidget")
  (c-name "gtk_menu_get_for_attach_widget")
  (caller-owns-return #t)
  (return-type "GList[GtkMenu]")
)

(define-function gtk_menu_bar_get_type
  (c-name "gtk_menu_bar_get_type")
  (return-type "GType")
)

(define-function gtk_menu_bar_new
  (is-constructor-of "GtkMenuBar")
  (c-name "gtk_menu_bar_new")
  (caller-owns-return #t)
  (return-type "GtkWidget*")
)

(define-method get_pack_direction
  (of-object "GtkMenuBar")
  (c-name "gtk_menu_bar_get_pack_direction")
  (return-type "GtkPackDirection")
)

(define-method set_pack_direction
  (of-object "GtkMenuBar")
  (c-name "gtk_menu_bar_set_pack_direction")
  (return-type "none")
  (parameters
    '("GtkPackDirection" "pack_dir" (in))
  )
)

(define-method get_child_pack_direction
  (of-object "GtkMenuBar")
  (c-name "gtk_menu_bar_get_child_pack_direction")
  (return-type "GtkPackDirection")
)

(define-method set_child_pack_direction
  (of-object "GtkMenuBar")
  (c-name "gtk_menu_bar_set_child_pack_direction")
  (return-type "none")
  (parameters
    '("GtkPackDirection" "child_pack_dir" (in))
  )
)

(define-function gtk_menu_item_get_type
  (c-name "gtk_menu_item_get_type")
  (return-type "GType")
)

(define-function gtk_menu_item_new
  (is-constructor-of "GtkMenuItem")
  (c-name "gtk_menu_item_new")
  (caller-owns-return #t)
  (return-type "GtkWidget*")
)

(define-function gtk_menu_item_new_with_label
  (is-constructor-of "GtkMenuItem")
  (c-name "gtk_menu_item_new_with_label")
  (caller-owns-return #t)
  (return-type "GtkWidget*")
  (parameters
    '("const-gchar*" "label" (in))
  )
)

(define-function gtk_menu_item_new_with_mnemonic
  (is-constructor-of "GtkMenuItem")
  (c-name "gtk_menu_item_new_with_mnemonic")
  (caller-owns-return #t)
  (return-type "GtkWidget*")
  (parameters
    '("const-gchar*" "label" (in))
  )
)

(define-method set_submenu
  (of-object "GtkMenuItem")
  (c-name "gtk_menu_item_set_submenu")
  (return-type "none")
  (parameters
    '("GtkWidget*" "submenu" (in))
  )
)

(define-method get_submenu
  (of-object "GtkMenuItem")
  (c-name "gtk_menu_item_get_submenu")
  (return-type "GtkWidget*")
)

(define-method remove_submenu
  (of-object "GtkMenuItem")
  (c-name "gtk_menu_item_remove_submenu")
  (return-type "none")
)

(define-method select
  (of-object "GtkMenuItem")
  (c-name "gtk_menu_item_select")
  (return-type "none")
)

(define-method deselect
  (of-object "GtkMenuItem")
  (c-name "gtk_menu_item_deselect")
  (return-type "none")
)

(define-method activate
  (of-object "GtkMenuItem")
  (c-name "gtk_menu_item_activate")
  (return-type "none")
)

(define-method toggle_size_request
  (of-object "GtkMenuItem")
  (c-name "gtk_menu_item_toggle_size_request")
  (return-type "none")
  (parameters
    '("gint*" "requisition" (in))
  )
)

(define-method toggle_size_allocate
  (of-object "GtkMenuItem")
  (c-name "gtk_menu_item_toggle_size_allocate")
  (return-type "none")
  (parameters
    '("gint" "allocation" (in))
  )
)

(define-method set_right_justified
  (of-object "GtkMenuItem")
  (c-name "gtk_menu_item_set_right_justified")
  (return-type "none")
  (parameters
    '("gboolean" "right_justified" (in))
  )
)

(define-method get_right_justified
  (of-object "GtkMenuItem")
  (c-name "gtk_menu_item_get_right_justified")
  (return-type "gboolean")
)

(define-method set_accel_path
  (of-object "GtkMenuItem")
  (c-name "gtk_menu_item_set_accel_path")
  (return-type "none")
  (parameters
    '("const-gchar*" "accel_path" (in))
  )
)

(define-method right_justify
  (of-object "GtkMenuItem")
  (c-name "gtk_menu_item_right_justify")
  (return-type "none")
  (deprecated "use GtkMenuItem.set_right_justified")
)

(define-function gtk_menu_shell_get_type
  (c-name "gtk_menu_shell_get_type")
  (return-type "GType")
)

(define-method append
  (of-object "GtkMenuShell")
  (c-name "gtk_menu_shell_append")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child" (in))
  )
)

(define-method prepend
  (of-object "GtkMenuShell")
  (c-name "gtk_menu_shell_prepend")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child" (in))
  )
)

(define-method insert
  (of-object "GtkMenuShell")
  (c-name "gtk_menu_shell_insert")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child" (in))
    '("gint" "position" (in))
  )
)

(define-method deactivate
  (of-object "GtkMenuShell")
  (c-name "gtk_menu_shell_deactivate")
  (return-type "none")
)

(define-method select_item
  (of-object "GtkMenuShell")
  (c-name "gtk_menu_shell_select_item")
  (return-type "none")
  (parameters
    '("GtkWidget*" "menu_item" (in))
  )
)

(define-method deselect
  (of-object "GtkMenuShell")
  (c-name "gtk_menu_shell_deselect")
  (return-type "none")
)

(define-method activate_item
  (of-object "GtkMenuShell")
  (c-name "gtk_menu_shell_activate_item")
  (return-type "none")
  (parameters
    '("GtkWidget*" "menu_item" (in))
    '("gboolean" "force_deactivate" (in))
  )
)

(define-method select_first
  (of-object "GtkMenuShell")
  (c-name "gtk_menu_shell_select_first")
  (return-type "none")
  (parameters
    '("gboolean" "search_sensitive" (in))
  )
)

(define-method cancel
  (of-object "GtkMenuShell")
  (c-name "gtk_menu_shell_cancel")
  (return-type "none")
)

(define-method get_take_focus
  (of-object "GtkMenuShell")
  (c-name "gtk_menu_shell_get_take_focus")
  (return-type "gboolean")
)

(define-method set_take_focus
  (of-object "GtkMenuShell")
  (c-name "gtk_menu_shell_set_take_focus")
  (return-type "none")
  (parameters
    '("gboolean" "take_focus" (in))
  )
)

(define-function gtk_menu_tool_button_get_type
  (c-name "gtk_menu_tool_button_get_type")
  (return-type "GType")
)

(define-function gtk_menu_tool_button_new
  (is-constructor-of "GtkMenuToolButton")
  (c-name "gtk_menu_tool_button_new")
  (caller-owns-return #t)
  (return-type "GtkToolItem*")
  (parameters
    '("GtkWidget*" "icon_widget" (in))
    '("const-gchar*" "label" (in))
  )
)

(define-function gtk_menu_tool_button_new_from_stock
  (c-name "gtk_menu_tool_button_new_from_stock")
  (caller-owns-return #t)
  (return-type "GtkToolItem*")
  (parameters
    '("const-gchar*" "stock_id" (in))
  )
)

(define-method set_menu
  (of-object "GtkMenuToolButton")
  (c-name "gtk_menu_tool_button_set_menu")
  (return-type "none")
  (parameters
    '("GtkWidget*" "menu" (in))
  )
)

(define-method get_menu
  (of-object "GtkMenuToolButton")
  (c-name "gtk_menu_tool_button_get_menu")
  (return-type "GtkWidget*")
)

(define-method set_arrow_tooltip
  (of-object "GtkMenuToolButton")
  (c-name "gtk_menu_tool_button_set_arrow_tooltip")
  (return-type "none")
  (parameters
    '("GtkTooltips*" "tooltips" (in))
    '("const-gchar*" "tip_text" (in) (null-ok))
    '("const-gchar*" "tip_private" (in) (default "NULL") (null-ok))
  )
)

(define-function gtk_message_dialog_get_type
  (c-name "gtk_message_dialog_get_type")
  (return-type "GType")
)

(define-function gtk_message_dialog_new
  (is-constructor-of "GtkMessageDialog")
  (c-name "gtk_message_dialog_new")
  (caller-owns-return #t)
  (return-type "GtkWidget*")
  (parameters
    '("GtkWindow*" "parent" (in) (default "NULL") (null-ok))
    '("GtkDialogFlags" "flags" (in) (default "0"))
    '("GtkMessageType" "type" (in) (default "GTK_MESSAGE_INFO"))
    '("GtkButtonsType" "buttons" (in) (default "GTK_BUTTONS_NONE"))
    '("const-gchar*" "message_format" (in) (default "NULL") (null-ok))
  )
  (varargs #t)
)

(define-function message_dialog_new_with_markup
  (is-constructor-of "GtkMessageDialog")
  (c-name "gtk_message_dialog_new_with_markup")
  (caller-owns-return #t)
  (return-type "GtkWidget*")
  (parameters
    '("GtkWindow*" "parent" (in))
    '("GtkDialogFlags" "flags" (in))
    '("GtkMessageType" "type" (in))
    '("GtkButtonsType" "buttons" (in))
    '("const-gchar*" "message_format" (in))
  )
  (varargs #t)
)

(define-method set_markup
  (of-object "GtkMessageDialog")
  (c-name "gtk_message_dialog_set_markup")
  (return-type "none")
  (parameters
    '("const-gchar*" "str" (in))
  )
)

(define-method format_secondary_text
  (of-object "GtkMessageDialog")
  (c-name "gtk_message_dialog_format_secondary_text")
  (return-type "none")
  (parameters
    '("const-gchar*" "message_format" (in))
  )
  (varargs #t)
)

(define-method format_secondary_markup
  (of-object "GtkMessageDialog")
  (c-name "gtk_message_dialog_format_secondary_markup")
  (return-type "none")
  (parameters
    '("const-gchar*" "message_format" (in))
  )
  (varargs #t)
)

(define-function gtk_misc_get_type
  (c-name "gtk_misc_get_type")
  (return-type "GType")
)

(define-method set_alignment
  (of-object "GtkMisc")
  (c-name "gtk_misc_set_alignment")
  (return-type "none")
  (parameters
    '("gfloat" "xalign" (in))
    '("gfloat" "yalign" (in))
  )
)

(define-method get_alignment
  (of-object "GtkMisc")
  (c-name "gtk_misc_get_alignment")
  (return-type "none")
  (parameters
    '("gfloat*" "xalign" (out))
    '("gfloat*" "yalign" (out))
  )
)

(define-method set_padding
  (of-object "GtkMisc")
  (c-name "gtk_misc_set_padding")
  (return-type "none")
  (parameters
    '("gint" "xpad" (in))
    '("gint" "ypad" (in))
  )
)

(define-method get_padding
  (of-object "GtkMisc")
  (c-name "gtk_misc_get_padding")
  (return-type "none")
  (parameters
    '("gint*" "xpad" (out))
    '("gint*" "ypad" (out))
  )
)

(define-function gtk_notebook_get_type
  (c-name "gtk_notebook_get_type")
  (return-type "GType")
)

(define-function gtk_notebook_new
  (is-constructor-of "GtkNotebook")
  (c-name "gtk_notebook_new")
  (caller-owns-return #t)
  (return-type "GtkWidget*")
)

(define-method append_page
  (of-object "GtkNotebook")
  (c-name "gtk_notebook_append_page")
  (return-type "gint")
  (parameters
    '("GtkWidget*" "child" (in))
    '("GtkWidget*" "tab_label" (in) (default "NULL") (null-ok))
  )
)

(define-method append_page_menu
  (of-object "GtkNotebook")
  (c-name "gtk_notebook_append_page_menu")
  (return-type "gint")
  (parameters
    '("GtkWidget*" "child" (in))
    '("GtkWidget*" "tab_label" (in) (default "NULL") (null-ok))
    '("GtkWidget*" "menu_label" (in) (default "NULL") (null-ok))
  )
)

(define-method prepend_page
  (of-object "GtkNotebook")
  (c-name "gtk_notebook_prepend_page")
  (return-type "gint")
  (parameters
    '("GtkWidget*" "child" (in))
    '("GtkWidget*" "tab_label" (in) (default "NULL") (null-ok))
  )
)

(define-method prepend_page_menu
  (of-object "GtkNotebook")
  (c-name "gtk_notebook_prepend_page_menu")
  (return-type "gint")
  (parameters
    '("GtkWidget*" "child" (in))
    '("GtkWidget*" "tab_label" (in) (default "NULL") (null-ok))
    '("GtkWidget*" "menu_label" (in) (default "NULL") (null-ok))
  )
)

(define-method insert_page
  (of-object "GtkNotebook")
  (c-name "gtk_notebook_insert_page")
  (return-type "gint")
  (parameters
    '("GtkWidget*" "child" (in))
    '("GtkWidget*" "tab_label" (in) (default "NULL") (null-ok))
    '("gint" "position" (in) (default "-1"))
  )
)

(define-method insert_page_menu
  (of-object "GtkNotebook")
  (c-name "gtk_notebook_insert_page_menu")
  (return-type "gint")
  (parameters
    '("GtkWidget*" "child" (in))
    '("GtkWidget*" "tab_label" (in) (default "NULL") (null-ok))
    '("GtkWidget*" "menu_label" (in) (default "NULL") (null-ok))
    '("gint" "position" (in) (default "-1"))
  )
)

(define-method remove_page
  (of-object "GtkNotebook")
  (c-name "gtk_notebook_remove_page")
  (return-type "none")
  (parameters
    '("gint" "page_num" (in))
  )
)

(define-method get_current_page
  (of-object "GtkNotebook")
  (c-name "gtk_notebook_get_current_page")
  (return-type "gint")
)

(define-method get_nth_page
  (of-object "GtkNotebook")
  (c-name "gtk_notebook_get_nth_page")
  (return-type "GtkWidget*")
  (parameters
    '("gint" "page_num" (in))
  )
)

(define-method get_n_pages
  (of-object "GtkNotebook")
  (c-name "gtk_notebook_get_n_pages")
  (return-type "gint")
)

(define-method page_num
  (of-object "GtkNotebook")
  (c-name "gtk_notebook_page_num")
  (return-type "gint")
  (parameters
    '("GtkWidget*" "child" (in))
  )
)

(define-method set_current_page
  (of-object "GtkNotebook")
  (c-name "gtk_notebook_set_current_page")
  (return-type "none")
  (parameters
    '("gint" "page_num" (in))
  )
)

(define-method next_page
  (of-object "GtkNotebook")
  (c-name "gtk_notebook_next_page")
  (return-type "none")
)

(define-method prev_page
  (of-object "GtkNotebook")
  (c-name "gtk_notebook_prev_page")
  (return-type "none")
)

(define-method set_show_border
  (of-object "GtkNotebook")
  (c-name "gtk_notebook_set_show_border")
  (return-type "none")
  (parameters
    '("gboolean" "show_border" (in))
  )
)

(define-method get_show_border
  (of-object "GtkNotebook")
  (c-name "gtk_notebook_get_show_border")
  (return-type "gboolean")
)

(define-method set_show_tabs
  (of-object "GtkNotebook")
  (c-name "gtk_notebook_set_show_tabs")
  (return-type "none")
  (parameters
    '("gboolean" "show_tabs" (in))
  )
)

(define-method get_show_tabs
  (of-object "GtkNotebook")
  (c-name "gtk_notebook_get_show_tabs")
  (return-type "gboolean")
)

(define-method set_tab_pos
  (of-object "GtkNotebook")
  (c-name "gtk_notebook_set_tab_pos")
  (return-type "none")
  (parameters
    '("GtkPositionType" "pos" (in))
  )
)

(define-method get_tab_pos
  (of-object "GtkNotebook")
  (c-name "gtk_notebook_get_tab_pos")
  (return-type "GtkPositionType")
)

(define-method set_homogeneous_tabs
  (of-object "GtkNotebook")
  (c-name "gtk_notebook_set_homogeneous_tabs")
  (return-type "none")
  (parameters
    '("gboolean" "homogeneous" (in))
  )
)

(define-method set_tab_border
  (of-object "GtkNotebook")
  (c-name "gtk_notebook_set_tab_border")
  (return-type "none")
  (parameters
    '("guint" "border_width" (in))
  )
)

(define-method set_tab_hborder
  (of-object "GtkNotebook")
  (c-name "gtk_notebook_set_tab_hborder")
  (return-type "none")
  (parameters
    '("guint" "tab_hborder" (in))
  )
)

(define-method set_tab_vborder
  (of-object "GtkNotebook")
  (c-name "gtk_notebook_set_tab_vborder")
  (return-type "none")
  (parameters
    '("guint" "tab_vborder" (in))
  )
)

(define-method set_scrollable
  (of-object "GtkNotebook")
  (c-name "gtk_notebook_set_scrollable")
  (return-type "none")
  (parameters
    '("gboolean" "scrollable" (in))
  )
)

(define-method get_scrollable
  (of-object "GtkNotebook")
  (c-name "gtk_notebook_get_scrollable")
  (return-type "gboolean")
)

(define-method popup_enable
  (of-object "GtkNotebook")
  (c-name "gtk_notebook_popup_enable")
  (return-type "none")
)

(define-method popup_disable
  (of-object "GtkNotebook")
  (c-name "gtk_notebook_popup_disable")
  (return-type "none")
)

(define-method get_tab_label
  (of-object "GtkNotebook")
  (c-name "gtk_notebook_get_tab_label")
  (return-type "GtkWidget*")
  (parameters
    '("GtkWidget*" "child" (in))
  )
)

(define-method set_tab_label
  (of-object "GtkNotebook")
  (c-name "gtk_notebook_set_tab_label")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child" (in))
    '("GtkWidget*" "tab_label" (in) (default "NULL") (null-ok))
  )
)

(define-method set_tab_label_text
  (of-object "GtkNotebook")
  (c-name "gtk_notebook_set_tab_label_text")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child" (in))
    '("const-gchar*" "tab_text" (in))
  )
)

(define-method get_tab_label_text
  (of-object "GtkNotebook")
  (c-name "gtk_notebook_get_tab_label_text")
  (return-type "const-gchar*")
  (parameters
    '("GtkWidget*" "child" (in))
  )
)

(define-method get_menu_label
  (of-object "GtkNotebook")
  (c-name "gtk_notebook_get_menu_label")
  (return-type "GtkWidget*")
  (parameters
    '("GtkWidget*" "child" (in))
  )
)

(define-method set_menu_label
  (of-object "GtkNotebook")
  (c-name "gtk_notebook_set_menu_label")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child" (in))
    '("GtkWidget*" "menu_label" (in) (default "NULL") (null-ok))
  )
)

(define-method set_menu_label_text
  (of-object "GtkNotebook")
  (c-name "gtk_notebook_set_menu_label_text")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child" (in))
    '("const-gchar*" "menu_text" (in))
  )
)

(define-method get_menu_label_text
  (of-object "GtkNotebook")
  (c-name "gtk_notebook_get_menu_label_text")
  (return-type "const-gchar*")
  (parameters
    '("GtkWidget*" "child" (in))
  )
)

(define-method query_tab_label_packing
  (of-object "GtkNotebook")
  (c-name "gtk_notebook_query_tab_label_packing")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child" (in))
    '("gboolean*" "expand" (out))
    '("gboolean*" "fill" (out))
    '("GtkPackType*" "pack_type" (out))
  )
)

(define-method set_tab_label_packing
  (of-object "GtkNotebook")
  (c-name "gtk_notebook_set_tab_label_packing")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child" (in))
    '("gboolean" "expand" (in))
    '("gboolean" "fill" (in))
    '("GtkPackType" "pack_type" (in))
  )
)

(define-method reorder_child
  (of-object "GtkNotebook")
  (c-name "gtk_notebook_reorder_child")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child" (in))
    '("gint" "position" (in))
  )
)

(define-method current_page
  (of-object "GtkNotebook")
  (c-name "gtk_notebook_current_page")
  (return-type "gint")
  (deprecated "use GtkNotebook.get_current_page")
)

(define-method set_page
  (of-object "GtkNotebook")
  (c-name "gtk_notebook_set_page")
  (return-type "none")
  (deprecated "use GtkNotebook.set_current_page")
  (parameters
    '("gint" "page_num" (in))
  )
)

(define-function gtk_object_get_type
  (c-name "gtk_object_get_type")
  (return-type "GType")
)

(define-function object_new
  (c-name "gtk_object_new")
  (return-type "GtkObject*")
  (parameters
    '("GType" "type" (in))
    '("const-gchar*" "first_property_name" (in))
  )
  (varargs #t)
)

(define-method sink
  (of-object "GtkObject")
  (c-name "gtk_object_sink")
  (return-type "none")
)

(define-method destroy
  (of-object "GtkObject")
  (c-name "gtk_object_destroy")
  (return-type "none")
)

(define-function gtk_old_editable_get_type
  (c-name "gtk_old_editable_get_type")
  (return-type "GType")
)

(define-method claim_selection
  (of-object "GtkOldEditable")
  (c-name "gtk_old_editable_claim_selection")
  (return-type "none")
  (parameters
    '("gboolean" "claim" (in))
    '("guint32" "time" (in) (default "GDK_CURRENT_TIME"))
  )
)

(define-method changed
  (of-object "GtkOldEditable")
  (c-name "gtk_old_editable_changed")
  (return-type "none")
)

(define-function gtk_option_menu_get_type
  (c-name "gtk_option_menu_get_type")
  (return-type "GType")
)

(define-function gtk_option_menu_new
  (is-constructor-of "GtkOptionMenu")
  (c-name "gtk_option_menu_new")
  (caller-owns-return #t)
  (return-type "GtkWidget*")
  (deprecated "use gtk.ComboBox")
)

(define-method get_menu
  (of-object "GtkOptionMenu")
  (c-name "gtk_option_menu_get_menu")
  (return-type "GtkWidget*")
)

(define-method set_menu
  (of-object "GtkOptionMenu")
  (c-name "gtk_option_menu_set_menu")
  (return-type "none")
  (parameters
    '("GtkWidget*" "menu" (in))
  )
)

(define-method remove_menu
  (of-object "GtkOptionMenu")
  (c-name "gtk_option_menu_remove_menu")
  (return-type "none")
)

(define-method get_history
  (of-object "GtkOptionMenu")
  (c-name "gtk_option_menu_get_history")
  (return-type "gint")
)

(define-method set_history
  (of-object "GtkOptionMenu")
  (c-name "gtk_option_menu_set_history")
  (return-type "none")
  (parameters
    '("guint" "index" (in))
  )
)

(define-function gtk_paned_get_type
  (c-name "gtk_paned_get_type")
  (return-type "GType")
)

(define-method add1
  (of-object "GtkPaned")
  (c-name "gtk_paned_add1")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child" (in))
  )
)

(define-method add2
  (of-object "GtkPaned")
  (c-name "gtk_paned_add2")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child" (in))
  )
)

(define-method pack1
  (of-object "GtkPaned")
  (c-name "gtk_paned_pack1")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child" (in))
    '("gboolean" "resize" (in) (default "FALSE"))
    '("gboolean" "shrink" (in) (default "TRUE"))
  )
)

(define-method pack2
  (of-object "GtkPaned")
  (c-name "gtk_paned_pack2")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child" (in))
    '("gboolean" "resize" (in) (default "TRUE"))
    '("gboolean" "shrink" (in) (default "TRUE"))
  )
)

(define-method get_position
  (of-object "GtkPaned")
  (c-name "gtk_paned_get_position")
  (return-type "gint")
)

(define-method set_position
  (of-object "GtkPaned")
  (c-name "gtk_paned_set_position")
  (return-type "none")
  (parameters
    '("gint" "position" (in))
  )
)

(define-method get_child1
  (of-object "GtkPaned")
  (c-name "gtk_paned_get_child1")
  (return-type "GtkWidget*")
)

(define-method get_child2
  (of-object "GtkPaned")
  (c-name "gtk_paned_get_child2")
  (return-type "GtkWidget*")
)

; not public
;(define-method compute_position
;  (of-object "GtkPaned")
;  (c-name "gtk_paned_compute_position")
;  (return-type "none")
;  (parameters
;    '("gint" "allocation" (in))
;    '("gint" "child1_req" (in))
;    '("gint" "child2_req" (in))
;  )
;)

(define-function gtk_pixmap_get_type
  (c-name "gtk_pixmap_get_type")
  (return-type "GType")
)

(define-function gtk_pixmap_new
  (is-constructor-of "GtkPixmap")
  (c-name "gtk_pixmap_new")
  (caller-owns-return #t)
  (return-type "GtkWidget*")
  (deprecated "use GtkImage")
  (parameters
    '("GdkPixmap*" "pixmap" (in))
    '("GdkBitmap*" "mask" (in) (null-ok))
  )
)

(define-method set
  (of-object "GtkPixmap")
  (c-name "gtk_pixmap_set")
  (return-type "none")
  (parameters
    '("GdkPixmap*" "val" (in))
    '("GdkBitmap*" "mask" (in) (null-ok))
  )
)

(define-method get
  (of-object "GtkPixmap")
  (c-name "gtk_pixmap_get")
  (return-type "none")
  (parameters
    '("GdkPixmap**" "val" (out))
    '("GdkBitmap**" "mask" (out))
  )
)

(define-method set_build_insensitive
  (of-object "GtkPixmap")
  (c-name "gtk_pixmap_set_build_insensitive")
  (return-type "none")
  (parameters
    '("gboolean" "build" (in))
  )
)

(define-function gtk_plug_get_type
  (c-name "gtk_plug_get_type")
  (return-type "GType")
)

(define-method construct
  (of-object "GtkPlug")
  (c-name "gtk_plug_construct")
  (return-type "none")
  (parameters
    '("GdkNativeWindow" "socket_id" (in))
  )
)

(define-function gtk_plug_new
  (is-constructor-of "GtkPlug")
  (c-name "gtk_plug_new")
  (caller-owns-return #t)
  (return-type "GtkWidget*")
  (parameters
    '("GdkNativeWindow" "socket_id" (in))
  )
)

(define-method construct_for_display
  (of-object "GtkPlug")
  (c-name "gtk_plug_construct_for_display")
  (return-type "none")
  (parameters
    '("GdkDisplay*" "display" (in))
    '("GdkNativeWindow" "socket_id" (in))
  )
)

(define-function plug_new_for_display
  (c-name "gtk_plug_new_for_display")
  (caller-owns-return #t)
  (return-type "GtkWidget*")
  (deprecated "use gtk.Plug(socket_id, display)")
  (parameters
    '("GdkDisplay*" "display" (in))
    '("GdkNativeWindow" "socket_id" (in))
  )
)

(define-method get_id
  (of-object "GtkPlug")
  (c-name "gtk_plug_get_id")
  (return-type "GdkNativeWindow")
)

(define-function gtk_preview_get_type
  (c-name "gtk_preview_get_type")
  (return-type "GType")
)

(define-function preview_uninit
  (c-name "gtk_preview_uninit")
  (return-type "none")
  (deprecated "use GtkImage")
)

(define-function gtk_preview_new
  (is-constructor-of "GtkPreview")
  (c-name "gtk_preview_new")
  (caller-owns-return #t)
  (return-type "GtkWidget*")
  (deprecated "use GtkDrawingArea")
  (parameters
    '("GtkPreviewType" "type" (in))
  )
)

(define-method size
  (of-object "GtkPreview")
  (c-name "gtk_preview_size")
  (return-type "none")
  (parameters
    '("gint" "width" (in))
    '("gint" "height" (in))
  )
)

(define-method put
  (of-object "GtkPreview")
  (c-name "gtk_preview_put")
  (return-type "none")
  (parameters
    '("GdkWindow*" "window" (in))
    '("GdkGC*" "gc" (in))
    '("gint" "srcx" (in))
    '("gint" "srcy" (in))
    '("gint" "destx" (in))
    '("gint" "desty" (in))
    '("gint" "width" (in))
    '("gint" "height" (in))
  )
)

(define-method draw_row
  (of-object "GtkPreview")
  (c-name "gtk_preview_draw_row")
  (return-type "none")
  (parameters
    '("guchar*" "data" (in))
    '("gint" "x" (in))
    '("gint" "y" (in))
    '("gint" "w" (in))
  )
)

(define-method set_expand
  (of-object "GtkPreview")
  (c-name "gtk_preview_set_expand")
  (return-type "none")
  (parameters
    '("gboolean" "expand" (in))
  )
)

(define-function preview_set_gamma
  (c-name "gtk_preview_set_gamma")
  (return-type "none")
  (deprecated "use GtkImage")
  (parameters
    '("double" "gamma" (in))
  )
)

(define-function preview_set_color_cube
  (c-name "gtk_preview_set_color_cube")
  (return-type "none")
  (deprecated "use GtkImage")
  (parameters
    '("guint" "nred_shades" (in))
    '("guint" "ngreen_shades" (in))
    '("guint" "nblue_shades" (in))
    '("guint" "ngray_shades" (in))
  )
)

(define-function preview_set_install_cmap
  (c-name "gtk_preview_set_install_cmap")
  (return-type "none")
  (deprecated "use GtkImage")
  (parameters
    '("gint" "install_cmap" (in))
  )
)

(define-function preview_set_reserved
  (c-name "gtk_preview_set_reserved")
  (return-type "none")
  (deprecated "use GtkImage")
  (parameters
    '("gint" "nreserved" (in))
  )
)

(define-method set_dither
  (of-object "GtkPreview")
  (c-name "gtk_preview_set_dither")
  (return-type "none")
  (deprecated "use GtkImage")
  (parameters
    '("GdkRgbDither" "dither" (in))
  )
)

(define-function preview_get_visual
  (c-name "gtk_preview_get_visual")
  (return-type "GdkVisual*")
  (deprecated "use GtkImage")
)

(define-function preview_get_cmap
  (c-name "gtk_preview_get_cmap")
  (return-type "GdkColormap*")
  (deprecated "use GtkImage")
)

(define-function preview_get_info
  (c-name "gtk_preview_get_info")
  (return-type "GtkPreviewInfo*")
  (deprecated "use GtkImage")
)

(define-function preview_reset
  (c-name "gtk_preview_reset")
  (return-type "none")
  (deprecated "use GtkImage")
)

(define-function gtk_progress_get_type
  (c-name "gtk_progress_get_type")
  (return-type "GType")
)

(define-method set_show_text
  (of-object "GtkProgress")
  (c-name "gtk_progress_set_show_text")
  (return-type "none")
  (deprecated "gtk.Progress.set_show_text is deprecated, use gtk.ProgressBar methods")
  (parameters
    '("gboolean" "show_text" (in))
  )
)

(define-method set_text_alignment
  (of-object "GtkProgress")
  (c-name "gtk_progress_set_text_alignment")
  (return-type "none")
  (deprecated "gtk.Progress.set_text_alignment is deprecated, use gtk.ProgressBar methods")
  (parameters
    '("gfloat" "x_align" (in))
    '("gfloat" "y_align" (in))
  )
)

(define-method set_format_string
  (of-object "GtkProgress")
  (c-name "gtk_progress_set_format_string")
  (return-type "none")
  (deprecated "gtk.Progress.set_format_string is deprecated, use gtk.ProgressBar methods")
  (parameters
    '("const-gchar*" "format" (in))
  )
)

(define-method set_adjustment
  (of-object "GtkProgress")
  (c-name "gtk_progress_set_adjustment")
  (return-type "none")
  (deprecated "gtk.Progress.set_adjustment is deprecated, use gtk.ProgressBar methods")
  (parameters
    '("GtkAdjustment*" "adjustment" (in))
  )
)

(define-method configure
  (of-object "GtkProgress")
  (c-name "gtk_progress_configure")
  (return-type "none")
  (deprecated "gtk.Progress.configure is deprecated, use gtk.ProgressBar methods")
  (parameters
    '("gdouble" "value" (in))
    '("gdouble" "min" (in))
    '("gdouble" "max" (in))
  )
)

(define-method set_percentage
  (of-object "GtkProgress")
  (c-name "gtk_progress_set_percentage")
  (return-type "none")
  (deprecated "gtk.Progress.set_percentage is deprecated, use gtk.ProgressBar methods")
  (parameters
    '("gdouble" "percentage" (in))
  )
)

(define-method set_value
  (of-object "GtkProgress")
  (c-name "gtk_progress_set_value")
  (return-type "none")
  (deprecated "gtk.Progress.set_value is deprecated, use gtk.ProgressBar methods")
  (parameters
    '("gdouble" "value" (in))
  )
)

(define-method get_value
  (of-object "GtkProgress")
  (c-name "gtk_progress_get_value")
  (return-type "gdouble")
  (deprecated "gtk.Progress.get_value is deprecated, use gtk.ProgressBar methods")
)

(define-method set_activity_mode
  (of-object "GtkProgress")
  (c-name "gtk_progress_set_activity_mode")
  (return-type "none")
  (deprecated "gtk.Progress.set_activity_mode is deprecated, use gtk.ProgressBar methods")
  (parameters
    '("gboolean" "activity_mode" (in))
  )
)

(define-method get_current_text
  (of-object "GtkProgress")
  (c-name "gtk_progress_get_current_text")
  (caller-owns-return #t)
  (return-type "gchar*")
  (deprecated "gtk.Progress.get_current_text is deprecated, use gtk.ProgressBar methods")
)

(define-method get_text_from_value
  (of-object "GtkProgress")
  (c-name "gtk_progress_get_text_from_value")
  (caller-owns-return #t)
  (return-type "gchar*")
  (deprecated "gtk.Progress.get_text_from_value is deprecated, use gtk.ProgressBar methods")
  (parameters
    '("gdouble" "value" (in))
  )
)

(define-method get_current_percentage
  (of-object "GtkProgress")
  (c-name "gtk_progress_get_current_percentage")
  (return-type "gdouble")
  (deprecated "gtk.Progress.get_current_percentage is deprecated, use gtk.ProgressBar methods")
)

(define-method get_percentage_from_value
  (of-object "GtkProgress")
  (c-name "gtk_progress_get_percentage_from_value")
  (return-type "gdouble")
  (deprecated "gtk.Progress.get_percentage_from_value is deprecated, use gtk.ProgressBar methods")
  (parameters
    '("gdouble" "value" (in))
  )
)

(define-function gtk_progress_bar_get_type
  (c-name "gtk_progress_bar_get_type")
  (return-type "GType")
)

(define-function gtk_progress_bar_new
  (is-constructor-of "GtkProgressBar")
  (c-name "gtk_progress_bar_new")
  (caller-owns-return #t)
  (return-type "GtkWidget*")
)

(define-method pulse
  (of-object "GtkProgressBar")
  (c-name "gtk_progress_bar_pulse")
  (return-type "none")
)

(define-method set_text
  (of-object "GtkProgressBar")
  (c-name "gtk_progress_bar_set_text")
  (return-type "none")
  (parameters
    '("const-gchar*" "text" (in))
  )
)

(define-method set_fraction
  (of-object "GtkProgressBar")
  (c-name "gtk_progress_bar_set_fraction")
  (return-type "none")
  (parameters
    '("gdouble" "fraction" (in))
  )
)

(define-method set_pulse_step
  (of-object "GtkProgressBar")
  (c-name "gtk_progress_bar_set_pulse_step")
  (return-type "none")
  (parameters
    '("gdouble" "fraction" (in))
  )
)

(define-method set_orientation
  (of-object "GtkProgressBar")
  (c-name "gtk_progress_bar_set_orientation")
  (return-type "none")
  (parameters
    '("GtkProgressBarOrientation" "orientation" (in))
  )
)

(define-method get_text
  (of-object "GtkProgressBar")
  (c-name "gtk_progress_bar_get_text")
  (return-type "const-gchar*")
)

(define-method get_fraction
  (of-object "GtkProgressBar")
  (c-name "gtk_progress_bar_get_fraction")
  (return-type "gdouble")
)

(define-method get_pulse_step
  (of-object "GtkProgressBar")
  (c-name "gtk_progress_bar_get_pulse_step")
  (return-type "gdouble")
)

(define-method get_orientation
  (of-object "GtkProgressBar")
  (c-name "gtk_progress_bar_get_orientation")
  (return-type "GtkProgressBarOrientation")
)

(define-function gtk_progress_bar_new_with_adjustment
  (is-constructor-of "GtkProgressBar")
  (c-name "gtk_progress_bar_new_with_adjustment")
  (caller-owns-return #t)
  (return-type "GtkWidget*")
  (parameters
    '("GtkAdjustment*" "adjustment" (in) (default "NULL") (null-ok))
  )
)

(define-method set_bar_style
  (of-object "GtkProgressBar")
  (c-name "gtk_progress_bar_set_bar_style")
  (return-type "none")
  (parameters
    '("GtkProgressBarStyle" "style" (in))
  )
)

(define-method set_discrete_blocks
  (of-object "GtkProgressBar")
  (c-name "gtk_progress_bar_set_discrete_blocks")
  (return-type "none")
  (parameters
    '("guint" "blocks" (in))
  )
)

(define-method set_activity_step
  (of-object "GtkProgressBar")
  (c-name "gtk_progress_bar_set_activity_step")
  (return-type "none")
  (parameters
    '("guint" "step" (in))
  )
)

(define-method set_activity_blocks
  (of-object "GtkProgressBar")
  (c-name "gtk_progress_bar_set_activity_blocks")
  (return-type "none")
  (parameters
    '("guint" "blocks" (in))
  )
)

(define-method update
  (of-object "GtkProgressBar")
  (c-name "gtk_progress_bar_update")
  (return-type "none")
  (parameters
    '("gfloat" "percentage" (in))
  )
)

(define-method set_ellipsize
  (of-object "GtkProgressBar")
  (c-name "gtk_progress_bar_set_ellipsize")
  (return-type "none")
  (parameters
    '("PangoEllipsizeMode" "mode" (in))
  )
)

(define-method get_ellipsize
  (of-object "GtkProgressBar")
  (c-name "gtk_progress_bar_get_ellipsize")
  (return-type "PangoEllipsizeMode")
)

(define-function gtk_radio_action_get_type
  (c-name "gtk_radio_action_get_type")
  (return-type "GType")
)

(define-function gtk_radio_action_new
  (is-constructor-of "GtkRadioAction")
  (c-name "gtk_radio_action_new")
  (caller-owns-return #t)
  (return-type "GtkRadioAction*")
  (properties
    '("name" (argname "name"))
    '("label" (argname "label"))
    '("tooltip" (argname "tooltip"))
    '("stock_id" (argname "stock_id"))
    '("value" (argname "value"))
  )
)

(define-method set_group
  (of-object "GtkRadioAction")
  (c-name "gtk_radio_action_set_group")
  (return-type "none")
  (parameters
    '("GSList*" "group" (in))
  )
)

(define-method get_group
  (of-object "GtkRadioAction")
  (c-name "gtk_radio_action_get_group")
  (caller-owns-return #t)
  (return-type "GSList[GtkRadioAction]")
)

(define-method get_current_value
  (of-object "GtkRadioAction")
  (c-name "gtk_radio_action_get_current_value")
  (return-type "gint")
)

(define-function gtk_radio_button_get_type
  (c-name "gtk_radio_button_get_type")
  (return-type "GType")
)

(define-function gtk_radio_button_new
  (is-constructor-of "GtkRadioButton")
  (c-name "gtk_radio_button_new")
  (caller-owns-return #t)
  (return-type "GtkWidget*")
  (parameters
	  '("GSList*" "group" (in) (null-ok))
  )
)

(define-function radio_button_new_from_widget
  (is-constructor-of "GtkRadioButton")
  (c-name "gtk_radio_button_new_from_widget")
  (caller-owns-return #t)
  (return-type "GtkWidget*")
  (parameters
    '("GtkRadioButton*" "group" (in))
  )
)

(define-function radio_button_new_with_label
  (is-constructor-of "GtkRadioButton")
  (c-name "gtk_radio_button_new_with_label")
  (caller-owns-return #t)
  (return-type "GtkWidget*")
  (parameters
	'("GSList*" "group" (in) (null-ok))
    '("const-gchar*" "label" (in))
  )
)

(define-function radio_button_new_with_label_from_widget
  (is-constructor-of "GtkRadioButton")
  (c-name "gtk_radio_button_new_with_label_from_widget")
  (caller-owns-return #t)
  (return-type "GtkWidget*")
  (parameters
    '("GtkRadioButton*" "group" (in))
    '("const-gchar*" "label" (in))
  )
)

(define-function radio_button_new_with_mnemonic
  (is-constructor-of "GtkRadioButton")
  (c-name "gtk_radio_button_new_with_mnemonic")
  (caller-owns-return #t)
  (return-type "GtkWidget*")
  (parameters
    '("GSList*" "group" (in))
    '("const-gchar*" "label" (in))
  )
)

(define-function radio_button_new_with_mnemonic_from_widget
  (is-constructor-of "GtkRadioButton")
  (c-name "gtk_radio_button_new_with_mnemonic_from_widget")
  (caller-owns-return #t)
  (return-type "GtkWidget*")
  (parameters
    '("GtkRadioButton*" "group" (in))
    '("const-gchar*" "label" (in))
  )
)

(define-method get_group
  (of-object "GtkRadioButton")
  (c-name "gtk_radio_button_get_group")
  (return-type "GSList[GtkRadioButton]")
)

(define-method set_group
  (of-object "GtkRadioButton")
  (c-name "gtk_radio_button_set_group")
  (return-type "none")
  (parameters
    '("GSList*" "group" (in))
  )
)

(define-method group
  (of-object "GtkRadioButton")
  (c-name "gtk_radio_button_group")
  (caller-owns-return #t)
  (return-type "GSList[GtkRadioButton]")
  (deprecated "use GtkRadioButton.get_group")
)

(define-function gtk_radio_menu_item_get_type
  (c-name "gtk_radio_menu_item_get_type")
  (return-type "GType")
)

(define-function gtk_radio_menu_item_new
  (is-constructor-of "GtkRadioMenuItem")
  (c-name "gtk_radio_menu_item_new")
  (caller-owns-return #t)
  (return-type "GtkWidget*")
  (parameters
    '("GSList*" "group" (in))
  )
)

(define-function gtk_radio_menu_item_new_with_label
  (is-constructor-of "GtkRadioMenuItem")
  (c-name "gtk_radio_menu_item_new_with_label")
  (caller-owns-return #t)
  (return-type "GtkWidget*")
  (parameters
    '("GSList*" "group" (in))
    '("const-gchar*" "label" (in))
  )
)

(define-function gtk_radio_menu_item_new_with_mnemonic
  (is-constructor-of "GtkRadioMenuItem")
  (c-name "gtk_radio_menu_item_new_with_mnemonic")
  (caller-owns-return #t)
  (return-type "GtkWidget*")
  (parameters
    '("GSList*" "group" (in))
    '("const-gchar*" "label" (in))
  )
)

(define-function new_from_widget
  (is-constructor-of "GtkRadioMenuItem")
  (c-name "gtk_radio_menu_item_new_from_widget")
  (caller-owns-return #t)
  (return-type "GtkWidget*")
  (parameters
    '("GtkRadioMenuItem*" "group" (in))
  )
)

(define-function new_with_mnemonic_from_widget
  (is-constructor-of "GtkRadioMenuItem")
  (c-name "gtk_radio_menu_item_new_with_mnemonic_from_widget")
  (caller-owns-return #t)
  (return-type "GtkWidget*")
  (parameters
    '("GtkRadioMenuItem*" "group" (in))
    '("const-gchar*" "label" (in))
  )
)

(define-function new_with_label_from_widget
  (is-constructor-of "GtkRadioMenuItem")
  (c-name "gtk_radio_menu_item_new_with_label_from_widget")
  (caller-owns-return #t)
  (return-type "GtkWidget*")
  (parameters
    '("GtkRadioMenuItem*" "group" (in))
    '("const-gchar*" "label" (in))
  )
)

(define-method get_group
  (of-object "GtkRadioMenuItem")
  (c-name "gtk_radio_menu_item_get_group")
  (caller-owns-return #t)
  (return-type "GSList[GtkRadioMenuItem]")
)

(define-method set_group
  (of-object "GtkRadioMenuItem")
  (c-name "gtk_radio_menu_item_set_group")
  (return-type "none")
  (parameters
    '("GSList*" "group" (in))
  )
)

(define-method group
  (of-object "GtkRadioMenuItem")
  (c-name "gtk_radio_menu_item_group")
  (caller-owns-return #t)
  (return-type "GSList[GtkRadioMenuItem]")
  (deprecated "use GtkRadioMenuItem.get_group")
)

(define-function gtk_radio_tool_button_get_type
  (c-name "gtk_radio_tool_button_get_type")
  (return-type "GType")
)

(define-function gtk_radio_tool_button_new
  (is-constructor-of "GtkRadioToolButton")
  (c-name "gtk_radio_tool_button_new")
  (caller-owns-return #t)
  (return-type "GtkToolItem*")
  (parameters
    '("GSList*" "group" (in))
  )
)

(define-function radio_tool_button_new_from_stock
  (is-constructor-of "GtkRadioToolButton")
  (c-name "gtk_radio_tool_button_new_from_stock")
  (caller-owns-return #t)
  (return-type "GtkToolItem*")
  (parameters
    '("GSList*" "group" (in))
    '("const-gchar*" "stock_id" (in))
  )
)

(define-function radio_tool_button_new_from_widget
  (is-constructor-of "GtkRadioToolButton")
  (c-name "gtk_radio_tool_button_new_from_widget")
  (caller-owns-return #t)
  (return-type "GtkToolItem*")
  (parameters
    '("GtkRadioToolButton*" "group" (in))
  )
)

(define-function radio_tool_button_new_with_stock_from_widget
  (is-constructor-of "GtkRadioToolButton")
  (c-name "gtk_radio_tool_button_new_with_stock_from_widget")
  (caller-owns-return #t)
  (return-type "GtkToolItem*")
  (parameters
    '("GtkRadioToolButton*" "group" (in))
    '("const-gchar*" "stock_id" (in))
  )
)

(define-method set_group
  (of-object "GtkRadioToolButton")
  (c-name "gtk_radio_tool_button_set_group")
  (return-type "none")
  (parameters
    '("GSList*" "group" (in))
  )
)

(define-method get_group
  (of-object "GtkRadioToolButton")
  (c-name "gtk_radio_tool_button_get_group")
  (caller-owns-return #t)
  (return-type "GSList[GtkRadioToolButton]")
)

(define-function gtk_range_get_type
  (c-name "gtk_range_get_type")
  (return-type "GType")
)

(define-method set_update_policy
  (of-object "GtkRange")
  (c-name "gtk_range_set_update_policy")
  (return-type "none")
  (parameters
    '("GtkUpdateType" "policy" (in))
  )
)

(define-method get_update_policy
  (of-object "GtkRange")
  (c-name "gtk_range_get_update_policy")
  (return-type "GtkUpdateType")
)

(define-method set_adjustment
  (of-object "GtkRange")
  (c-name "gtk_range_set_adjustment")
  (return-type "none")
  (parameters
    '("GtkAdjustment*" "adjustment" (in))
  )
)

(define-method get_adjustment
  (of-object "GtkRange")
  (c-name "gtk_range_get_adjustment")
  (return-type "GtkAdjustment*")
)

(define-method set_inverted
  (of-object "GtkRange")
  (c-name "gtk_range_set_inverted")
  (return-type "none")
  (parameters
    '("gboolean" "setting" (in))
  )
)

(define-method get_inverted
  (of-object "GtkRange")
  (c-name "gtk_range_get_inverted")
  (return-type "gboolean")
)

(define-method set_increments
  (of-object "GtkRange")
  (c-name "gtk_range_set_increments")
  (return-type "none")
  (parameters
    '("gdouble" "step" (in))
    '("gdouble" "page" (in))
  )
)

(define-method set_range
  (of-object "GtkRange")
  (c-name "gtk_range_set_range")
  (return-type "none")
  (parameters
    '("gdouble" "min" (in))
    '("gdouble" "max" (in))
  )
)

(define-method set_value
  (of-object "GtkRange")
  (c-name "gtk_range_set_value")
  (return-type "none")
  (parameters
    '("gdouble" "value" (in))
  )
)

(define-method get_value
  (of-object "GtkRange")
  (c-name "gtk_range_get_value")
  (return-type "gdouble")
)

(define-function rc_add_default_file
  (c-name "gtk_rc_add_default_file")
  (return-type "none")
  (parameters
    '("const-gchar*" "filename" (in))
  )
)

(define-function rc_set_default_files
  (c-name "gtk_rc_set_default_files")
  (return-type "none")
  (parameters
    '("gchar**" "filenames" (in))
  )
)

(define-function rc_get_default_files
  (c-name "gtk_rc_get_default_files")
  (return-type "gchar**")
)

(define-method rc_get_style
  (of-object "GtkWidget")
  (c-name "gtk_rc_get_style")
  (return-type "GtkStyle*")
)

(define-function rc_get_style_by_paths
  (c-name "gtk_rc_get_style_by_paths")
  (return-type "GtkStyle*")
  (parameters
    '("GtkSettings*" "settings" (in))
    '("const-char*" "widget_path" (in))
    '("const-char*" "class_path" (in))
    '("GType" "type" (in))
  )
)

(define-function rc_reparse_all_for_settings
  (c-name "gtk_rc_reparse_all_for_settings")
  (return-type "gboolean")
  (parameters
    '("GtkSettings*" "settings" (in))
    '("gboolean" "force_load" (in))
  )
)

(define-function rc_reset_styles
  (c-name "gtk_rc_reset_styles")
  (return-type "none")
  (parameters
    '("GtkSettings*" "settings" (in))
  )
)

(define-function rc_find_pixmap_in_path
  (c-name "gtk_rc_find_pixmap_in_path")
  (caller-owns-return #t)
  (return-type "gchar*")
  (parameters
    '("GtkSettings*" "settings" (in))
    '("GScanner*" "scanner" (in) (null-ok))
    '("const-gchar*" "pixmap_file" (in))
  )
)

(define-function rc_parse
  (c-name "gtk_rc_parse")
  (return-type "none")
  (parameters
    '("const-gchar*" "filename" (in))
  )
)

(define-function rc_parse_string
  (c-name "gtk_rc_parse_string")
  (return-type "none")
  (parameters
    '("const-gchar*" "rc_string" (in))
  )
)

(define-function rc_reparse_all
  (c-name "gtk_rc_reparse_all")
  (return-type "gboolean")
)

(define-method rc_add_widget_name_style
  (of-object "GtkRcStyle")
  (c-name "gtk_rc_add_widget_name_style")
  (return-type "none")
  (parameters
    '("const-gchar*" "pattern" (in))
  )
)

(define-method rc_add_widget_class_style
  (of-object "GtkRcStyle")
  (c-name "gtk_rc_add_widget_class_style")
  (return-type "none")
  (parameters
    '("const-gchar*" "pattern" (in))
  )
)

(define-method rc_add_class_style
  (of-object "GtkRcStyle")
  (c-name "gtk_rc_add_class_style")
  (return-type "none")
  (parameters
    '("const-gchar*" "pattern" (in))
  )
)

(define-function gtk_rc_style_get_type
  (c-name "gtk_rc_style_get_type")
  (return-type "GType")
)

(define-function gtk_rc_style_new
  (is-constructor-of "GtkRCStyle")
  (c-name "gtk_rc_style_new")
  (caller-owns-return #t)
  (return-type "GtkRcStyle*")
)

(define-method copy
  (of-object "GtkRcStyle")
  (c-name "gtk_rc_style_copy")
  (caller-owns-return #t)
  (return-type "GtkRcStyle*")
)

(define-method ref
  (of-object "GtkRcStyle")
  (c-name "gtk_rc_style_ref")
  (return-type "none")
)

(define-method unref
  (of-object "GtkRcStyle")
  (c-name "gtk_rc_style_unref")
  (return-type "none")
)

(define-function rc_find_module_in_path
  (c-name "gtk_rc_find_module_in_path")
  (caller-owns-return #t)
  (return-type "gchar*")
  (parameters
    '("const-gchar*" "module_file" (in))
  )
)

(define-function rc_get_theme_dir
  (c-name "gtk_rc_get_theme_dir")
  (caller-owns-return #t)
  (return-type "gchar*")
)

(define-function rc_get_module_dir
  (c-name "gtk_rc_get_module_dir")
  (caller-owns-return #t)
  (return-type "gchar*")
)

(define-function rc_get_im_module_path
  (c-name "gtk_rc_get_im_module_path")
  (caller-owns-return #t)
  (return-type "gchar*")
)

(define-function rc_get_im_module_file
  (c-name "gtk_rc_get_im_module_file")
  (caller-owns-return #t)
  (return-type "gchar*")
)

(define-function rc_scanner_new
  (is-constructor-of "GtkRcScanner")
  (c-name "gtk_rc_scanner_new")
  (caller-owns-return #t)
  (return-type "GScanner*")
)

(define-function rc_parse_color
  (c-name "gtk_rc_parse_color")
  (return-type "guint")
  (parameters
    '("GScanner*" "scanner" (in))
    '("GdkColor*" "color" (in))
  )
)

(define-function rc_parse_state
  (c-name "gtk_rc_parse_state")
  (return-type "guint")
  (parameters
    '("GScanner*" "scanner" (in))
    '("GtkStateType*" "state" (in))
  )
)

(define-function rc_parse_priority
  (c-name "gtk_rc_parse_priority")
  (return-type "guint")
  (parameters
    '("GScanner*" "scanner" (in))
    '("GtkPathPriorityType*" "priority" (in))
  )
)

(define-function gtk_ruler_get_type
  (c-name "gtk_ruler_get_type")
  (return-type "GType")
)

(define-method set_metric
  (of-object "GtkRuler")
  (c-name "gtk_ruler_set_metric")
  (return-type "none")
  (parameters
    '("GtkMetricType" "metric" (in))
  )
)

(define-method set_range
  (of-object "GtkRuler")
  (c-name "gtk_ruler_set_range")
  (return-type "none")
  (parameters
    '("gdouble" "lower" (in))
    '("gdouble" "upper" (in))
    '("gdouble" "position" (in))
    '("gdouble" "max_size" (in))
  )
)

;(define-method draw_ticks
;  (of-object "GtkRuler")
;  (c-name "gtk_ruler_draw_ticks")
;  (return-type "none")
;)

;(define-method draw_pos
;  (of-object "GtkRuler")
;  (c-name "gtk_ruler_draw_pos")
;  (return-type "none")
;)

(define-method get_metric
  (of-object "GtkRuler")
  (c-name "gtk_ruler_get_metric")
  (return-type "GtkMetricType")
)

(define-method get_range
  (of-object "GtkRuler")
  (c-name "gtk_ruler_get_range")
  (return-type "none")
  (parameters
    '("gdouble*" "lower" (out))
    '("gdouble*" "upper" (out))
    '("gdouble*" "position" (out))
    '("gdouble*" "max_size" (out))
  )
)

(define-function gtk_scale_get_type
  (c-name "gtk_scale_get_type")
  (return-type "GType")
)

(define-method set_digits
  (of-object "GtkScale")
  (c-name "gtk_scale_set_digits")
  (return-type "none")
  (parameters
    '("gint" "digits" (in))
  )
)

(define-method get_digits
  (of-object "GtkScale")
  (c-name "gtk_scale_get_digits")
  (return-type "gint")
)

(define-method set_draw_value
  (of-object "GtkScale")
  (c-name "gtk_scale_set_draw_value")
  (return-type "none")
  (parameters
    '("gboolean" "draw_value" (in))
  )
)

(define-method get_draw_value
  (of-object "GtkScale")
  (c-name "gtk_scale_get_draw_value")
  (return-type "gboolean")
)

(define-method set_value_pos
  (of-object "GtkScale")
  (c-name "gtk_scale_set_value_pos")
  (return-type "none")
  (parameters
    '("GtkPositionType" "pos" (in))
  )
)

(define-method get_value_pos
  (of-object "GtkScale")
  (c-name "gtk_scale_get_value_pos")
  (return-type "GtkPositionType")
)

(define-method get_layout
  (of-object "GtkScale")
  (c-name "gtk_scale_get_layout")
  (return-type "PangoLayout*")
)

(define-method get_layout_offsets
  (of-object "GtkScale")
  (c-name "gtk_scale_get_layout_offsets")
  (return-type "none")
  (parameters
    '("gint*" "x" (out))
    '("gint*" "y" (out))
  )
)

(define-function gtk_scrollbar_get_type
  (c-name "gtk_scrollbar_get_type")
  (return-type "GType")
)

(define-function gtk_scrolled_window_get_type
  (c-name "gtk_scrolled_window_get_type")
  (return-type "GType")
)

(define-function gtk_scrolled_window_new
  (is-constructor-of "GtkScrolledWindow")
  (c-name "gtk_scrolled_window_new")
  (caller-owns-return #t)
  (return-type "GtkWidget*")
  (properties
    '("hadjustment" (optional) (argname "hadjustment"))
    '("vadjustment" (optional) (argname "vadjustment"))
  )
)

(define-method set_hadjustment
  (of-object "GtkScrolledWindow")
  (c-name "gtk_scrolled_window_set_hadjustment")
  (return-type "none")
  (parameters
    '("GtkAdjustment*" "hadjustment" (in))
  )
)

(define-method set_vadjustment
  (of-object "GtkScrolledWindow")
  (c-name "gtk_scrolled_window_set_vadjustment")
  (return-type "none")
  (parameters
    '("GtkAdjustment*" "hadjustment" (in))
  )
)

(define-method get_hadjustment
  (of-object "GtkScrolledWindow")
  (c-name "gtk_scrolled_window_get_hadjustment")
  (return-type "GtkAdjustment*")
)

(define-method get_vadjustment
  (of-object "GtkScrolledWindow")
  (c-name "gtk_scrolled_window_get_vadjustment")
  (return-type "GtkAdjustment*")
)

(define-method get_hscrollbar
  (of-object "GtkScrolledWindow")
  (c-name "gtk_scrolled_window_get_hscrollbar")
  (return-type "GtkWidget*")
)

(define-method get_vscrollbar
  (of-object "GtkScrolledWindow")
  (c-name "gtk_scrolled_window_get_vscrollbar")
  (return-type "GtkWidget*")
)

(define-method set_policy
  (of-object "GtkScrolledWindow")
  (c-name "gtk_scrolled_window_set_policy")
  (return-type "none")
  (parameters
    '("GtkPolicyType" "hscrollbar_policy" (in))
    '("GtkPolicyType" "vscrollbar_policy" (in))
  )
)

(define-method get_policy
  (of-object "GtkScrolledWindow")
  (c-name "gtk_scrolled_window_get_policy")
  (return-type "none")
  (parameters
    '("GtkPolicyType*" "hscrollbar_policy" (out))
    '("GtkPolicyType*" "vscrollbar_policy" (out))
  )
)

(define-method set_placement
  (of-object "GtkScrolledWindow")
  (c-name "gtk_scrolled_window_set_placement")
  (return-type "none")
  (parameters
    '("GtkCornerType" "window_placement" (in))
  )
)

(define-method get_placement
  (of-object "GtkScrolledWindow")
  (c-name "gtk_scrolled_window_get_placement")
  (return-type "GtkCornerType")
)

(define-method set_shadow_type
  (of-object "GtkScrolledWindow")
  (c-name "gtk_scrolled_window_set_shadow_type")
  (return-type "none")
  (parameters
    '("GtkShadowType" "type" (in))
  )
)

(define-method get_shadow_type
  (of-object "GtkScrolledWindow")
  (c-name "gtk_scrolled_window_get_shadow_type")
  (return-type "GtkShadowType")
)

(define-method add_with_viewport
  (of-object "GtkScrolledWindow")
  (c-name "gtk_scrolled_window_add_with_viewport")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child" (in))
  )
)

(define-function gtk_target_list_new
  (is-constructor-of "GtkTargetList")
  (c-name "gtk_target_list_new")
  (caller-owns-return #t)
  (return-type "GtkTargetList*")
  (parameters
    '("const-GtkTargetEntry[]" "targets" (in))
    '("guint" "ntargets" (in))
  )
)

(define-method ref
  (of-object "GtkTargetList")
  (c-name "gtk_target_list_ref")
  (return-type "none")
)

(define-method unref
  (of-object "GtkTargetList")
  (c-name "gtk_target_list_unref")
  (return-type "none")
)

(define-method add
  (of-object "GtkTargetList")
  (c-name "gtk_target_list_add")
  (return-type "none")
  (parameters
    '("GdkAtom" "target" (in))
    '("guint" "flags" (in))
    '("guint" "info" (in))
  )
)

(define-method add_table
  (of-object "GtkTargetList")
  (c-name "gtk_target_list_add_table")
  (return-type "none")
  (parameters
    '("const-GtkTargetEntry[]" "targets" (in))
    '("guint" "ntargets" (in))
  )
)

(define-method remove
  (of-object "GtkTargetList")
  (c-name "gtk_target_list_remove")
  (return-type "none")
  (parameters
    '("GdkAtom" "target" (in))
  )
)

(define-method find
  (of-object "GtkTargetList")
  (c-name "gtk_target_list_find")
  (return-type "gboolean")
  (parameters
    '("GdkAtom" "target" (in))
    '("guint*" "info" (out))
  )
)

(define-method selection_owner_set
  (of-object "GtkWidget")
  (c-name "gtk_selection_owner_set")
  (return-type "gboolean")
  (parameters
    '("GdkAtom" "selection" (in))
    '("guint32" "time" (in) (default "GDK_CURRENT_TIME"))
  )
)

(define-function selection_owner_set_for_display
  (c-name "gtk_selection_owner_set_for_display")
  (return-type "gboolean")
  (parameters
    '("GdkDisplay*" "display" (in))
    '("GtkWidget*" "widget" (in) (null-ok))
    '("GdkAtom" "selection" (in))
    '("guint32" "time" (in) (default "GDK_CURRENT_TIME"))
  )
)

(define-method selection_add_target
  (of-object "GtkWidget")
  (c-name "gtk_selection_add_target")
  (return-type "none")
  (parameters
    '("GdkAtom" "selection" (in))
    '("GdkAtom" "target" (in))
    '("guint" "info" (in))
  )
)

(define-method selection_add_targets
  (of-object "GtkWidget")
  (c-name "gtk_selection_add_targets")
  (return-type "none")
  (parameters
    '("GdkAtom" "selection" (in))
    '("const-GtkTargetEntry[]" "targets" (in))
    '("guint" "ntargets" (in))
  )
)

(define-method selection_clear_targets
  (of-object "GtkWidget")
  (c-name "gtk_selection_clear_targets")
  (return-type "none")
  (parameters
    '("GdkAtom" "selection" (in))
  )
)

(define-method selection_convert
  (of-object "GtkWidget")
  (c-name "gtk_selection_convert")
  (return-type "gboolean")
  (parameters
    '("GdkAtom" "selection" (in))
    '("GdkAtom" "target" (in))
    '("guint32" "time" (in) (default "GDK_CURRENT_TIME"))
  )
)

(define-method set
  (of-object "GtkSelectionData")
  (c-name "gtk_selection_data_set")
  (return-type "none")
  (parameters
    '("GdkAtom" "type" (in))
    '("gint" "format" (in))
    '("const-guchar*" "data" (in))
    '("gint" "length" (in))
  )
)

(define-method set_text
  (of-object "GtkSelectionData")
  (c-name "gtk_selection_data_set_text")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "str" (in))
    '("gint" "len" (in) (default "-1"))
  )
)

(define-method get_text
  (of-object "GtkSelectionData")
  (c-name "gtk_selection_data_get_text")
  (caller-owns-return #t)
  (return-type "guchar*")
)

(define-method get_targets
  (of-object "GtkSelectionData")
  (c-name "gtk_selection_data_get_targets")
  (return-type "gboolean")
  (parameters
    '("GdkAtom*[]" "targets" (out))
    '("gint*" "n_atoms" (out))
  )
)

(define-method targets_include_text
  (of-object "GtkSelectionData")
  (c-name "gtk_selection_data_targets_include_text")
  (return-type "gboolean")
)

(define-method selection_remove_all
  (of-object "GtkWidget")
  (c-name "gtk_selection_remove_all")
  (return-type "none")
)

(define-method selection_clear
  (of-object "GtkWidget")
  (c-name "gtk_selection_clear")
  (return-type "gboolean")
  (parameters
    '("GdkEventSelection*" "event" (in))
  )
)

(define-function gtk_selection_data_get_type
  (c-name "gtk_selection_data_get_type")
  (return-type "GType")
)

(define-method copy
  (of-object "GtkSelectionData")
  (c-name "gtk_selection_data_copy")
  (caller-owns-return #t)
  (return-type "GtkSelectionData*")
)

(define-method free
  (of-object "GtkSelectionData")
  (c-name "gtk_selection_data_free")
  (return-type "none")
)

(define-method set_pixbuf
  (of-object "GtkSelectionData")
  (c-name "gtk_selection_data_set_pixbuf")
  (return-type "gboolean")
  (parameters
    '("GdkPixbuf*" "pixbuf" (in))
  )
)

(define-method get_pixbuf
  (of-object "GtkSelectionData")
  (c-name "gtk_selection_data_get_pixbuf")
  (caller-owns-return #t)
  (return-type "GdkPixbuf*")
)

(define-method set_uris
  (of-object "GtkSelectionData")
  (c-name "gtk_selection_data_set_uris")
  (return-type "gboolean")
  (parameters
    '("gchar**" "uris" (in))
  )
)

(define-method get_uris
  (of-object "GtkSelectionData")
  (c-name "gtk_selection_data_get_uris")
  (caller-owns-return #t)
  (return-type "gchar**")
)

(define-method targets_include_image
  (of-object "GtkSelectionData")
  (c-name "gtk_selection_data_targets_include_image")
  (return-type "gboolean")
  (parameters
    '("gboolean" "writable" (in))
  )
)

(define-function gtk_separator_get_type
  (c-name "gtk_separator_get_type")
  (return-type "GType")
)

(define-function gtk_separator_menu_item_get_type
  (c-name "gtk_separator_menu_item_get_type")
  (return-type "GType")
)

(define-function gtk_separator_menu_item_new
  (is-constructor-of "GtkSeparatorMenuItem")
  (c-name "gtk_separator_menu_item_new")
  (caller-owns-return #t)
  (return-type "GtkWidget*")
)

(define-function gtk_separator_tool_item_get_type
  (c-name "gtk_separator_tool_item_get_type")
  (return-type "GType")
)

(define-function gtk_separator_tool_item_new
  (is-constructor-of "GtkSeparatorToolItem")
  (c-name "gtk_separator_tool_item_new")
  (caller-owns-return #t)
  (return-type "GtkToolItem*")
)

(define-method get_draw
  (of-object "GtkSeparatorToolItem")
  (c-name "gtk_separator_tool_item_get_draw")
  (return-type "gboolean")
)

(define-method set_draw
  (of-object "GtkSeparatorToolItem")
  (c-name "gtk_separator_tool_item_set_draw")
  (return-type "none")
  (parameters
    '("gboolean" "draw" (in))
  )
)

(define-function gtk_settings_get_type
  (c-name "gtk_settings_get_type")
  (return-type "GType")
)

(define-function settings_get_default
  (c-name "gtk_settings_get_default")
  (return-type "GtkSettings*")
)

(define-function settings_get_for_screen
  (c-name "gtk_settings_get_for_screen")
  (return-type "GtkSettings*")
  (parameters
    '("GdkScreen*" "screen" (in))
  )
)

(define-function settings_install_property
  (c-name "gtk_settings_install_property")
  (return-type "none")
  (parameters
    '("GParamSpec*" "pspec" (in))
  )
)

(define-function settings_install_property_parser
  (c-name "gtk_settings_install_property_parser")
  (return-type "none")
  (parameters
    '("GParamSpec*" "pspec" (in))
    '("GtkRcPropertyParser" "parser" (in))
  )
)

(define-function rc_property_parse_color
  (c-name "gtk_rc_property_parse_color")
  (return-type "gboolean")
  (parameters
    '("const-GParamSpec*" "pspec" (in))
    '("const-GString*" "gstring" (in))
    '("GValue*" "property_value" (out))
  )
)

(define-function rc_property_parse_enum
  (c-name "gtk_rc_property_parse_enum")
  (return-type "gboolean")
  (parameters
    '("const-GParamSpec*" "pspec" (in))
    '("const-GString*" "gstring" (in))
    '("GValue*" "property_value" (out))
  )
)

(define-function rc_property_parse_flags
  (c-name "gtk_rc_property_parse_flags")
  (return-type "gboolean")
  (parameters
    '("const-GParamSpec*" "pspec" (in))
    '("const-GString*" "gstring" (in))
    '("GValue*" "property_value" (out))
  )
)

(define-function rc_property_parse_requisition
  (c-name "gtk_rc_property_parse_requisition")
  (return-type "gboolean")
  (parameters
    '("const-GParamSpec*" "pspec" (in))
    '("const-GString*" "gstring" (in))
    '("GValue*" "property_value" (out))
  )
)

(define-function rc_property_parse_border
  (c-name "gtk_rc_property_parse_border")
  (return-type "gboolean")
  (parameters
    '("const-GParamSpec*" "pspec" (in))
    '("const-GString*" "gstring" (in))
    '("GValue*" "property_value" (out))
  )
)

(define-method set_property_value
  (of-object "GtkSettings")
  (c-name "gtk_settings_set_property_value")
  (return-type "none")
  (parameters
    '("const-gchar*" "name" (in))
    '("const-GtkSettingsValue*" "svalue" (in))
  )
)

(define-method set_string_property
  (of-object "GtkSettings")
  (c-name "gtk_settings_set_string_property")
  (return-type "none")
  (parameters
    '("const-gchar*" "name" (in))
    '("const-gchar*" "v_string" (in))
    '("const-gchar*" "origin" (in))
  )
)

(define-method set_long_property
  (of-object "GtkSettings")
  (c-name "gtk_settings_set_long_property")
  (return-type "none")
  (parameters
    '("const-gchar*" "name" (in))
    '("glong" "v_long" (in))
    '("const-gchar*" "origin" (in))
  )
)

(define-method set_double_property
  (of-object "GtkSettings")
  (c-name "gtk_settings_set_double_property")
  (return-type "none")
  (parameters
    '("const-gchar*" "name" (in))
    '("gdouble" "v_double" (in))
    '("const-gchar*" "origin" (in))
  )
)

(define-function gtk_size_group_get_type
  (c-name "gtk_size_group_get_type")
  (return-type "GType")
)

(define-function size_group_new
  (is-constructor-of "GtkSizeGroup")
  (c-name "gtk_size_group_new")
  (caller-owns-return #t)
  (return-type "GtkSizeGroup*")
  (properties
    '("mode" (argname "mode"))
  )
)

(define-method set_mode
  (of-object "GtkSizeGroup")
  (c-name "gtk_size_group_set_mode")
  (return-type "none")
  (parameters
    '("GtkSizeGroupMode" "mode" (in))
  )
)

(define-method get_mode
  (of-object "GtkSizeGroup")
  (c-name "gtk_size_group_get_mode")
  (return-type "GtkSizeGroupMode")
)

(define-method set_ignore_hidden
  (of-object "GtkSizeGroup")
  (c-name "gtk_size_group_set_ignore_hidden")
  (return-type "none")
  (parameters
    '("gboolean" "ignore_hidden" (in))
  )
)

(define-method get_ignore_hidden
  (of-object "GtkSizeGroup")
  (c-name "gtk_size_group_get_ignore_hidden")
  (return-type "gboolean")
)

(define-method add_widget
  (of-object "GtkSizeGroup")
  (c-name "gtk_size_group_add_widget")
  (return-type "none")
  (parameters
    '("GtkWidget*" "widget" (in))
  )
)

(define-method remove_widget
  (of-object "GtkSizeGroup")
  (c-name "gtk_size_group_remove_widget")
  (return-type "none")
  (parameters
    '("GtkWidget*" "widget" (in))
  )
)

(define-function gtk_socket_get_type
  (c-name "gtk_socket_get_type")
  (return-type "GType")
)

(define-function gtk_socket_new
  (is-constructor-of "GtkSocket")
  (c-name "gtk_socket_new")
  (caller-owns-return #t)
  (return-type "GtkWidget*")
)

(define-method add_id
  (of-object "GtkSocket")
  (c-name "gtk_socket_add_id")
  (return-type "none")
  (parameters
    '("GdkNativeWindow" "window_id" (in))
  )
)

(define-method get_id
  (of-object "GtkSocket")
  (c-name "gtk_socket_get_id")
  (return-type "GdkNativeWindow")
)

(define-method steal
  (of-object "GtkSocket")
  (c-name "gtk_socket_steal")
  (return-type "none")
  (parameters
    '("GdkNativeWindow" "wid" (in))
  )
)

(define-function gtk_spin_button_get_type
  (c-name "gtk_spin_button_get_type")
  (return-type "GType")
)

(define-method configure
  (of-object "GtkSpinButton")
  (c-name "gtk_spin_button_configure")
  (return-type "none")
  (parameters
    '("GtkAdjustment*" "adjustment" (in) (null-ok))
    '("gdouble" "climb_rate" (in))
    '("guint" "digits" (in))
  )
)

(define-function gtk_spin_button_new
  (is-constructor-of "GtkSpinButton")
  (c-name "gtk_spin_button_new")
  (caller-owns-return #t)
  (return-type "GtkWidget*")
  (properties
    '("adjustment" (optional) (argname "adjustment"))
    '("climb_rate" (optional) (argname "climb_rate"))
    '("digits" (optional) (argname "digits"))
  )
)

(define-function gtk_spin_button_new_with_range
  (is-constructor-of "GtkSpinButton")
  (c-name "gtk_spin_button_new_with_range")
  (caller-owns-return #t)
  (return-type "GtkWidget*")
  (parameters
    '("gdouble" "min" (in))
    '("gdouble" "max" (in))
    '("gdouble" "step" (in))
  )
)

(define-method set_adjustment
  (of-object "GtkSpinButton")
  (c-name "gtk_spin_button_set_adjustment")
  (return-type "none")
  (parameters
    '("GtkAdjustment*" "adjustment" (in))
  )
)

(define-method get_adjustment
  (of-object "GtkSpinButton")
  (c-name "gtk_spin_button_get_adjustment")
  (return-type "GtkAdjustment*")
)

(define-method set_digits
  (of-object "GtkSpinButton")
  (c-name "gtk_spin_button_set_digits")
  (return-type "none")
  (parameters
    '("guint" "digits" (in))
  )
)

(define-method get_digits
  (of-object "GtkSpinButton")
  (c-name "gtk_spin_button_get_digits")
  (return-type "guint")
)

(define-method set_increments
  (of-object "GtkSpinButton")
  (c-name "gtk_spin_button_set_increments")
  (return-type "none")
  (parameters
    '("gdouble" "step" (in))
    '("gdouble" "page" (in))
  )
)

(define-method get_increments
  (of-object "GtkSpinButton")
  (c-name "gtk_spin_button_get_increments")
  (return-type "none")
  (parameters
    '("gdouble*" "step" (out))
    '("gdouble*" "page" (out))
  )
)

(define-method set_range
  (of-object "GtkSpinButton")
  (c-name "gtk_spin_button_set_range")
  (return-type "none")
  (parameters
    '("gdouble" "min" (in))
    '("gdouble" "max" (in))
  )
)

(define-method get_range
  (of-object "GtkSpinButton")
  (c-name "gtk_spin_button_get_range")
  (return-type "none")
  (parameters
    '("gdouble*" "min" (out))
    '("gdouble*" "max" (out))
  )
)

(define-method get_value
  (of-object "GtkSpinButton")
  (c-name "gtk_spin_button_get_value")
  (return-type "gdouble")
)

(define-method get_value_as_int
  (of-object "GtkSpinButton")
  (c-name "gtk_spin_button_get_value_as_int")
  (return-type "gint")
)

(define-method set_value
  (of-object "GtkSpinButton")
  (c-name "gtk_spin_button_set_value")
  (return-type "none")
  (parameters
    '("gdouble" "value" (in))
  )
)

(define-method set_update_policy
  (of-object "GtkSpinButton")
  (c-name "gtk_spin_button_set_update_policy")
  (return-type "none")
  (parameters
    '("GtkSpinButtonUpdatePolicy" "policy" (in))
  )
)

(define-method get_update_policy
  (of-object "GtkSpinButton")
  (c-name "gtk_spin_button_get_update_policy")
  (return-type "guint")
)

(define-method set_numeric
  (of-object "GtkSpinButton")
  (c-name "gtk_spin_button_set_numeric")
  (return-type "none")
  (parameters
    '("gboolean" "numeric" (in))
  )
)

(define-method get_numeric
  (of-object "GtkSpinButton")
  (c-name "gtk_spin_button_get_numeric")
  (return-type "gboolean")
)

(define-method spin
  (of-object "GtkSpinButton")
  (c-name "gtk_spin_button_spin")
  (return-type "none")
  (parameters
    '("GtkSpinType" "direction" (in))
    '("gdouble" "increment" (in))
  )
)

(define-method set_wrap
  (of-object "GtkSpinButton")
  (c-name "gtk_spin_button_set_wrap")
  (return-type "none")
  (parameters
    '("gboolean" "wrap" (in))
  )
)

(define-method get_wrap
  (of-object "GtkSpinButton")
  (c-name "gtk_spin_button_get_wrap")
  (return-type "gboolean")
)

(define-method set_snap_to_ticks
  (of-object "GtkSpinButton")
  (c-name "gtk_spin_button_set_snap_to_ticks")
  (return-type "none")
  (parameters
    '("gboolean" "snap_to_ticks" (in))
  )
)

(define-method get_snap_to_ticks
  (of-object "GtkSpinButton")
  (c-name "gtk_spin_button_get_snap_to_ticks")
  (return-type "gboolean")
)

(define-method update
  (of-object "GtkSpinButton")
  (c-name "gtk_spin_button_update")
  (return-type "none")
)

(define-function gtk_statusbar_get_type
  (c-name "gtk_statusbar_get_type")
  (return-type "GType")
)

(define-function gtk_statusbar_new
  (is-constructor-of "GtkStatusbar")
  (c-name "gtk_statusbar_new")
  (caller-owns-return #t)
  (return-type "GtkWidget*")
)

(define-method get_context_id
  (of-object "GtkStatusbar")
  (c-name "gtk_statusbar_get_context_id")
  (return-type "guint")
  (parameters
    '("const-gchar*" "context_description" (in))
  )
)

(define-method push
  (of-object "GtkStatusbar")
  (c-name "gtk_statusbar_push")
  (return-type "guint")
  (parameters
    '("guint" "context_id" (in))
    '("const-gchar*" "text" (in))
  )
)

(define-method pop
  (of-object "GtkStatusbar")
  (c-name "gtk_statusbar_pop")
  (return-type "none")
  (parameters
    '("guint" "context_id" (in))
  )
)

(define-method remove
  (of-object "GtkStatusbar")
  (c-name "gtk_statusbar_remove")
  (return-type "none")
  (parameters
    '("guint" "context_id" (in))
    '("guint" "message_id" (in))
  )
)

(define-method set_has_resize_grip
  (of-object "GtkStatusbar")
  (c-name "gtk_statusbar_set_has_resize_grip")
  (return-type "none")
  (parameters
    '("gboolean" "setting" (in))
  )
)

(define-method get_has_resize_grip
  (of-object "GtkStatusbar")
  (c-name "gtk_statusbar_get_has_resize_grip")
  (return-type "gboolean")
)

(define-function stock_add
  (c-name "gtk_stock_add")
  (return-type "none")
  (parameters
    '("const-GtkStockItem[]" "items" (in))
    '("guint" "n_items" (in))
  )
)

(define-function stock_add_static
  (c-name "gtk_stock_add_static")
  (return-type "none")
  (parameters
    '("const-GtkStockItem[]" "items" (in))
    '("guint" "n_items" (in))
  )
)

(define-function stock_lookup
  (c-name "gtk_stock_lookup")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "stock_id" (in))
    '("GtkStockItem*" "item" (out))
  )
)

(define-function stock_list_ids
  (c-name "gtk_stock_list_ids")
  (caller-owns-return #t)
  (return-type "GSList[gchar*]")
)

(define-method copy
  (of-object "GtkStockItem")
  (c-name "gtk_stock_item_copy")
  (caller-owns-return #t)
  (return-type "GtkStockItem*")
)

(define-method free
  (of-object "GtkStockItem")
  (c-name "gtk_stock_item_free")
  (return-type "none")
)

(define-function stock_set_translate_func
  (c-name "gtk_stock_set_translate_func")
  (return-type "none")
  (parameters
    '("const-gchar*" "domain" (in))
    '("GtkTranslateFunc" "func" (in))
    '("gpointer" "data" (in))
    '("GtkDestroyNotify" "notify" (in))
  )
)

(define-function gtk_style_get_type
  (c-name "gtk_style_get_type")
  (return-type "GType")
)

(define-function gtk_style_new
  (is-constructor-of "GtkStyle")
  (c-name "gtk_style_new")
  (caller-owns-return #t)
  (return-type "GtkStyle*")
)

(define-method copy
  (of-object "GtkStyle")
  (c-name "gtk_style_copy")
  (caller-owns-return #t)
  (return-type "GtkStyle*")
)

(define-method attach
  (of-object "GtkStyle")
  (c-name "gtk_style_attach")
  (caller-owns-return #t)
  (return-type "GtkStyle*")
  (parameters
    '("GdkWindow*" "window" (in))
  )
)

(define-method detach
  (of-object "GtkStyle")
  (c-name "gtk_style_detach")
  (return-type "none")
)

(define-method ref
  (of-object "GtkStyle")
  (c-name "gtk_style_ref")
  (return-type "GtkStyle*")
)

(define-method unref
  (of-object "GtkStyle")
  (c-name "gtk_style_unref")
  (return-type "none")
)

(define-method get_font
  (of-object "GtkStyle")
  (c-name "gtk_style_get_font")
  (return-type "GdkFont*")
)

(define-method set_font
  (of-object "GtkStyle")
  (c-name "gtk_style_set_font")
  (return-type "none")
  (parameters
    '("GdkFont*" "font" (in))
  )
)

(define-method set_background
  (of-object "GtkStyle")
  (c-name "gtk_style_set_background")
  (return-type "none")
  (parameters
    '("GdkWindow*" "window" (in))
    '("GtkStateType" "state_type" (in))
  )
)

(define-method apply_default_background
  (of-object "GtkStyle")
  (c-name "gtk_style_apply_default_background")
  (return-type "none")
  (parameters
    '("GdkWindow*" "window" (in))
    '("gboolean" "set_bg" (in))
    '("GtkStateType" "state_type" (in))
    '("GdkRectangle*" "area" (in) (null-ok))
    '("gint" "x" (in))
    '("gint" "y" (in))
    '("gint" "width" (in))
    '("gint" "height" (in))
  )
)

(define-method lookup_icon_set
  (of-object "GtkStyle")
  (c-name "gtk_style_lookup_icon_set")
  (return-type "GtkIconSet*")
  (parameters
    '("const-gchar*" "stock_id" (in))
  )
)

(define-method render_icon
  (of-object "GtkStyle")
  (c-name "gtk_style_render_icon")
  (caller-owns-return #t)
  (return-type "GdkPixbuf*")
  (parameters
    '("const-GtkIconSource*" "source" (in))
    '("GtkTextDirection" "direction" (in))
    '("GtkStateType" "state" (in))
    '("GtkIconSize" "size" (in))
    '("GtkWidget*" "widget" (in) (default "NULL") (null-ok))
    '("const-gchar*" "detail" (in) (default "NULL") (null-ok))
  )
)

(define-method draw_hline
  (of-object "GtkStyle")
  (c-name "gtk_draw_hline")
  (return-type "none")
  (parameters
    '("GdkWindow*" "window" (in))
    '("GtkStateType" "state_type" (in))
    '("gint" "x1" (in))
    '("gint" "x2" (in))
    '("gint" "y" (in))
  )
)

(define-method draw_vline
  (of-object "GtkStyle")
  (c-name "gtk_draw_vline")
  (return-type "none")
  (parameters
    '("GdkWindow*" "window" (in))
    '("GtkStateType" "state_type" (in))
    '("gint" "y1" (in))
    '("gint" "y2" (in))
    '("gint" "x" (in))
  )
)

(define-method draw_shadow
  (of-object "GtkStyle")
  (c-name "gtk_draw_shadow")
  (return-type "none")
  (parameters
    '("GdkWindow*" "window" (in))
    '("GtkStateType" "state_type" (in))
    '("GtkShadowType" "shadow_type" (in))
    '("gint" "x" (in))
    '("gint" "y" (in))
    '("gint" "width" (in))
    '("gint" "height" (in))
  )
)

(define-method draw_polygon
  (of-object "GtkStyle")
  (c-name "gtk_draw_polygon")
  (return-type "none")
  (parameters
    '("GdkWindow*" "window" (in))
    '("GtkStateType" "state_type" (in))
    '("GtkShadowType" "shadow_type" (in))
    '("GdkPoint[]" "points" (in))
    '("gint" "npoints" (in))
    '("gboolean" "fill" (in))
  )
)

(define-method draw_arrow
  (of-object "GtkStyle")
  (c-name "gtk_draw_arrow")
  (return-type "none")
  (parameters
    '("GdkWindow*" "window" (in))
    '("GtkStateType" "state_type" (in))
    '("GtkShadowType" "shadow_type" (in))
    '("GtkArrowType" "arrow_type" (in))
    '("gboolean" "fill" (in))
    '("gint" "x" (in))
    '("gint" "y" (in))
    '("gint" "width" (in))
    '("gint" "height" (in))
  )
)

(define-method draw_diamond
  (of-object "GtkStyle")
  (c-name "gtk_draw_diamond")
  (return-type "none")
  (parameters
    '("GdkWindow*" "window" (in))
    '("GtkStateType" "state_type" (in))
    '("GtkShadowType" "shadow_type" (in))
    '("gint" "x" (in))
    '("gint" "y" (in))
    '("gint" "width" (in))
    '("gint" "height" (in))
  )
)

(define-method draw_box
  (of-object "GtkStyle")
  (c-name "gtk_draw_box")
  (return-type "none")
  (parameters
    '("GdkWindow*" "window" (in))
    '("GtkStateType" "state_type" (in))
    '("GtkShadowType" "shadow_type" (in))
    '("gint" "x" (in))
    '("gint" "y" (in))
    '("gint" "width" (in))
    '("gint" "height" (in))
  )
)

(define-method draw_flat_box
  (of-object "GtkStyle")
  (c-name "gtk_draw_flat_box")
  (return-type "none")
  (parameters
    '("GdkWindow*" "window" (in))
    '("GtkStateType" "state_type" (in))
    '("GtkShadowType" "shadow_type" (in))
    '("gint" "x" (in))
    '("gint" "y" (in))
    '("gint" "width" (in))
    '("gint" "height" (in))
  )
)

(define-method draw_check
  (of-object "GtkStyle")
  (c-name "gtk_draw_check")
  (return-type "none")
  (parameters
    '("GdkWindow*" "window" (in))
    '("GtkStateType" "state_type" (in))
    '("GtkShadowType" "shadow_type" (in))
    '("gint" "x" (in))
    '("gint" "y" (in))
    '("gint" "width" (in))
    '("gint" "height" (in))
  )
)

(define-method draw_option
  (of-object "GtkStyle")
  (c-name "gtk_draw_option")
  (return-type "none")
  (parameters
    '("GdkWindow*" "window" (in))
    '("GtkStateType" "state_type" (in))
    '("GtkShadowType" "shadow_type" (in))
    '("gint" "x" (in))
    '("gint" "y" (in))
    '("gint" "width" (in))
    '("gint" "height" (in))
  )
)

(define-method draw_tab
  (of-object "GtkStyle")
  (c-name "gtk_draw_tab")
  (return-type "none")
  (parameters
    '("GdkWindow*" "window" (in))
    '("GtkStateType" "state_type" (in))
    '("GtkShadowType" "shadow_type" (in))
    '("gint" "x" (in))
    '("gint" "y" (in))
    '("gint" "width" (in))
    '("gint" "height" (in))
  )
)

(define-method draw_shadow_gap
  (of-object "GtkStyle")
  (c-name "gtk_draw_shadow_gap")
  (return-type "none")
  (parameters
    '("GdkWindow*" "window" (in))
    '("GtkStateType" "state_type" (in))
    '("GtkShadowType" "shadow_type" (in))
    '("gint" "x" (in))
    '("gint" "y" (in))
    '("gint" "width" (in))
    '("gint" "height" (in))
    '("GtkPositionType" "gap_side" (in))
    '("gint" "gap_x" (in))
    '("gint" "gap_width" (in))
  )
)

(define-method draw_box_gap
  (of-object "GtkStyle")
  (c-name "gtk_draw_box_gap")
  (return-type "none")
  (parameters
    '("GdkWindow*" "window" (in))
    '("GtkStateType" "state_type" (in))
    '("GtkShadowType" "shadow_type" (in))
    '("gint" "x" (in))
    '("gint" "y" (in))
    '("gint" "width" (in))
    '("gint" "height" (in))
    '("GtkPositionType" "gap_side" (in))
    '("gint" "gap_x" (in))
    '("gint" "gap_width" (in))
  )
)

(define-method draw_extension
  (of-object "GtkStyle")
  (c-name "gtk_draw_extension")
  (return-type "none")
  (parameters
    '("GdkWindow*" "window" (in))
    '("GtkStateType" "state_type" (in))
    '("GtkShadowType" "shadow_type" (in))
    '("gint" "x" (in))
    '("gint" "y" (in))
    '("gint" "width" (in))
    '("gint" "height" (in))
    '("GtkPositionType" "gap_side" (in))
  )
)

(define-method draw_focus
  (of-object "GtkStyle")
  (c-name "gtk_draw_focus")
  (return-type "none")
  (parameters
    '("GdkWindow*" "window" (in))
    '("gint" "x" (in))
    '("gint" "y" (in))
    '("gint" "width" (in))
    '("gint" "height" (in))
  )
)

(define-method draw_slider
  (of-object "GtkStyle")
  (c-name "gtk_draw_slider")
  (return-type "none")
  (parameters
    '("GdkWindow*" "window" (in))
    '("GtkStateType" "state_type" (in))
    '("GtkShadowType" "shadow_type" (in))
    '("gint" "x" (in))
    '("gint" "y" (in))
    '("gint" "width" (in))
    '("gint" "height" (in))
    '("GtkOrientation" "orientation" (in))
  )
)

(define-method draw_handle
  (of-object "GtkStyle")
  (c-name "gtk_draw_handle")
  (return-type "none")
  (parameters
    '("GdkWindow*" "window" (in))
    '("GtkStateType" "state_type" (in))
    '("GtkShadowType" "shadow_type" (in))
    '("gint" "x" (in))
    '("gint" "y" (in))
    '("gint" "width" (in))
    '("gint" "height" (in))
    '("GtkOrientation" "orientation" (in))
  )
)

(define-method draw_expander
  (of-object "GtkStyle")
  (c-name "gtk_draw_expander")
  (return-type "none")
  (parameters
    '("GdkWindow*" "window" (in))
    '("GtkStateType" "state_type" (in))
    '("gint" "x" (in))
    '("gint" "y" (in))
    '("gboolean" "is_open" (in))
  )
)

(define-method draw_layout
  (of-object "GtkStyle")
  (c-name "gtk_draw_layout")
  (return-type "none")
  (parameters
    '("GdkWindow*" "window" (in))
    '("GtkStateType" "state_type" (in))
    '("gboolean" "use_text" (in))
    '("gint" "x" (in))
    '("gint" "y" (in))
    '("PangoLayout*" "layout" (in))
  )
)

(define-method draw_resize_grip
  (of-object "GtkStyle")
  (c-name "gtk_draw_resize_grip")
  (return-type "none")
  (parameters
    '("GdkWindow*" "window" (in))
    '("GtkStateType" "state_type" (in))
    '("GdkWindowEdge" "edge" (in))
    '("gint" "x" (in))
    '("gint" "y" (in))
    '("gint" "width" (in))
    '("gint" "height" (in))
  )
)

(define-method paint_hline
  (of-object "GtkStyle")
  (c-name "gtk_paint_hline")
  (return-type "none")
  (parameters
    '("GdkWindow*" "window" (in))
    '("GtkStateType" "state_type" (in))
    '("GdkRectangle*" "area" (in) (null-ok))
    '("GtkWidget*" "widget" (in) (null-ok))
    '("const-gchar*" "detail" (in) (null-ok))
    '("gint" "x1" (in))
    '("gint" "x2" (in))
    '("gint" "y" (in))
  )
)

(define-method paint_vline
  (of-object "GtkStyle")
  (c-name "gtk_paint_vline")
  (return-type "none")
  (parameters
    '("GdkWindow*" "window" (in))
    '("GtkStateType" "state_type" (in))
    '("GdkRectangle*" "area" (in) (null-ok))
    '("GtkWidget*" "widget" (in) (null-ok))
    '("const-gchar*" "detail" (in) (null-ok))
    '("gint" "y1" (in))
    '("gint" "y2" (in))
    '("gint" "x" (in))
  )
)

(define-method paint_shadow
  (of-object "GtkStyle")
  (c-name "gtk_paint_shadow")
  (return-type "none")
  (parameters
    '("GdkWindow*" "window" (in))
    '("GtkStateType" "state_type" (in))
    '("GtkShadowType" "shadow_type" (in))
    '("GdkRectangle*" "area" (in) (null-ok))
    '("GtkWidget*" "widget" (in) (null-ok))
    '("const-gchar*" "detail" (in) (null-ok))
    '("gint" "x" (in))
    '("gint" "y" (in))
    '("gint" "width" (in))
    '("gint" "height" (in))
  )
)

(define-method paint_polygon
  (of-object "GtkStyle")
  (c-name "gtk_paint_polygon")
  (return-type "none")
  (parameters
    '("GdkWindow*" "window" (in))
    '("GtkStateType" "state_type" (in))
    '("GtkShadowType" "shadow_type" (in))
    '("GdkRectangle*" "area" (in) (null-ok))
    '("GtkWidget*" "widget" (in) (null-ok))
    '("const-gchar*" "detail" (in) (null-ok))
    '("GdkPoint[]" "points" (in))
    '("gint" "npoints" (in))
    '("gboolean" "fill" (in))
  )
)

(define-method paint_arrow
  (of-object "GtkStyle")
  (c-name "gtk_paint_arrow")
  (return-type "none")
  (parameters
    '("GdkWindow*" "window" (in))
    '("GtkStateType" "state_type" (in))
    '("GtkShadowType" "shadow_type" (in))
    '("GdkRectangle*" "area" (in) (null-ok))
    '("GtkWidget*" "widget" (in) (null-ok))
    '("const-gchar*" "detail" (in) (null-ok))
    '("GtkArrowType" "arrow_type" (in))
    '("gboolean" "fill" (in))
    '("gint" "x" (in))
    '("gint" "y" (in))
    '("gint" "width" (in))
    '("gint" "height" (in))
  )
)

(define-method paint_diamond
  (of-object "GtkStyle")
  (c-name "gtk_paint_diamond")
  (return-type "none")
  (parameters
    '("GdkWindow*" "window" (in))
    '("GtkStateType" "state_type" (in))
    '("GtkShadowType" "shadow_type" (in))
    '("GdkRectangle*" "area" (in) (null-ok))
    '("GtkWidget*" "widget" (in) (null-ok))
    '("const-gchar*" "detail" (in) (null-ok))
    '("gint" "x" (in))
    '("gint" "y" (in))
    '("gint" "width" (in))
    '("gint" "height" (in))
  )
)

(define-method paint_box
  (of-object "GtkStyle")
  (c-name "gtk_paint_box")
  (return-type "none")
  (parameters
    '("GdkWindow*" "window" (in))
    '("GtkStateType" "state_type" (in))
    '("GtkShadowType" "shadow_type" (in))
    '("GdkRectangle*" "area" (in) (null-ok))
    '("GtkWidget*" "widget" (in) (null-ok))
    '("const-gchar*" "detail" (in) (null-ok))
    '("gint" "x" (in))
    '("gint" "y" (in))
    '("gint" "width" (in))
    '("gint" "height" (in))
  )
)

(define-method paint_flat_box
  (of-object "GtkStyle")
  (c-name "gtk_paint_flat_box")
  (return-type "none")
  (parameters
    '("GdkWindow*" "window" (in))
    '("GtkStateType" "state_type" (in))
    '("GtkShadowType" "shadow_type" (in))
    '("GdkRectangle*" "area" (in) (null-ok))
    '("GtkWidget*" "widget" (in) (null-ok))
    '("const-gchar*" "detail" (in) (null-ok))
    '("gint" "x" (in))
    '("gint" "y" (in))
    '("gint" "width" (in))
    '("gint" "height" (in))
  )
)

(define-method paint_check
  (of-object "GtkStyle")
  (c-name "gtk_paint_check")
  (return-type "none")
  (parameters
    '("GdkWindow*" "window" (in))
    '("GtkStateType" "state_type" (in))
    '("GtkShadowType" "shadow_type" (in))
    '("GdkRectangle*" "area" (in) (null-ok))
    '("GtkWidget*" "widget" (in) (null-ok))
    '("const-gchar*" "detail" (in) (null-ok))
    '("gint" "x" (in))
    '("gint" "y" (in))
    '("gint" "width" (in))
    '("gint" "height" (in))
  )
)

(define-method paint_option
  (of-object "GtkStyle")
  (c-name "gtk_paint_option")
  (return-type "none")
  (parameters
    '("GdkWindow*" "window" (in))
    '("GtkStateType" "state_type" (in))
    '("GtkShadowType" "shadow_type" (in))
    '("GdkRectangle*" "area" (in) (null-ok))
    '("GtkWidget*" "widget" (in) (null-ok))
    '("const-gchar*" "detail" (in) (null-ok))
    '("gint" "x" (in))
    '("gint" "y" (in))
    '("gint" "width" (in))
    '("gint" "height" (in))
  )
)

(define-method paint_tab
  (of-object "GtkStyle")
  (c-name "gtk_paint_tab")
  (return-type "none")
  (parameters
    '("GdkWindow*" "window" (in))
    '("GtkStateType" "state_type" (in))
    '("GtkShadowType" "shadow_type" (in))
    '("GdkRectangle*" "area" (in) (null-ok))
    '("GtkWidget*" "widget" (in) (null-ok))
    '("const-gchar*" "detail" (in) (null-ok))
    '("gint" "x" (in))
    '("gint" "y" (in))
    '("gint" "width" (in))
    '("gint" "height" (in))
  )
)

(define-method paint_shadow_gap
  (of-object "GtkStyle")
  (c-name "gtk_paint_shadow_gap")
  (return-type "none")
  (parameters
    '("GdkWindow*" "window" (in))
    '("GtkStateType" "state_type" (in))
    '("GtkShadowType" "shadow_type" (in))
    '("GdkRectangle*" "area" (in) (null-ok))
    '("GtkWidget*" "widget" (in) (null-ok))
    '("gchar*" "detail" (in) (null-ok))
    '("gint" "x" (in))
    '("gint" "y" (in))
    '("gint" "width" (in))
    '("gint" "height" (in))
    '("GtkPositionType" "gap_side" (in))
    '("gint" "gap_x" (in))
    '("gint" "gap_width" (in))
  )
)

(define-method paint_box_gap
  (of-object "GtkStyle")
  (c-name "gtk_paint_box_gap")
  (return-type "none")
  (parameters
    '("GdkWindow*" "window" (in))
    '("GtkStateType" "state_type" (in))
    '("GtkShadowType" "shadow_type" (in))
    '("GdkRectangle*" "area" (in) (null-ok))
    '("GtkWidget*" "widget" (in) (null-ok))
    '("gchar*" "detail" (in) (null-ok))
    '("gint" "x" (in))
    '("gint" "y" (in))
    '("gint" "width" (in))
    '("gint" "height" (in))
    '("GtkPositionType" "gap_side" (in))
    '("gint" "gap_x" (in))
    '("gint" "gap_width" (in))
  )
)

(define-method paint_extension
  (of-object "GtkStyle")
  (c-name "gtk_paint_extension")
  (return-type "none")
  (parameters
    '("GdkWindow*" "window" (in))
    '("GtkStateType" "state_type" (in))
    '("GtkShadowType" "shadow_type" (in))
    '("GdkRectangle*" "area" (in) (null-ok))
    '("GtkWidget*" "widget" (in) (null-ok))
    '("gchar*" "detail" (in) (null-ok))
    '("gint" "x" (in))
    '("gint" "y" (in))
    '("gint" "width" (in))
    '("gint" "height" (in))
    '("GtkPositionType" "gap_side" (in))
  )
)

(define-method paint_focus
  (of-object "GtkStyle")
  (c-name "gtk_paint_focus")
  (return-type "none")
  (parameters
    '("GdkWindow*" "window" (in))
    '("GtkStateType" "state_type" (in))
    '("GdkRectangle*" "area" (in) (null-ok))
    '("GtkWidget*" "widget" (in) (null-ok))
    '("const-gchar*" "detail" (in) (null-ok))
    '("gint" "x" (in))
    '("gint" "y" (in))
    '("gint" "width" (in))
    '("gint" "height" (in))
  )
)

(define-method paint_slider
  (of-object "GtkStyle")
  (c-name "gtk_paint_slider")
  (return-type "none")
  (parameters
    '("GdkWindow*" "window" (in))
    '("GtkStateType" "state_type" (in))
    '("GtkShadowType" "shadow_type" (in))
    '("GdkRectangle*" "area" (in) (null-ok))
    '("GtkWidget*" "widget" (in) (null-ok))
    '("const-gchar*" "detail" (in) (null-ok))
    '("gint" "x" (in))
    '("gint" "y" (in))
    '("gint" "width" (in))
    '("gint" "height" (in))
    '("GtkOrientation" "orientation" (in))
  )
)

(define-method paint_handle
  (of-object "GtkStyle")
  (c-name "gtk_paint_handle")
  (return-type "none")
  (parameters
    '("GdkWindow*" "window" (in))
    '("GtkStateType" "state_type" (in))
    '("GtkShadowType" "shadow_type" (in))
    '("GdkRectangle*" "area" (in) (null-ok))
    '("GtkWidget*" "widget" (in) (null-ok))
    '("const-gchar*" "detail" (in) (null-ok))
    '("gint" "x" (in))
    '("gint" "y" (in))
    '("gint" "width" (in))
    '("gint" "height" (in))
    '("GtkOrientation" "orientation" (in))
  )
)

(define-method paint_expander
  (of-object "GtkStyle")
  (c-name "gtk_paint_expander")
  (return-type "none")
  (parameters
    '("GdkWindow*" "window" (in))
    '("GtkStateType" "state_type" (in))
    '("GdkRectangle*" "area" (in) (null-ok))
    '("GtkWidget*" "widget" (in) (null-ok))
    '("const-gchar*" "detail" (in) (null-ok))
    '("gint" "x" (in))
    '("gint" "y" (in))
    '("GtkExpanderStyle" "expander_style" (in))
  )
)

(define-method paint_layout
  (of-object "GtkStyle")
  (c-name "gtk_paint_layout")
  (return-type "none")
  (parameters
    '("GdkWindow*" "window" (in))
    '("GtkStateType" "state_type" (in))
    '("gboolean" "use_text" (in))
    '("GdkRectangle*" "area" (in) (null-ok))
    '("GtkWidget*" "widget" (in) (null-ok))
    '("const-gchar*" "detail" (in) (null-ok))
    '("gint" "x" (in))
    '("gint" "y" (in))
    '("PangoLayout*" "layout" (in))
  )
)

(define-method paint_resize_grip
  (of-object "GtkStyle")
  (c-name "gtk_paint_resize_grip")
  (return-type "none")
  (parameters
    '("GdkWindow*" "window" (in))
    '("GtkStateType" "state_type" (in))
    '("GdkRectangle*" "area" (in) (null-ok))
    '("GtkWidget*" "widget" (in) (null-ok))
    '("const-gchar*" "detail" (in) (null-ok))
    '("GdkWindowEdge" "edge" (in))
    '("gint" "x" (in))
    '("gint" "y" (in))
    '("gint" "width" (in))
    '("gint" "height" (in))
  )
)

(define-function gtk_border_get_type
  (c-name "gtk_border_get_type")
  (return-type "GType")
)

(define-method copy
  (of-object "GtkBorder")
  (c-name "gtk_border_copy")
  (caller-owns-return #t)
  (return-type "GtkBorder*")
)

(define-method free
  (of-object "GtkBorder")
  (c-name "gtk_border_free")
  (return-type "none")
)

(define-method apply_default_pixmap
  (of-object "GtkStyle")
  (c-name "gtk_style_apply_default_pixmap")
  (return-type "none")
  (deprecated "use GtkStyle.apply_default_background")
  (parameters
    '("GdkWindow*" "window" (in))
    '("gboolean" "set_bg" (in))
    '("GdkRectangle*" "area" (in))
    '("gint" "x" (in))
    '("gint" "y" (in))
    '("gint" "width" (in))
    '("gint" "height" (in))
  )
)

(define-method draw_string
  (of-object "GtkStyle")
  (c-name "gtk_draw_string")
  (return-type "none")
  (parameters
    '("GdkWindow*" "window" (in))
    '("GtkStateType" "state_type" (in))
    '("gint" "x" (in))
    '("gint" "y" (in))
    '("const-gchar*" "string" (in))
  )
)

(define-method paint_string
  (of-object "GtkStyle")
  (c-name "gtk_paint_string")
  (return-type "none")
  (parameters
    '("GdkWindow*" "window" (in))
    '("GtkStateType" "state_type" (in))
    '("GdkRectangle*" "area" (in) (null-ok))
    '("GtkWidget*" "widget" (in) (null-ok))
    '("const-gchar*" "detail" (in) (null-ok))
    '("gint" "x" (in))
    '("gint" "y" (in))
    '("const-gchar*" "string" (in))
  )
)

(define-function draw_insertion_cursor
  (c-name "gtk_draw_insertion_cursor")
  (return-type "none")
  (parameters
    '("GtkWidget*" "widget" (in))
    '("GdkDrawable*" "drawable" (in))
    '("GdkRectangle*" "area" (in) (null-ok))
    '("GdkRectangle*" "location" (in))
    '("gboolean" "is_primary" (in))
    '("GtkTextDirection" "direction" (in))
    '("gboolean" "draw_arrow" (in))
  )
)

(define-function gtk_table_get_type
  (c-name "gtk_table_get_type")
  (return-type "GType")
)

(define-function gtk_table_new
  (is-constructor-of "GtkTable")
  (c-name "gtk_table_new")
  (caller-owns-return #t)
  (return-type "GtkWidget*")
  (properties
    '("n_rows" (optional) (argname "rows"))
    '("n_columns" (optional) (argname "columns"))
    '("homogeneous" (optional) (argname "homogeneous"))
  )
)

(define-method resize
  (of-object "GtkTable")
  (c-name "gtk_table_resize")
  (return-type "none")
  (parameters
    '("guint" "rows" (in))
    '("guint" "columns" (in))
  )
)

(define-method attach
  (of-object "GtkTable")
  (c-name "gtk_table_attach")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child" (in))
    '("guint" "left_attach" (in))
    '("guint" "right_attach" (in))
    '("guint" "top_attach" (in))
    '("guint" "bottom_attach" (in))
    '("GtkAttachOptions" "xoptions" (in) (default "GTK_EXPAND|GTK_FILL"))
    '("GtkAttachOptions" "yoptions" (in) (default "GTK_EXPAND|GTK_FILL"))
    '("guint" "xpadding" (in) (default "0"))
    '("guint" "ypadding" (in) (default "0"))
  )
)

(define-method attach_defaults
  (of-object "GtkTable")
  (c-name "gtk_table_attach_defaults")
  (return-type "none")
  (deprecated "use attach instead")
  (parameters
    '("GtkWidget*" "widget" (in))
    '("guint" "left_attach" (in))
    '("guint" "right_attach" (in))
    '("guint" "top_attach" (in))
    '("guint" "bottom_attach" (in))
  )
)

(define-method set_row_spacing
  (of-object "GtkTable")
  (c-name "gtk_table_set_row_spacing")
  (return-type "none")
  (parameters
    '("guint" "row" (in))
    '("guint" "spacing" (in))
  )
)

(define-method get_row_spacing
  (of-object "GtkTable")
  (c-name "gtk_table_get_row_spacing")
  (return-type "guint")
  (parameters
    '("guint" "row" (in))
  )
)

(define-method set_col_spacing
  (of-object "GtkTable")
  (c-name "gtk_table_set_col_spacing")
  (return-type "none")
  (parameters
    '("guint" "column" (in))
    '("guint" "spacing" (in))
  )
)

(define-method get_col_spacing
  (of-object "GtkTable")
  (c-name "gtk_table_get_col_spacing")
  (return-type "guint")
  (parameters
    '("guint" "column" (in))
  )
)

(define-method set_row_spacings
  (of-object "GtkTable")
  (c-name "gtk_table_set_row_spacings")
  (return-type "none")
  (parameters
    '("guint" "spacing" (in))
  )
)

(define-method get_default_row_spacing
  (of-object "GtkTable")
  (c-name "gtk_table_get_default_row_spacing")
  (return-type "guint")
)

(define-method set_col_spacings
  (of-object "GtkTable")
  (c-name "gtk_table_set_col_spacings")
  (return-type "none")
  (parameters
    '("guint" "spacing" (in))
  )
)

(define-method get_default_col_spacing
  (of-object "GtkTable")
  (c-name "gtk_table_get_default_col_spacing")
  (return-type "guint")
)

(define-method set_homogeneous
  (of-object "GtkTable")
  (c-name "gtk_table_set_homogeneous")
  (return-type "none")
  (parameters
    '("gboolean" "homogeneous" (in))
  )
)

(define-method get_homogeneous
  (of-object "GtkTable")
  (c-name "gtk_table_get_homogeneous")
  (return-type "gboolean")
)

(define-function gtk_tearoff_menu_item_get_type
  (c-name "gtk_tearoff_menu_item_get_type")
  (return-type "GType")
)

(define-function gtk_tearoff_menu_item_new
  (is-constructor-of "GtkTearoffMenuItem")
  (c-name "gtk_tearoff_menu_item_new")
  (caller-owns-return #t)
  (return-type "GtkWidget*")
)

(define-function gtk_text_buffer_get_type
  (c-name "gtk_text_buffer_get_type")
  (return-type "GType")
)

(define-function gtk_text_buffer_new
  (is-constructor-of "GtkTextBuffer")
  (c-name "gtk_text_buffer_new")
  (caller-owns-return #t)
  (return-type "GtkTextBuffer*")
  (properties
    '("tag_table" (optional) (argname "table"))
  )
)

(define-method get_line_count
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_get_line_count")
  (return-type "gint")
)

(define-method get_char_count
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_get_char_count")
  (return-type "gint")
)

(define-method get_tag_table
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_get_tag_table")
  (return-type "GtkTextTagTable*")
)

(define-method set_text
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_set_text")
  (return-type "none")
  (parameters
    '("const-gchar*" "text" (in))
    '("gint" "len" (in) (default "-1"))
  )
)

(define-method insert
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_insert")
  (return-type "none")
  (parameters
    '("GtkTextIter*" "iter" (in))
    '("const-gchar*" "text" (in))
    '("gint" "len" (in) (default "-1"))
  )
)

(define-method insert_at_cursor
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_insert_at_cursor")
  (return-type "none")
  (parameters
    '("const-gchar*" "text" (in))
    '("gint" "len" (in) (default "-1"))
  )
)

(define-method insert_interactive
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_insert_interactive")
  (return-type "gboolean")
  (parameters
    '("GtkTextIter*" "iter" (in))
    '("const-gchar*" "text" (in))
    '("gint" "len" (in) (default "-1"))
    '("gboolean" "default_editable" (in))
  )
)

(define-method insert_interactive_at_cursor
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_insert_interactive_at_cursor")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "text" (in))
    '("gint" "len" (in) (default "-1"))
    '("gboolean" "default_editable" (in))
  )
)

(define-method insert_range
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_insert_range")
  (return-type "none")
  (parameters
    '("GtkTextIter*" "iter" (in))
    '("const-GtkTextIter*" "start" (in))
    '("const-GtkTextIter*" "end" (in))
  )
)

(define-method insert_range_interactive
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_insert_range_interactive")
  (return-type "gboolean")
  (parameters
    '("GtkTextIter*" "iter" (in))
    '("const-GtkTextIter*" "start" (in))
    '("const-GtkTextIter*" "end" (in))
    '("gboolean" "default_editable" (in))
  )
)

(define-method insert_with_tags
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_insert_with_tags")
  (return-type "none")
  (parameters
    '("GtkTextIter*" "iter" (in))
    '("const-gchar*" "text" (in))
    '("gint" "len" (in) (default "-1"))
    '("GtkTextTag*" "first_tag" (in))
  )
  (varargs #t)
)

(define-method insert_with_tags_by_name
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_insert_with_tags_by_name")
  (return-type "none")
  (parameters
    '("GtkTextIter*" "iter" (in))
    '("const-gchar*" "text" (in))
    '("gint" "len" (in) (default "-1"))
    '("const-gchar*" "first_tag_name" (in))
  )
  (varargs #t)
)

(define-method delete
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_delete")
  (return-type "none")
  (parameters
    '("GtkTextIter*" "start" (in))
    '("GtkTextIter*" "end" (in))
  )
)

(define-method delete_interactive
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_delete_interactive")
  (return-type "gboolean")
  (parameters
    '("GtkTextIter*" "start_iter" (in))
    '("GtkTextIter*" "end_iter" (in))
    '("gboolean" "default_editable" (in))
  )
)

(define-method get_text
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_get_text")
  (caller-owns-return #t)
  (return-type "gchar*")
  (parameters
    '("const-GtkTextIter*" "start" (in))
    '("const-GtkTextIter*" "end" (in))
    '("gboolean" "include_hidden_chars" (in) (default "TRUE"))
  )
)

(define-method get_slice
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_get_slice")
  (caller-owns-return #t)
  (return-type "gchar*")
  (parameters
    '("const-GtkTextIter*" "start" (in))
    '("const-GtkTextIter*" "end" (in))
    '("gboolean" "include_hidden_chars" (in) (default "TRUE"))
  )
)

(define-method insert_pixbuf
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_insert_pixbuf")
  (return-type "none")
  (parameters
    '("GtkTextIter*" "iter" (in))
    '("GdkPixbuf*" "pixbuf" (in))
  )
)

(define-method insert_child_anchor
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_insert_child_anchor")
  (return-type "none")
  (parameters
    '("GtkTextIter*" "iter" (in))
    '("GtkTextChildAnchor*" "anchor" (in))
  )
)

(define-method create_child_anchor
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_create_child_anchor")
  (return-type "GtkTextChildAnchor*")
  (parameters
    '("GtkTextIter*" "iter" (in))
  )
)

(define-method create_mark
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_create_mark")
  (return-type "GtkTextMark*")
  (parameters
    '("const-gchar*" "mark_name" (in) (null-ok))
    '("const-GtkTextIter*" "where" (in))
    '("gboolean" "left_gravity" (in) (default "FALSE"))
  )
)

(define-method move_mark
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_move_mark")
  (return-type "none")
  (parameters
    '("GtkTextMark*" "mark" (in))
    '("const-GtkTextIter*" "where" (in))
  )
)

(define-method delete_mark
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_delete_mark")
  (return-type "none")
  (parameters
    '("GtkTextMark*" "mark" (in))
  )
)

(define-method get_mark
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_get_mark")
  (return-type "GtkTextMark*")
  (parameters
    '("const-gchar*" "name" (in))
  )
)

(define-method move_mark_by_name
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_move_mark_by_name")
  (return-type "none")
  (parameters
    '("const-gchar*" "name" (in))
    '("const-GtkTextIter*" "where" (in))
  )
)

(define-method delete_mark_by_name
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_delete_mark_by_name")
  (return-type "none")
  (parameters
    '("const-gchar*" "name" (in))
  )
)

(define-method get_insert
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_get_insert")
  (return-type "GtkTextMark*")
)

(define-method get_selection_bound
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_get_selection_bound")
  (return-type "GtkTextMark*")
)

(define-method place_cursor
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_place_cursor")
  (return-type "none")
  (parameters
    '("const-GtkTextIter*" "where" (in))
  )
)

(define-method select_range
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_select_range")
  (return-type "none")
  (parameters
    '("const-GtkTextIter*" "ins" (in))
    '("const-GtkTextIter*" "bound" (in))
  )
)

(define-method apply_tag
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_apply_tag")
  (return-type "none")
  (parameters
    '("GtkTextTag*" "tag" (in))
    '("const-GtkTextIter*" "start" (in))
    '("const-GtkTextIter*" "end" (in))
  )
)

(define-method remove_tag
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_remove_tag")
  (return-type "none")
  (parameters
    '("GtkTextTag*" "tag" (in))
    '("const-GtkTextIter*" "start" (in))
    '("const-GtkTextIter*" "end" (in))
  )
)

(define-method apply_tag_by_name
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_apply_tag_by_name")
  (return-type "none")
  (parameters
    '("const-gchar*" "name" (in))
    '("const-GtkTextIter*" "start" (in))
    '("const-GtkTextIter*" "end" (in))
  )
)

(define-method remove_tag_by_name
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_remove_tag_by_name")
  (return-type "none")
  (parameters
    '("const-gchar*" "name" (in))
    '("const-GtkTextIter*" "start" (in))
    '("const-GtkTextIter*" "end" (in))
  )
)

(define-method remove_all_tags
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_remove_all_tags")
  (return-type "none")
  (parameters
    '("const-GtkTextIter*" "start" (in))
    '("const-GtkTextIter*" "end" (in))
  )
)

(define-method create_tag
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_create_tag")
  (return-type "GtkTextTag*")
  (parameters
    '("const-gchar*" "tag_name" (in))
    '("const-gchar*" "first_property_name" (in))
  )
  (varargs #t)
)

(define-method get_iter_at_line_offset
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_get_iter_at_line_offset")
  (return-type "none")
  (parameters
    '("GtkTextIter*" "iter" (out))
    '("gint" "line_number" (in))
    '("gint" "char_offset" (in))
  )
)

(define-method get_iter_at_line_index
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_get_iter_at_line_index")
  (return-type "none")
  (parameters
    '("GtkTextIter*" "iter" (out))
    '("gint" "line_number" (in))
    '("gint" "byte_index" (in))
  )
)

(define-method get_iter_at_offset
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_get_iter_at_offset")
  (return-type "none")
  (parameters
    '("GtkTextIter*" "iter" (out))
    '("gint" "char_offset" (in))
  )
)

(define-method get_iter_at_line
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_get_iter_at_line")
  (return-type "none")
  (parameters
    '("GtkTextIter*" "iter" (out))
    '("gint" "line_number" (in))
  )
)

(define-method get_start_iter
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_get_start_iter")
  (return-type "none")
  (parameters
    '("GtkTextIter*" "iter" (out))
  )
)

(define-method get_end_iter
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_get_end_iter")
  (return-type "none")
  (parameters
    '("GtkTextIter*" "iter" (out))
  )
)

(define-method get_bounds
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_get_bounds")
  (return-type "none")
  (parameters
    '("GtkTextIter*" "start" (out))
    '("GtkTextIter*" "end" (out))
  )
)

(define-method get_iter_at_mark
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_get_iter_at_mark")
  (return-type "none")
  (parameters
    '("GtkTextIter*" "iter" (out))
    '("GtkTextMark*" "mark" (in))
  )
)

(define-method get_iter_at_child_anchor
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_get_iter_at_child_anchor")
  (return-type "none")
  (parameters
    '("GtkTextIter*" "iter" (out))
    '("GtkTextChildAnchor*" "anchor" (in))
  )
)

(define-method get_modified
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_get_modified")
  (return-type "gboolean")
)

(define-method set_modified
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_set_modified")
  (return-type "none")
  (parameters
    '("gboolean" "setting" (in))
  )
)

(define-method add_selection_clipboard
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_add_selection_clipboard")
  (return-type "none")
  (parameters
    '("GtkClipboard*" "clipboard" (in))
  )
)

(define-method remove_selection_clipboard
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_remove_selection_clipboard")
  (return-type "none")
  (parameters
    '("GtkClipboard*" "clipboard" (in))
  )
)

(define-method cut_clipboard
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_cut_clipboard")
  (return-type "none")
  (parameters
    '("GtkClipboard*" "clipboard" (in))
    '("gboolean" "default_editable" (in))
  )
)

(define-method copy_clipboard
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_copy_clipboard")
  (return-type "none")
  (parameters
    '("GtkClipboard*" "clipboard" (in))
  )
)

(define-method paste_clipboard
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_paste_clipboard")
  (return-type "none")
  (parameters
    '("GtkClipboard*" "clipboard" (in))
    '("GtkTextIter*" "override_location" (in) (null-ok))
    '("gboolean" "default_editable" (in))
  )
)

(define-method get_selection_bounds
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_get_selection_bounds")
  (return-type "gboolean")
  (parameters
    '("GtkTextIter*" "start" (out))
    '("GtkTextIter*" "end" (out))
  )
)

(define-method delete_selection
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_delete_selection")
  (return-type "gboolean")
  (parameters
    '("gboolean" "interactive" (in))
    '("gboolean" "default_editable" (in))
  )
)

(define-method begin_user_action
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_begin_user_action")
  (return-type "none")
)

(define-method end_user_action
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_end_user_action")
  (return-type "none")
)

(define-function gtk_text_child_anchor_get_type
  (c-name "gtk_text_child_anchor_get_type")
  (return-type "GType")
)

(define-function gtk_text_child_anchor_new
  (is-constructor-of "GtkTextChildAnchor")
  (c-name "gtk_text_child_anchor_new")
  (caller-owns-return #t)
  (return-type "GtkTextChildAnchor*")
)

(define-method get_widgets
  (of-object "GtkTextChildAnchor")
  (c-name "gtk_text_child_anchor_get_widgets")
  (caller-owns-return #t)
  (return-type "GList[GtkWidget]")
)

(define-method get_deleted
  (of-object "GtkTextChildAnchor")
  (c-name "gtk_text_child_anchor_get_deleted")
  (return-type "gboolean")
)

(define-method backspace
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_backspace")
  (return-type "gboolean")
  (parameters
    '("GtkTextIter*" "iter" (in))
    '("gboolean" "interactive" (in))
    '("gboolean" "default_editable" (in))
  )
)

(define-method get_buffer
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_get_buffer")
  (return-type "GtkTextBuffer*")
)

(define-method copy
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_copy")
  (caller-owns-return #t)
  (return-type "GtkTextIter*")
)

(define-method free
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_free")
  (return-type "none")
)

(define-function gtk_text_iter_get_type
  (c-name "gtk_text_iter_get_type")
  (return-type "GType")
)

(define-method get_offset
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_get_offset")
  (return-type "gint")
)

(define-method get_line
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_get_line")
  (return-type "gint")
)

(define-method get_line_offset
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_get_line_offset")
  (return-type "gint")
)

(define-method get_line_index
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_get_line_index")
  (return-type "gint")
)

(define-method get_visible_line_offset
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_get_visible_line_offset")
  (return-type "gint")
)

(define-method get_visible_line_index
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_get_visible_line_index")
  (return-type "gint")
)

(define-method get_char
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_get_char")
  (return-type "gunichar")
)

(define-method get_slice
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_get_slice")
  (caller-owns-return #t)
  (return-type "gchar*")
  (parameters
    '("const-GtkTextIter*" "end" (in))
  )
)

(define-method get_text
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_get_text")
  (caller-owns-return #t)
  (return-type "gchar*")
  (parameters
    '("const-GtkTextIter*" "end" (in))
  )
)

(define-method get_visible_slice
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_get_visible_slice")
  (caller-owns-return #t)
  (return-type "gchar*")
  (parameters
    '("const-GtkTextIter*" "end" (in))
  )
)

(define-method get_visible_text
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_get_visible_text")
  (caller-owns-return #t)
  (return-type "gchar*")
  (parameters
    '("const-GtkTextIter*" "end" (in))
  )
)

(define-method get_pixbuf
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_get_pixbuf")
  (return-type "GdkPixbuf*")
)

(define-method get_marks
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_get_marks")
  (caller-owns-return #t)
  (return-type "GSList[GtkTextMark]")
)

(define-method get_child_anchor
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_get_child_anchor")
  (return-type "GtkTextChildAnchor*")
)

(define-method get_toggled_tags
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_get_toggled_tags")
  (caller-owns-return #t)
  (return-type "GSList[GtkTextTag]")
  (parameters
    '("gboolean" "toggled_on" (in))
  )
)

(define-method begins_tag
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_begins_tag")
  (return-type "gboolean")
  (parameters
    '("GtkTextTag*" "tag" (in) (default "NULL") (null-ok))
  )
)

(define-method ends_tag
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_ends_tag")
  (return-type "gboolean")
  (parameters
    '("GtkTextTag*" "tag" (in) (default "NULL") (null-ok))
  )
)

(define-method toggles_tag
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_toggles_tag")
  (return-type "gboolean")
  (parameters
    '("GtkTextTag*" "tag" (in) (default "NULL") (null-ok))
  )
)

(define-method has_tag
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_has_tag")
  (return-type "gboolean")
  (parameters
    '("GtkTextTag*" "tag" (in))
  )
)

(define-method get_tags
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_get_tags")
  (caller-owns-return #t)
  (return-type "GSList[GtkTextTag]")
)

(define-method editable
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_editable")
  (return-type "gboolean")
  (parameters
    '("gboolean" "default_setting" (in))
  )
)

(define-method can_insert
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_can_insert")
  (return-type "gboolean")
  (parameters
    '("gboolean" "default_editability" (in))
  )
)

(define-method starts_word
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_starts_word")
  (return-type "gboolean")
)

(define-method ends_word
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_ends_word")
  (return-type "gboolean")
)

(define-method inside_word
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_inside_word")
  (return-type "gboolean")
)

(define-method starts_sentence
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_starts_sentence")
  (return-type "gboolean")
)

(define-method ends_sentence
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_ends_sentence")
  (return-type "gboolean")
)

(define-method inside_sentence
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_inside_sentence")
  (return-type "gboolean")
)

(define-method starts_line
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_starts_line")
  (return-type "gboolean")
)

(define-method ends_line
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_ends_line")
  (return-type "gboolean")
)

(define-method is_cursor_position
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_is_cursor_position")
  (return-type "gboolean")
)

(define-method get_chars_in_line
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_get_chars_in_line")
  (return-type "gint")
)

(define-method get_bytes_in_line
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_get_bytes_in_line")
  (return-type "gint")
)

(define-method get_attributes
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_get_attributes")
  (return-type "gboolean")
  (parameters
    '("GtkTextAttributes*" "values" (in))
  )
)

(define-method get_language
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_get_language")
  (return-type "PangoLanguage*")
)

(define-method is_end
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_is_end")
  (return-type "gboolean")
)

(define-method is_start
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_is_start")
  (return-type "gboolean")
)

(define-method forward_char
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_forward_char")
  (return-type "gboolean")
)

(define-method backward_char
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_backward_char")
  (return-type "gboolean")
)

(define-method forward_chars
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_forward_chars")
  (return-type "gboolean")
  (parameters
    '("gint" "count" (in))
  )
)

(define-method backward_chars
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_backward_chars")
  (return-type "gboolean")
  (parameters
    '("gint" "count" (in))
  )
)

(define-method forward_line
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_forward_line")
  (return-type "gboolean")
)

(define-method backward_line
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_backward_line")
  (return-type "gboolean")
)

(define-method forward_lines
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_forward_lines")
  (return-type "gboolean")
  (parameters
    '("gint" "count" (in))
  )
)

(define-method backward_lines
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_backward_lines")
  (return-type "gboolean")
  (parameters
    '("gint" "count" (in))
  )
)

(define-method forward_word_end
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_forward_word_end")
  (return-type "gboolean")
)

(define-method backward_word_start
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_backward_word_start")
  (return-type "gboolean")
)

(define-method forward_word_ends
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_forward_word_ends")
  (return-type "gboolean")
  (parameters
    '("gint" "count" (in))
  )
)

(define-method backward_word_starts
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_backward_word_starts")
  (return-type "gboolean")
  (parameters
    '("gint" "count" (in))
  )
)

(define-method forward_visible_line
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_forward_visible_line")
  (return-type "gboolean")
)

(define-method backward_visible_line
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_backward_visible_line")
  (return-type "gboolean")
)

(define-method forward_visible_lines
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_forward_visible_lines")
  (return-type "gboolean")
  (parameters
    '("gint" "count" (in))
  )
)

(define-method backward_visible_lines
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_backward_visible_lines")
  (return-type "gboolean")
  (parameters
    '("gint" "count" (in))
  )
)

(define-method forward_visible_word_end
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_forward_visible_word_end")
  (return-type "gboolean")
)

(define-method backward_visible_word_start
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_backward_visible_word_start")
  (return-type "gboolean")
)

(define-method forward_visible_word_ends
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_forward_visible_word_ends")
  (return-type "gboolean")
  (parameters
    '("gint" "count" (in))
  )
)

(define-method backward_visible_word_starts
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_backward_visible_word_starts")
  (return-type "gboolean")
  (parameters
    '("gint" "count" (in))
  )
)

(define-method forward_sentence_end
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_forward_sentence_end")
  (return-type "gboolean")
)

(define-method backward_sentence_start
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_backward_sentence_start")
  (return-type "gboolean")
)

(define-method forward_sentence_ends
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_forward_sentence_ends")
  (return-type "gboolean")
  (parameters
    '("gint" "count" (in))
  )
)

(define-method backward_sentence_starts
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_backward_sentence_starts")
  (return-type "gboolean")
  (parameters
    '("gint" "count" (in))
  )
)

(define-method forward_cursor_position
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_forward_cursor_position")
  (return-type "gboolean")
)

(define-method backward_cursor_position
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_backward_cursor_position")
  (return-type "gboolean")
)

(define-method forward_cursor_positions
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_forward_cursor_positions")
  (return-type "gboolean")
  (parameters
    '("gint" "count" (in))
  )
)

(define-method backward_cursor_positions
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_backward_cursor_positions")
  (return-type "gboolean")
  (parameters
    '("gint" "count" (in))
  )
)

(define-method forward_visible_cursor_position
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_forward_visible_cursor_position")
  (return-type "gboolean")
)

(define-method backward_visible_cursor_position
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_backward_visible_cursor_position")
  (return-type "gboolean")
)

(define-method forward_visible_cursor_positions
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_forward_visible_cursor_positions")
  (return-type "gboolean")
  (parameters
    '("gint" "count" (in))
  )
)

(define-method backward_visible_cursor_positions
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_backward_visible_cursor_positions")
  (return-type "gboolean")
  (parameters
    '("gint" "count" (in))
  )
)

(define-method set_offset
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_set_offset")
  (return-type "none")
  (parameters
    '("gint" "char_offset" (in))
  )
)

(define-method set_line
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_set_line")
  (return-type "none")
  (parameters
    '("gint" "line_number" (in))
  )
)

(define-method set_line_offset
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_set_line_offset")
  (return-type "none")
  (parameters
    '("gint" "char_on_line" (in))
  )
)

(define-method set_line_index
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_set_line_index")
  (return-type "none")
  (parameters
    '("gint" "byte_on_line" (in))
  )
)

(define-method forward_to_end
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_forward_to_end")
  (return-type "none")
)

(define-method forward_to_line_end
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_forward_to_line_end")
  (return-type "gboolean")
)

(define-method set_visible_line_offset
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_set_visible_line_offset")
  (return-type "none")
  (parameters
    '("gint" "char_on_line" (in))
  )
)

(define-method set_visible_line_index
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_set_visible_line_index")
  (return-type "none")
  (parameters
    '("gint" "byte_on_line" (in))
  )
)

(define-method forward_to_tag_toggle
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_forward_to_tag_toggle")
  (return-type "gboolean")
  (parameters
    '("GtkTextTag*" "tag" (in) (null-ok))
  )
)

(define-method backward_to_tag_toggle
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_backward_to_tag_toggle")
  (return-type "gboolean")
  (parameters
    '("GtkTextTag*" "tag" (in) (null-ok))
  )
)

(define-method forward_find_char
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_forward_find_char")
  (return-type "gboolean")
  (parameters
    '("GtkTextCharPredicate" "pred" (in))
    '("gpointer" "user_data" (in) (null-ok))
    '("const-GtkTextIter*" "limit" (in))
  )
)

(define-method backward_find_char
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_backward_find_char")
  (return-type "gboolean")
  (parameters
    '("GtkTextCharPredicate" "pred" (in))
    '("gpointer" "user_data" (in) (null-ok))
    '("const-GtkTextIter*" "limit" (in))
  )
)

(define-method forward_search
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_forward_search")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "str" (in))
    '("GtkTextSearchFlags" "flags" (in))
    '("GtkTextIter*" "match_start" (out))
    '("GtkTextIter*" "match_end" (out))
    '("const-GtkTextIter*" "limit" (in) (null-ok))
  )
)

(define-method backward_search
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_backward_search")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "str" (in))
    '("GtkTextSearchFlags" "flags" (in))
    '("GtkTextIter*" "match_start" (out))
    '("GtkTextIter*" "match_end" (out))
    '("const-GtkTextIter*" "limit" (in) (null-ok))
  )
)

(define-method equal
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_equal")
  (return-type "gboolean")
  (parameters
    '("const-GtkTextIter*" "rhs" (in))
  )
)

(define-method compare
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_compare")
  (return-type "gint")
  (parameters
    '("const-GtkTextIter*" "rhs" (in))
  )
)

(define-method in_range
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_in_range")
  (return-type "gboolean")
  (parameters
    '("const-GtkTextIter*" "start" (in))
    '("const-GtkTextIter*" "end" (in))
  )
)

(define-method order
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_order")
  (return-type "none")
  (parameters
    '("GtkTextIter*" "second" (in))
  )
)

(define-function gtk_text_mark_get_type
  (c-name "gtk_text_mark_get_type")
  (return-type "GType")
)

(define-method set_visible
  (of-object "GtkTextMark")
  (c-name "gtk_text_mark_set_visible")
  (return-type "none")
  (parameters
    '("gboolean" "setting" (in))
  )
)

(define-method get_visible
  (of-object "GtkTextMark")
  (c-name "gtk_text_mark_get_visible")
  (return-type "gboolean")
)

(define-method get_name
  (of-object "GtkTextMark")
  (c-name "gtk_text_mark_get_name")
  (return-type "const-gchar*")
)

(define-method get_deleted
  (of-object "GtkTextMark")
  (c-name "gtk_text_mark_get_deleted")
  (return-type "gboolean")
)

(define-method get_buffer
  (of-object "GtkTextMark")
  (c-name "gtk_text_mark_get_buffer")
  (return-type "GtkTextBuffer*")
)

(define-method get_left_gravity
  (of-object "GtkTextMark")
  (c-name "gtk_text_mark_get_left_gravity")
  (return-type "gboolean")
)

(define-function gtk_text_tag_get_type
  (c-name "gtk_text_tag_get_type")
  (return-type "GType")
)

(define-function gtk_text_tag_new
  (is-constructor-of "GtkTextTag")
  (c-name "gtk_text_tag_new")
  (caller-owns-return #t)
  (return-type "GtkTextTag*")
  (properties
    '("name" (optional) (argname "name"))
  )
)

(define-method get_priority
  (of-object "GtkTextTag")
  (c-name "gtk_text_tag_get_priority")
  (return-type "gint")
)

(define-method set_priority
  (of-object "GtkTextTag")
  (c-name "gtk_text_tag_set_priority")
  (return-type "none")
  (parameters
    '("gint" "priority" (in))
  )
)

(define-method event
  (of-object "GtkTextTag")
  (c-name "gtk_text_tag_event")
  (return-type "gboolean")
  (parameters
    '("GObject*" "event_object" (in))
    '("GdkEvent*" "event" (in))
    '("const-GtkTextIter*" "iter" (in))
  )
)

(define-function gtk_text_attributes_new
  (is-constructor-of "GtkTextAttributes")
  (c-name "gtk_text_attributes_new")
  (caller-owns-return #t)
  (return-type "GtkTextAttributes*")
)

(define-method copy
  (of-object "GtkTextAttributes")
  (c-name "gtk_text_attributes_copy")
  (caller-owns-return #t)
  (return-type "GtkTextAttributes*")
)

(define-method copy_values
  (of-object "GtkTextAttributes")
  (c-name "gtk_text_attributes_copy_values")
  (return-type "none")
  (parameters
    '("GtkTextAttributes*" "dest" (in))
  )
)

(define-method unref
  (of-object "GtkTextAttributes")
  (c-name "gtk_text_attributes_unref")
  (return-type "none")
)

(define-method ref
  (of-object "GtkTextAttributes")
  (c-name "gtk_text_attributes_ref")
  (return-type "none")
)

(define-function gtk_text_attributes_get_type
  (c-name "gtk_text_attributes_get_type")
  (return-type "GType")
)

(define-function gtk_text_tag_table_get_type
  (c-name "gtk_text_tag_table_get_type")
  (return-type "GType")
)

(define-function gtk_text_tag_table_new
  (is-constructor-of "GtkTextTagTable")
  (c-name "gtk_text_tag_table_new")
  (caller-owns-return #t)
  (return-type "GtkTextTagTable*")
)

(define-method add
  (of-object "GtkTextTagTable")
  (c-name "gtk_text_tag_table_add")
  (return-type "none")
  (parameters
    '("GtkTextTag*" "tag" (in))
  )
)

(define-method remove
  (of-object "GtkTextTagTable")
  (c-name "gtk_text_tag_table_remove")
  (return-type "none")
  (parameters
    '("GtkTextTag*" "tag" (in))
  )
)

(define-method lookup
  (of-object "GtkTextTagTable")
  (c-name "gtk_text_tag_table_lookup")
  (return-type "GtkTextTag*")
  (parameters
    '("const-gchar*" "name" (in))
  )
)

(define-method foreach
  (of-object "GtkTextTagTable")
  (c-name "gtk_text_tag_table_foreach")
  (return-type "none")
  (parameters
    '("GtkTextTagTableForeach" "func" (in))
    '("gpointer" "data" (in) (null-ok))
  )
)

(define-method get_size
  (of-object "GtkTextTagTable")
  (c-name "gtk_text_tag_table_get_size")
  (return-type "gint")
)

(define-function gtk_text_view_get_type
  (c-name "gtk_text_view_get_type")
  (return-type "GType")
)

(define-function gtk_text_view_new
  (is-constructor-of "GtkTextView")
  (c-name "gtk_text_view_new")
  (caller-owns-return #t)
  (return-type "GtkWidget*")
)

(define-function gtk_text_view_new_with_buffer
  (is-constructor-of "GtkTextView")
  (c-name "gtk_text_view_new_with_buffer")
  (caller-owns-return #t)
  (return-type "GtkWidget*")
  (properties
    '("buffer" (optional) (argname "buffer"))
  )
)

(define-method set_buffer
  (of-object "GtkTextView")
  (c-name "gtk_text_view_set_buffer")
  (return-type "none")
  (parameters
    '("GtkTextBuffer*" "buffer" (in))
  )
)

(define-method get_buffer
  (of-object "GtkTextView")
  (c-name "gtk_text_view_get_buffer")
  (return-type "GtkTextBuffer*")
)

(define-method scroll_to_iter
  (of-object "GtkTextView")
  (c-name "gtk_text_view_scroll_to_iter")
  (return-type "gboolean")
  (parameters
    '("GtkTextIter*" "iter" (in))
    '("gdouble" "within_margin" (in))
    '("gboolean" "use_align" (in) (default "FALSE"))
    '("gdouble" "xalign" (in) (default "0.5"))
    '("gdouble" "yalign" (in) (default "0.5"))
  )
)

(define-method scroll_to_mark
  (of-object "GtkTextView")
  (c-name "gtk_text_view_scroll_to_mark")
  (return-type "none")
  (parameters
    '("GtkTextMark*" "mark" (in))
    '("gdouble" "within_margin" (in))
    '("gboolean" "use_align" (in) (default "FALSE"))
    '("gdouble" "xalign" (in) (default "0.5"))
    '("gdouble" "yalign" (in) (default "0.5"))
  )
)

(define-method scroll_mark_onscreen
  (of-object "GtkTextView")
  (c-name "gtk_text_view_scroll_mark_onscreen")
  (return-type "none")
  (parameters
    '("GtkTextMark*" "mark" (in))
  )
)

(define-method move_mark_onscreen
  (of-object "GtkTextView")
  (c-name "gtk_text_view_move_mark_onscreen")
  (return-type "gboolean")
  (parameters
    '("GtkTextMark*" "mark" (in))
  )
)

(define-method place_cursor_onscreen
  (of-object "GtkTextView")
  (c-name "gtk_text_view_place_cursor_onscreen")
  (return-type "gboolean")
)

(define-method get_visible_rect
  (of-object "GtkTextView")
  (c-name "gtk_text_view_get_visible_rect")
  (return-type "none")
  (parameters
    '("GdkRectangle*" "visible_rect" (out))
  )
)

(define-method set_cursor_visible
  (of-object "GtkTextView")
  (c-name "gtk_text_view_set_cursor_visible")
  (return-type "none")
  (parameters
    '("gboolean" "setting" (in))
  )
)

(define-method get_cursor_visible
  (of-object "GtkTextView")
  (c-name "gtk_text_view_get_cursor_visible")
  (return-type "gboolean")
)

(define-method get_iter_location
  (of-object "GtkTextView")
  (c-name "gtk_text_view_get_iter_location")
  (return-type "none")
  (parameters
    '("const-GtkTextIter*" "iter" (in))
    '("GdkRectangle*" "location" (out))
  )
)

(define-method get_iter_at_location
  (of-object "GtkTextView")
  (c-name "gtk_text_view_get_iter_at_location")
  (return-type "none")
  (parameters
    '("GtkTextIter*" "iter" (out))
    '("gint" "x" (in))
    '("gint" "y" (in))
  )
)

(define-method get_iter_at_position
  (of-object "GtkTextView")
  (c-name "gtk_text_view_get_iter_at_position")
  (return-type "none")
  (parameters
    '("GtkTextIter*" "iter" (out))
    '("gint*" "trailing" (out))
    '("gint" "x" (in))
    '("gint" "y" (in))
  )
)

(define-method get_line_yrange
  (of-object "GtkTextView")
  (c-name "gtk_text_view_get_line_yrange")
  (return-type "none")
  (parameters
    '("const-GtkTextIter*" "iter" (in))
    '("gint*" "y" (out))
    '("gint*" "height" (out))
  )
)

(define-method get_line_at_y
  (of-object "GtkTextView")
  (c-name "gtk_text_view_get_line_at_y")
  (return-type "none")
  (parameters
    '("GtkTextIter*" "target_iter" (out))
    '("gint" "y" (in))
    '("gint*" "line_top" (out))
  )
)

(define-method buffer_to_window_coords
  (of-object "GtkTextView")
  (c-name "gtk_text_view_buffer_to_window_coords")
  (return-type "none")
  (parameters
    '("GtkTextWindowType" "win" (in))
    '("gint" "buffer_x" (in))
    '("gint" "buffer_y" (in))
    '("gint*" "window_x" (out))
    '("gint*" "window_y" (out))
  )
)

(define-method window_to_buffer_coords
  (of-object "GtkTextView")
  (c-name "gtk_text_view_window_to_buffer_coords")
  (return-type "none")
  (parameters
    '("GtkTextWindowType" "win" (in))
    '("gint" "window_x" (in))
    '("gint" "window_y" (in))
    '("gint*" "buffer_x" (out))
    '("gint*" "buffer_y" (out))
  )
)

(define-method get_window
  (of-object "GtkTextView")
  (c-name "gtk_text_view_get_window")
  (return-type "GdkWindow*")
  (parameters
    '("GtkTextWindowType" "win" (in))
  )
)

(define-method get_window_type
  (of-object "GtkTextView")
  (c-name "gtk_text_view_get_window_type")
  (return-type "GtkTextWindowType")
  (parameters
    '("GdkWindow*" "window" (in))
  )
)

(define-method set_border_window_size
  (of-object "GtkTextView")
  (c-name "gtk_text_view_set_border_window_size")
  (return-type "none")
  (parameters
    '("GtkTextWindowType" "type" (in))
    '("gint" "size" (in))
  )
)

(define-method get_border_window_size
  (of-object "GtkTextView")
  (c-name "gtk_text_view_get_border_window_size")
  (return-type "gint")
  (parameters
    '("GtkTextWindowType" "type" (in))
  )
)

(define-method forward_display_line
  (of-object "GtkTextView")
  (c-name "gtk_text_view_forward_display_line")
  (return-type "gboolean")
  (parameters
    '("GtkTextIter*" "iter" (in))
  )
)

(define-method backward_display_line
  (of-object "GtkTextView")
  (c-name "gtk_text_view_backward_display_line")
  (return-type "gboolean")
  (parameters
    '("GtkTextIter*" "iter" (in))
  )
)

(define-method forward_display_line_end
  (of-object "GtkTextView")
  (c-name "gtk_text_view_forward_display_line_end")
  (return-type "gboolean")
  (parameters
    '("GtkTextIter*" "iter" (in))
  )
)

(define-method backward_display_line_start
  (of-object "GtkTextView")
  (c-name "gtk_text_view_backward_display_line_start")
  (return-type "gboolean")
  (parameters
    '("GtkTextIter*" "iter" (in))
  )
)

(define-method starts_display_line
  (of-object "GtkTextView")
  (c-name "gtk_text_view_starts_display_line")
  (return-type "gboolean")
  (parameters
    '("const-GtkTextIter*" "iter" (in))
  )
)

(define-method move_visually
  (of-object "GtkTextView")
  (c-name "gtk_text_view_move_visually")
  (return-type "gboolean")
  (parameters
    '("GtkTextIter*" "iter" (in))
    '("gint" "count" (in))
  )
)

(define-method add_child_at_anchor
  (of-object "GtkTextView")
  (c-name "gtk_text_view_add_child_at_anchor")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child" (in))
    '("GtkTextChildAnchor*" "anchor" (in))
  )
)

(define-method add_child_in_window
  (of-object "GtkTextView")
  (c-name "gtk_text_view_add_child_in_window")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child" (in))
    '("GtkTextWindowType" "which_window" (in))
    '("gint" "xpos" (in))
    '("gint" "ypos" (in))
  )
)

(define-method move_child
  (of-object "GtkTextView")
  (c-name "gtk_text_view_move_child")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child" (in))
    '("gint" "xpos" (in))
    '("gint" "ypos" (in))
  )
)

(define-method set_wrap_mode
  (of-object "GtkTextView")
  (c-name "gtk_text_view_set_wrap_mode")
  (return-type "none")
  (parameters
    '("GtkWrapMode" "wrap_mode" (in))
  )
)

(define-method get_wrap_mode
  (of-object "GtkTextView")
  (c-name "gtk_text_view_get_wrap_mode")
  (return-type "GtkWrapMode")
)

(define-method set_editable
  (of-object "GtkTextView")
  (c-name "gtk_text_view_set_editable")
  (return-type "none")
  (parameters
    '("gboolean" "setting" (in))
  )
)

(define-method get_editable
  (of-object "GtkTextView")
  (c-name "gtk_text_view_get_editable")
  (return-type "gboolean")
)

(define-method set_overwrite
  (of-object "GtkTextView")
  (c-name "gtk_text_view_set_overwrite")
  (return-type "none")
  (parameters
    '("gboolean" "overwrite" (in))
  )
)

(define-method get_overwrite
  (of-object "GtkTextView")
  (c-name "gtk_text_view_get_overwrite")
  (return-type "gboolean")
)

(define-method set_accepts_tab
  (of-object "GtkTextView")
  (c-name "gtk_text_view_set_accepts_tab")
  (return-type "none")
  (parameters
    '("gboolean" "accepts_tab" (in))
  )
)

(define-method get_accepts_tab
  (of-object "GtkTextView")
  (c-name "gtk_text_view_get_accepts_tab")
  (return-type "gboolean")
)

(define-method set_pixels_above_lines
  (of-object "GtkTextView")
  (c-name "gtk_text_view_set_pixels_above_lines")
  (return-type "none")
  (parameters
    '("gint" "pixels_above_lines" (in))
  )
)

(define-method get_pixels_above_lines
  (of-object "GtkTextView")
  (c-name "gtk_text_view_get_pixels_above_lines")
  (return-type "gint")
)

(define-method set_pixels_below_lines
  (of-object "GtkTextView")
  (c-name "gtk_text_view_set_pixels_below_lines")
  (return-type "none")
  (parameters
    '("gint" "pixels_below_lines" (in))
  )
)

(define-method get_pixels_below_lines
  (of-object "GtkTextView")
  (c-name "gtk_text_view_get_pixels_below_lines")
  (return-type "gint")
)

(define-method set_pixels_inside_wrap
  (of-object "GtkTextView")
  (c-name "gtk_text_view_set_pixels_inside_wrap")
  (return-type "none")
  (parameters
    '("gint" "pixels_inside_wrap" (in))
  )
)

(define-method get_pixels_inside_wrap
  (of-object "GtkTextView")
  (c-name "gtk_text_view_get_pixels_inside_wrap")
  (return-type "gint")
)

(define-method set_justification
  (of-object "GtkTextView")
  (c-name "gtk_text_view_set_justification")
  (return-type "none")
  (parameters
    '("GtkJustification" "justification" (in))
  )
)

(define-method get_justification
  (of-object "GtkTextView")
  (c-name "gtk_text_view_get_justification")
  (return-type "GtkJustification")
)

(define-method set_left_margin
  (of-object "GtkTextView")
  (c-name "gtk_text_view_set_left_margin")
  (return-type "none")
  (parameters
    '("gint" "left_margin" (in))
  )
)

(define-method get_left_margin
  (of-object "GtkTextView")
  (c-name "gtk_text_view_get_left_margin")
  (return-type "gint")
)

(define-method set_right_margin
  (of-object "GtkTextView")
  (c-name "gtk_text_view_set_right_margin")
  (return-type "none")
  (parameters
    '("gint" "right_margin" (in))
  )
)

(define-method get_right_margin
  (of-object "GtkTextView")
  (c-name "gtk_text_view_get_right_margin")
  (return-type "gint")
)

(define-method set_indent
  (of-object "GtkTextView")
  (c-name "gtk_text_view_set_indent")
  (return-type "none")
  (parameters
    '("gint" "indent" (in))
  )
)

(define-method get_indent
  (of-object "GtkTextView")
  (c-name "gtk_text_view_get_indent")
  (return-type "gint")
)

(define-method set_tabs
  (of-object "GtkTextView")
  (c-name "gtk_text_view_set_tabs")
  (return-type "none")
  (parameters
    '("PangoTabArray*" "tabs" (in))
  )
)

(define-method get_tabs
  (of-object "GtkTextView")
  (c-name "gtk_text_view_get_tabs")
  (caller-owns-return #t)
  (return-type "PangoTabArray*")
)

(define-method get_default_attributes
  (of-object "GtkTextView")
  (c-name "gtk_text_view_get_default_attributes")
  (caller-owns-return #t)
  (return-type "GtkTextAttributes*")
)

(define-function gtk_tips_query_get_type
  (c-name "gtk_tips_query_get_type")
  (return-type "GType")
)

(define-function gtk_tips_query_new
  (is-constructor-of "GtkTipsQuery")
  (c-name "gtk_tips_query_new")
  (caller-owns-return #t)
  (return-type "GtkWidget*")
)

(define-method start_query
  (of-object "GtkTipsQuery")
  (c-name "gtk_tips_query_start_query")
  (return-type "none")
)

(define-method stop_query
  (of-object "GtkTipsQuery")
  (c-name "gtk_tips_query_stop_query")
  (return-type "none")
)

(define-method set_caller
  (of-object "GtkTipsQuery")
  (c-name "gtk_tips_query_set_caller")
  (return-type "none")
  (parameters
    '("GtkWidget*" "caller" (in))
  )
)

(define-method set_labels
  (of-object "GtkTipsQuery")
  (c-name "gtk_tips_query_set_labels")
  (return-type "none")
  (parameters
    '("const-gchar*" "label_inactive" (in))
    '("const-gchar*" "label_no_tip" (in))
  )
)

(define-function gtk_toggle_action_get_type
  (c-name "gtk_toggle_action_get_type")
  (return-type "GType")
)

(define-function gtk_toggle_action_new
  (is-constructor-of "GtkToggleAction")
  (c-name "gtk_toggle_action_new")
  (caller-owns-return #t)
  (return-type "GtkToggleAction*")
  (properties
    '("name" (argname "name"))
    '("label" (argname "label"))
    '("tooltip" (argname "tooltip"))
    '("stock_id" (argname "stock_id"))
  )
)

(define-method toggled
  (of-object "GtkToggleAction")
  (c-name "gtk_toggle_action_toggled")
  (return-type "none")
)

(define-method set_active
  (of-object "GtkToggleAction")
  (c-name "gtk_toggle_action_set_active")
  (return-type "none")
  (parameters
    '("gboolean" "is_active" (in))
  )
)

(define-method get_active
  (of-object "GtkToggleAction")
  (c-name "gtk_toggle_action_get_active")
  (return-type "gboolean")
)

(define-method set_draw_as_radio
  (of-object "GtkToggleAction")
  (c-name "gtk_toggle_action_set_draw_as_radio")
  (return-type "none")
  (parameters
    '("gboolean" "draw_as_radio" (in))
  )
)

(define-method get_draw_as_radio
  (of-object "GtkToggleAction")
  (c-name "gtk_toggle_action_get_draw_as_radio")
  (return-type "gboolean")
)

(define-function gtk_toggle_button_get_type
  (c-name "gtk_toggle_button_get_type")
  (return-type "GType")
)

(define-function gtk_toggle_button_new
  (is-constructor-of "GtkToggleButton")
  (c-name "gtk_toggle_button_new")
  (caller-owns-return #t)
  (return-type "GtkWidget*")
)

(define-function gtk_toggle_button_new_with_label
  (is-constructor-of "GtkToggleButton")
  (c-name "gtk_toggle_button_new_with_label")
  (caller-owns-return #t)
  (return-type "GtkWidget*")
  (parameters
    '("const-gchar*" "label" (in))
  )
)

(define-function gtk_toggle_button_new_with_mnemonic
  (is-constructor-of "GtkToggleButton")
  (c-name "gtk_toggle_button_new_with_mnemonic")
  (caller-owns-return #t)
  (return-type "GtkWidget*")
  (parameters
    '("const-gchar*" "label" (in))
  )
)

(define-method set_mode
  (of-object "GtkToggleButton")
  (c-name "gtk_toggle_button_set_mode")
  (return-type "none")
  (parameters
    '("gboolean" "draw_indicator" (in))
  )
)

(define-method get_mode
  (of-object "GtkToggleButton")
  (c-name "gtk_toggle_button_get_mode")
  (return-type "gboolean")
)

(define-method set_active
  (of-object "GtkToggleButton")
  (c-name "gtk_toggle_button_set_active")
  (return-type "none")
  (parameters
    '("gboolean" "is_active" (in))
  )
)

(define-method get_active
  (of-object "GtkToggleButton")
  (c-name "gtk_toggle_button_get_active")
  (return-type "gboolean")
)

(define-method toggled
  (of-object "GtkToggleButton")
  (c-name "gtk_toggle_button_toggled")
  (return-type "none")
)

(define-method set_inconsistent
  (of-object "GtkToggleButton")
  (c-name "gtk_toggle_button_set_inconsistent")
  (return-type "none")
  (parameters
    '("gboolean" "setting" (in))
  )
)

(define-method get_inconsistent
  (of-object "GtkToggleButton")
  (c-name "gtk_toggle_button_get_inconsistent")
  (return-type "gboolean")
)

(define-method set_state
  (of-object "GtkToggleButton")
  (c-name "gtk_toggle_button_set_state")
  (return-type "none")
  (deprecated "use GtkToggleButton.set_active")
  (parameters
    '("gboolean" "is_active" (in))
  )
)

(define-function gtk_toggle_tool_button_get_type
  (c-name "gtk_toggle_tool_button_get_type")
  (return-type "GType")
)

(define-function gtk_toggle_tool_button_new
  (is-constructor-of "GtkToggleToolButton")
  (c-name "gtk_toggle_tool_button_new")
  (caller-owns-return #t)
  (return-type "GtkToolItem*")
)

(define-function toggle_tool_button_new_from_stock
  (c-name "gtk_toggle_tool_button_new_from_stock")
  (caller-owns-return #t)
  (return-type "GtkToolItem*")
  (parameters
    '("const-gchar*" "stock_id" (in))
  )
)

(define-method set_active
  (of-object "GtkToggleToolButton")
  (c-name "gtk_toggle_tool_button_set_active")
  (return-type "none")
  (parameters
    '("gboolean" "is_active" (in))
  )
)

(define-method get_active
  (of-object "GtkToggleToolButton")
  (c-name "gtk_toggle_tool_button_get_active")
  (return-type "gboolean")
)

(define-function gtk_toolbar_get_type
  (c-name "gtk_toolbar_get_type")
  (return-type "GType")
)

(define-function gtk_toolbar_new
  (is-constructor-of "GtkToolbar")
  (c-name "gtk_toolbar_new")
  (caller-owns-return #t)
  (return-type "GtkWidget*")
)

(define-method insert
  (of-object "GtkToolbar")
  (c-name "gtk_toolbar_insert")
  (return-type "none")
  (parameters
    '("GtkToolItem*" "item" (in))
    '("gint" "pos" (in))
  )
)

(define-method get_item_index
  (of-object "GtkToolbar")
  (c-name "gtk_toolbar_get_item_index")
  (return-type "gint")
  (parameters
    '("GtkToolItem*" "item" (in))
  )
)

(define-method get_n_items
  (of-object "GtkToolbar")
  (c-name "gtk_toolbar_get_n_items")
  (return-type "gint")
)

(define-method get_nth_item
  (of-object "GtkToolbar")
  (c-name "gtk_toolbar_get_nth_item")
  (return-type "GtkToolItem*")
  (parameters
    '("gint" "n" (in))
  )
)

(define-method get_drop_index
  (of-object "GtkToolbar")
  (c-name "gtk_toolbar_get_drop_index")
  (return-type "gint")
  (parameters
    '("gint" "x" (in))
    '("gint" "y" (in))
  )
)

(define-method set_drop_highlight_item
  (of-object "GtkToolbar")
  (c-name "gtk_toolbar_set_drop_highlight_item")
  (return-type "none")
  (parameters
    '("GtkToolItem*" "tool_item" (in) (null-ok))
    '("gint" "index" (in))
  )
)

(define-method set_show_arrow
  (of-object "GtkToolbar")
  (c-name "gtk_toolbar_set_show_arrow")
  (return-type "none")
  (parameters
    '("gboolean" "show_arrow" (in))
  )
)

(define-method get_show_arrow
  (of-object "GtkToolbar")
  (c-name "gtk_toolbar_get_show_arrow")
  (return-type "gboolean")
)

(define-method get_relief_style
  (of-object "GtkToolbar")
  (c-name "gtk_toolbar_get_relief_style")
  (return-type "GtkReliefStyle")
)

(define-method append_item
  (of-object "GtkToolbar")
  (c-name "gtk_toolbar_append_item")
  (return-type "GtkWidget*")
  (parameters
    '("const-char*" "text" (in))
    '("const-char*" "tooltip_text" (in))
    '("const-char*" "tooltip_private_text" (in))
    '("GtkWidget*" "icon" (in))
    '("GtkSignalFunc" "callback" (in))
    '("gpointer" "user_data" (in) (default "NULL") (null-ok))
  )
  (deprecated "see gtkToolbarInsert()")
)

(define-method prepend_item
  (of-object "GtkToolbar")
  (c-name "gtk_toolbar_prepend_item")
  (return-type "GtkWidget*")
  (parameters
    '("const-char*" "text" (in))
    '("const-char*" "tooltip_text" (in))
    '("const-char*" "tooltip_private_text" (in))
    '("GtkWidget*" "icon" (in))
    '("GtkSignalFunc" "callback" (in))
    '("gpointer" "user_data" (in))
  )
  (deprecated "see gtkToolbarInsert()")
)

(define-method insert_item
  (of-object "GtkToolbar")
  (c-name "gtk_toolbar_insert_item")
  (return-type "GtkWidget*")
  (parameters
    '("const-char*" "text" (in))
    '("const-char*" "tooltip_text" (in))
    '("const-char*" "tooltip_private_text" (in))
    '("GtkWidget*" "icon" (in))
    '("GtkSignalFunc" "callback" (in))
    '("gpointer" "user_data" (in))
    '("gint" "position" (in))
  )
  (deprecated "see gtkToolbarInsert()")
)

(define-method insert_stock
  (of-object "GtkToolbar")
  (c-name "gtk_toolbar_insert_stock")
  (return-type "GtkWidget*")
  (parameters
    '("const-gchar*" "stock_id" (in))
    '("const-char*" "tooltip_text" (in))
    '("const-char*" "tooltip_private_text" (in))
    '("GtkSignalFunc" "callback" (in))
    '("gpointer" "user_data" (in))
    '("gint" "position" (in))
  )
  (deprecated "see gtkToolbarInsert()")
)

(define-method append_space
  (of-object "GtkToolbar")
  (c-name "gtk_toolbar_append_space")
  (return-type "none")
)

(define-method prepend_space
  (of-object "GtkToolbar")
  (c-name "gtk_toolbar_prepend_space")
  (return-type "none")
)

(define-method insert_space
  (of-object "GtkToolbar")
  (c-name "gtk_toolbar_insert_space")
  (return-type "none")
  (parameters
    '("gint" "position" (in))
  )
)

(define-method remove_space
  (of-object "GtkToolbar")
  (c-name "gtk_toolbar_remove_space")
  (return-type "none")
  (parameters
    '("gint" "position" (in))
  )
)

(define-method append_element
  (of-object "GtkToolbar")
  (c-name "gtk_toolbar_append_element")
  (return-type "GtkWidget*")
  (parameters
    '("GtkToolbarChildType" "type" (in))
    '("GtkWidget*" "widget" (in))
    '("const-char*" "text" (in))
    '("const-char*" "tooltip_text" (in))
    '("const-char*" "tooltip_private_text" (in))
    '("GtkWidget*" "icon" (in))
    '("GtkSignalFunc" "callback" (in))
    '("gpointer" "user_data" (in) (null-ok))
  )
  (deprecated "see gtkToolbarInsert()")
)

(define-method prepend_element
  (of-object "GtkToolbar")
  (c-name "gtk_toolbar_prepend_element")
  (return-type "GtkWidget*")
  (parameters
    '("GtkToolbarChildType" "type" (in))
    '("GtkWidget*" "widget" (in))
    '("const-char*" "text" (in))
    '("const-char*" "tooltip_text" (in))
    '("const-char*" "tooltip_private_text" (in))
    '("GtkWidget*" "icon" (in))
    '("GtkSignalFunc" "callback" (in))
    '("gpointer" "user_data" (in) (null-ok))
  )
  (deprecated "see gtkToolbarInsert()")
)

(define-method insert_element
  (of-object "GtkToolbar")
  (c-name "gtk_toolbar_insert_element")
  (return-type "GtkWidget*")
  (parameters
    '("GtkToolbarChildType" "type" (in))
    '("GtkWidget*" "widget" (in))
    '("const-char*" "text" (in))
    '("const-char*" "tooltip_text" (in))
    '("const-char*" "tooltip_private_text" (in))
    '("GtkWidget*" "icon" (in))
    '("GtkSignalFunc" "callback" (in))
    '("gpointer" "user_data" (in) (null-ok))
    '("gint" "position" (in))
  )
  (deprecated "see gtkToolbarInsert()")
)

(define-method append_widget
  (of-object "GtkToolbar")
  (c-name "gtk_toolbar_append_widget")
  (return-type "none")
  (parameters
    '("GtkWidget*" "widget" (in))
    '("const-char*" "tooltip_text" (in) (null-ok))
    '("const-char*" "tooltip_private_text" (in) (null-ok))
  )
)

(define-method prepend_widget
  (of-object "GtkToolbar")
  (c-name "gtk_toolbar_prepend_widget")
  (return-type "none")
  (parameters
    '("GtkWidget*" "widget" (in))
    '("const-char*" "tooltip_text" (in) (null-ok))
    '("const-char*" "tooltip_private_text" (in) (null-ok))
  )
)

(define-method insert_widget
  (of-object "GtkToolbar")
  (c-name "gtk_toolbar_insert_widget")
  (return-type "none")
  (parameters
    '("GtkWidget*" "widget" (in))
    '("const-char*" "tooltip_text" (in) (null-ok))
    '("const-char*" "tooltip_private_text" (in) (null-ok))
    '("gint" "position" (in))
  )
)

(define-method set_orientation
  (of-object "GtkToolbar")
  (c-name "gtk_toolbar_set_orientation")
  (return-type "none")
  (parameters
    '("GtkOrientation" "orientation" (in))
  )
)

(define-method set_style
  (of-object "GtkToolbar")
  (c-name "gtk_toolbar_set_style")
  (return-type "none")
  (parameters
    '("GtkToolbarStyle" "style" (in))
  )
)

(define-method set_icon_size
  (of-object "GtkToolbar")
  (c-name "gtk_toolbar_set_icon_size")
  (return-type "none")
  (parameters
    '("GtkIconSize" "icon_size" (in))
  )
)

(define-method set_tooltips
  (of-object "GtkToolbar")
  (c-name "gtk_toolbar_set_tooltips")
  (return-type "none")
  (parameters
    '("gboolean" "enable" (in))
  )
)

(define-method unset_style
  (of-object "GtkToolbar")
  (c-name "gtk_toolbar_unset_style")
  (return-type "none")
)

(define-method unset_icon_size
  (of-object "GtkToolbar")
  (c-name "gtk_toolbar_unset_icon_size")
  (return-type "none")
)

(define-method get_orientation
  (of-object "GtkToolbar")
  (c-name "gtk_toolbar_get_orientation")
  (return-type "GtkOrientation")
)

(define-method get_style
  (of-object "GtkToolbar")
  (c-name "gtk_toolbar_get_style")
  (return-type "GtkToolbarStyle")
)

(define-method get_icon_size
  (of-object "GtkToolbar")
  (c-name "gtk_toolbar_get_icon_size")
  (return-type "GtkIconSize")
)

(define-method get_tooltips
  (of-object "GtkToolbar")
  (c-name "gtk_toolbar_get_tooltips")
  (return-type "gboolean")
)

(define-function gtk_tool_button_get_type
  (c-name "gtk_tool_button_get_type")
  (return-type "GType")
)

(define-function gtk_tool_button_new
  (is-constructor-of "GtkToolButton")
  (c-name "gtk_tool_button_new")
  (caller-owns-return #t)
  (return-type "GtkToolItem*")
  (parameters
    '("GtkWidget*" "icon_widget" (in) (default "NULL") (null-ok))
    '("const-gchar*" "label" (in) (default "NULL") (null-ok))
  )
)

(define-function tool_button_new_from_stock
  (c-name "gtk_tool_button_new_from_stock")
  (caller-owns-return #t)
  (return-type "GtkToolItem*")
  (parameters
    '("const-gchar*" "stock_id" (in))
  )
)

(define-method set_label
  (of-object "GtkToolButton")
  (c-name "gtk_tool_button_set_label")
  (return-type "none")
  (parameters
    '("const-gchar*" "label" (in) (null-ok))
  )
)

(define-method get_label
  (of-object "GtkToolButton")
  (c-name "gtk_tool_button_get_label")
  (return-type "const-gchar*")
)

(define-method set_use_underline
  (of-object "GtkToolButton")
  (c-name "gtk_tool_button_set_use_underline")
  (return-type "none")
  (parameters
    '("gboolean" "use_underline" (in))
  )
)

(define-method get_use_underline
  (of-object "GtkToolButton")
  (c-name "gtk_tool_button_get_use_underline")
  (return-type "gboolean")
)

(define-method set_stock_id
  (of-object "GtkToolButton")
  (c-name "gtk_tool_button_set_stock_id")
  (return-type "none")
  (parameters
    '("const-gchar*" "stock_id" (in) (null-ok))
  )
)

(define-method set_icon_name
  (of-object "GtkToolButton")
  (c-name "gtk_tool_button_set_icon_name")
  (return-type "none")
  (parameters
    '("const-gchar*" "icon_name" (in))
  )
)

(define-method get_icon_name
  (of-object "GtkToolButton")
  (c-name "gtk_tool_button_get_icon_name")
  (return-type "const-gchar*")
)

(define-method get_stock_id
  (of-object "GtkToolButton")
  (c-name "gtk_tool_button_get_stock_id")
  (return-type "const-gchar*")
)

(define-method set_icon_widget
  (of-object "GtkToolButton")
  (c-name "gtk_tool_button_set_icon_widget")
  (return-type "none")
  (parameters
    '("GtkWidget*" "icon_widget" (in) (null-ok))
  )
)

(define-method get_icon_widget
  (of-object "GtkToolButton")
  (c-name "gtk_tool_button_get_icon_widget")
  (return-type "GtkWidget*")
)

(define-method set_label_widget
  (of-object "GtkToolButton")
  (c-name "gtk_tool_button_set_label_widget")
  (return-type "none")
  (parameters
    '("GtkWidget*" "label_widget" (in) (null-ok))
  )
)

(define-method get_label_widget
  (of-object "GtkToolButton")
  (c-name "gtk_tool_button_get_label_widget")
  (return-type "GtkWidget*")
)

(define-function gtk_tool_item_get_type
  (c-name "gtk_tool_item_get_type")
  (return-type "GType")
)

(define-function gtk_tool_item_new
  (is-constructor-of "GtkToolItem")
  (c-name "gtk_tool_item_new")
  (caller-owns-return #t)
  (return-type "GtkToolItem*")
)

(define-method set_homogeneous
  (of-object "GtkToolItem")
  (c-name "gtk_tool_item_set_homogeneous")
  (return-type "none")
  (parameters
    '("gboolean" "homogeneous" (in))
  )
)

(define-method get_homogeneous
  (of-object "GtkToolItem")
  (c-name "gtk_tool_item_get_homogeneous")
  (return-type "gboolean")
)

(define-method set_expand
  (of-object "GtkToolItem")
  (c-name "gtk_tool_item_set_expand")
  (return-type "none")
  (parameters
    '("gboolean" "expand" (in))
  )
)

(define-method get_expand
  (of-object "GtkToolItem")
  (c-name "gtk_tool_item_get_expand")
  (return-type "gboolean")
)

(define-method set_tooltip
  (of-object "GtkToolItem")
  (c-name "gtk_tool_item_set_tooltip")
  (return-type "none")
  (parameters
    '("GtkTooltips*" "tooltips" (in))
    '("const-gchar*" "tip_text" (in) (default "NULL") (null-ok))
    '("const-gchar*" "tip_private" (in) (default "NULL") (null-ok))
  )
)

(define-method set_use_drag_window
  (of-object "GtkToolItem")
  (c-name "gtk_tool_item_set_use_drag_window")
  (return-type "none")
  (parameters
    '("gboolean" "use_drag_window" (in))
  )
)

(define-method get_use_drag_window
  (of-object "GtkToolItem")
  (c-name "gtk_tool_item_get_use_drag_window")
  (return-type "gboolean")
)

(define-method set_visible_horizontal
  (of-object "GtkToolItem")
  (c-name "gtk_tool_item_set_visible_horizontal")
  (return-type "none")
  (parameters
    '("gboolean" "visible_horizontal" (in))
  )
)

(define-method get_visible_horizontal
  (of-object "GtkToolItem")
  (c-name "gtk_tool_item_get_visible_horizontal")
  (return-type "gboolean")
)

(define-method set_visible_vertical
  (of-object "GtkToolItem")
  (c-name "gtk_tool_item_set_visible_vertical")
  (return-type "none")
  (parameters
    '("gboolean" "visible_vertical" (in))
  )
)

(define-method get_visible_vertical
  (of-object "GtkToolItem")
  (c-name "gtk_tool_item_get_visible_vertical")
  (return-type "gboolean")
)

(define-method set_is_important
  (of-object "GtkToolItem")
  (c-name "gtk_tool_item_set_is_important")
  (return-type "none")
  (parameters
    '("gboolean" "is_important" (in))
  )
)

(define-method get_is_important
  (of-object "GtkToolItem")
  (c-name "gtk_tool_item_get_is_important")
  (return-type "gboolean")
)

(define-method get_icon_size
  (of-object "GtkToolItem")
  (c-name "gtk_tool_item_get_icon_size")
  (return-type "GtkIconSize")
)

(define-method get_orientation
  (of-object "GtkToolItem")
  (c-name "gtk_tool_item_get_orientation")
  (return-type "GtkOrientation")
)

(define-method get_toolbar_style
  (of-object "GtkToolItem")
  (c-name "gtk_tool_item_get_toolbar_style")
  (return-type "GtkToolbarStyle")
)

(define-method get_relief_style
  (of-object "GtkToolItem")
  (c-name "gtk_tool_item_get_relief_style")
  (return-type "GtkReliefStyle")
)

(define-method retrieve_proxy_menu_item
  (of-object "GtkToolItem")
  (c-name "gtk_tool_item_retrieve_proxy_menu_item")
  (return-type "GtkWidget*")
)

(define-method set_proxy_menu_item
  (of-object "GtkToolItem")
  (c-name "gtk_tool_item_set_proxy_menu_item")
  (return-type "none")
  (parameters
    '("const-gchar*" "menu_item_id" (in))
    '("GtkWidget*" "menu_item" (in) (null-ok))
  )
)

(define-method get_proxy_menu_item
  (of-object "GtkToolItem")
  (c-name "gtk_tool_item_get_proxy_menu_item")
  (return-type "GtkWidget*")
  (parameters
    '("const-gchar*" "menu_item_id" (in))
  )
)

(define-method rebuild_menu
  (of-object "GtkToolItem")
  (c-name "gtk_tool_item_rebuild_menu")
  (return-type "none")
)

(define-function gtk_tooltips_get_type
  (c-name "gtk_tooltips_get_type")
  (return-type "GType")
)

(define-function gtk_tooltips_new
  (is-constructor-of "GtkTooltips")
  (c-name "gtk_tooltips_new")
  (caller-owns-return #t)
  (return-type "GtkTooltips*")
)

(define-method enable
  (of-object "GtkTooltips")
  (c-name "gtk_tooltips_enable")
  (return-type "none")
)

(define-method disable
  (of-object "GtkTooltips")
  (c-name "gtk_tooltips_disable")
  (return-type "none")
)

(define-method set_delay
  (of-object "GtkTooltips")
  (c-name "gtk_tooltips_set_delay")
  (return-type "none")
  (parameters
    '("guint" "delay" (in))
  )
)

(define-method set_tip
  (of-object "GtkTooltips")
  (c-name "gtk_tooltips_set_tip")
  (return-type "none")
  (parameters
    '("GtkWidget*" "widget" (in))
    '("const-gchar*" "tip_text" (in) (null-ok))
    '("const-gchar*" "tip_private" (in) (default "NULL") (null-ok))
  )
)

(define-function tooltips_data_get
  (c-name "gtk_tooltips_data_get")
  (return-type "GtkTooltipsData*")
  (parameters
    '("GtkWidget*" "widget" (in))
  )
)

(define-method force_window
  (of-object "GtkTooltips")
  (c-name "gtk_tooltips_force_window")
  (return-type "none")
)

(define-method tooltips_get_info_from_tip_window
  (of-object "GtkWindow")
  (c-name "gtk_tooltips_get_info_from_tip_window")
  (return-type "gboolean")
  (parameters
    '("GtkTooltips**" "tooltips" (out))
    '("GtkWidget**" "current_widget" (out))
  )
)

(define-function gtk_tree_drag_source_get_type
  (c-name "gtk_tree_drag_source_get_type")
  (return-type "GType")
)

(define-method row_draggable
  (of-object "GtkTreeDragSource")
  (c-name "gtk_tree_drag_source_row_draggable")
  (return-type "gboolean")
  (parameters
    '("GtkTreePath*" "path" (in))
  )
)

(define-method drag_data_delete
  (of-object "GtkTreeDragSource")
  (c-name "gtk_tree_drag_source_drag_data_delete")
  (return-type "gboolean")
  (parameters
    '("GtkTreePath*" "path" (in))
  )
)

(define-method drag_data_get
  (of-object "GtkTreeDragSource")
  (c-name "gtk_tree_drag_source_drag_data_get")
  (return-type "gboolean")
  (parameters
    '("GtkTreePath*" "path" (in))
    '("GtkSelectionData*" "selection_data" (out))
  )
)

(define-function gtk_tree_drag_dest_get_type
  (c-name "gtk_tree_drag_dest_get_type")
  (return-type "GType")
)

(define-method drag_data_received
  (of-object "GtkTreeDragDest")
  (c-name "gtk_tree_drag_dest_drag_data_received")
  (return-type "gboolean")
  (parameters
    '("GtkTreePath*" "dest" (in))
    '("GtkSelectionData*" "selection_data" (in))
  )
)

(define-method row_drop_possible
  (of-object "GtkTreeDragDest")
  (c-name "gtk_tree_drag_dest_row_drop_possible")
  (return-type "gboolean")
  (parameters
    '("GtkTreePath*" "dest_path" (in))
    '("GtkSelectionData*" "selection_data" (in))
  )
)

(define-method tree_set_row_drag_data
  (of-object "GtkSelectionData")
  (c-name "gtk_tree_set_row_drag_data")
  (return-type "gboolean")
  (parameters
    '("GtkTreeModel*" "tree_model" (in))
    '("GtkTreePath*" "path" (in))
  )
)

(define-method tree_get_row_drag_data
  (of-object "GtkSelectionData")
  (c-name "gtk_tree_get_row_drag_data")
  (return-type "gboolean")
  (parameters
    '("GtkTreeModel**" "tree_model" (out))
    '("GtkTreePath**" "path" (out))
  )
)

(define-function gtk_tree_path_new
  (is-constructor-of "GtkTreePath")
  (c-name "gtk_tree_path_new")
  (caller-owns-return #t)
  (return-type "GtkTreePath*")
)

(define-function tree_path_new_from_string
  (c-name "gtk_tree_path_new_from_string")
  (caller-owns-return #t)
  (return-type "GtkTreePath*")
  (parameters
    '("gchar*" "path" (in))
  )
)

(define-function tree_path_new_from_indices
  (c-name "gtk_tree_path_new_from_indices")
  (caller-owns-return #t)
  (return-type "GtkTreePath*")
  (parameters
    '("gint" "first_index" (in))
  )
  (varargs #t)
)

(define-method to_string
  (of-object "GtkTreePath")
  (c-name "gtk_tree_path_to_string")
  (caller-owns-return #t)
  (return-type "gchar*")
)

(define-function tree_path_new_first
  (c-name "gtk_tree_path_new_first")
  (caller-owns-return #t)
  (return-type "GtkTreePath*")
)

(define-method append_index
  (of-object "GtkTreePath")
  (c-name "gtk_tree_path_append_index")
  (return-type "none")
  (parameters
    '("gint" "index" (in))
  )
)

(define-method prepend_index
  (of-object "GtkTreePath")
  (c-name "gtk_tree_path_prepend_index")
  (return-type "none")
  (parameters
    '("gint" "index" (in))
  )
)

(define-method get_depth
  (of-object "GtkTreePath")
  (c-name "gtk_tree_path_get_depth")
  (return-type "gint")
)

(define-method get_indices
  (of-object "GtkTreePath")
  (c-name "gtk_tree_path_get_indices")
  (return-type "gint*")
)

(define-method free
  (of-object "GtkTreePath")
  (c-name "gtk_tree_path_free")
  (return-type "none")
)

(define-method copy
  (of-object "GtkTreePath")
  (c-name "gtk_tree_path_copy")
  (caller-owns-return #t)
  (return-type "GtkTreePath*")
)

(define-method compare
  (of-object "GtkTreePath")
  (c-name "gtk_tree_path_compare")
  (return-type "gint")
  (parameters
    '("const-GtkTreePath*" "b" (in))
  )
)

(define-method next
  (of-object "GtkTreePath")
  (c-name "gtk_tree_path_next")
  (return-type "none")
)

(define-method prev
  (of-object "GtkTreePath")
  (c-name "gtk_tree_path_prev")
  (return-type "gint")
)

(define-method up
  (of-object "GtkTreePath")
  (c-name "gtk_tree_path_up")
  (return-type "gint")
)

(define-method down
  (of-object "GtkTreePath")
  (c-name "gtk_tree_path_down")
  (return-type "none")
)

(define-method is_ancestor
  (of-object "GtkTreePath")
  (c-name "gtk_tree_path_is_ancestor")
  (return-type "gboolean")
  (parameters
    '("GtkTreePath*" "descendant" (in))
  )
)

(define-method is_descendant
  (of-object "GtkTreePath")
  (c-name "gtk_tree_path_is_descendant")
  (return-type "gboolean")
  (parameters
    '("GtkTreePath*" "ancestor" (in))
  )
)

(define-function gtk_tree_row_reference_get_type
  (c-name "gtk_tree_row_reference_get_type")
  (return-type "GType")
)

(define-function gtk_tree_row_reference_new
  (is-constructor-of "GtkTreeRowReference")
  (c-name "gtk_tree_row_reference_new")
  (caller-owns-return #t)
  (return-type "GtkTreeRowReference*")
  (parameters
    '("GtkTreeModel*" "model" (in))
    '("GtkTreePath*" "path" (in))
  )
)

(define-function gtk_tree_row_reference_new_proxy
  (is-constructor-of "GtkTreeRowReference")
  (c-name "gtk_tree_row_reference_new_proxy")
  (caller-owns-return #t)
  (return-type "GtkTreeRowReference*")
  (parameters
    '("GObject*" "proxy" (in))
    '("GtkTreeModel*" "model" (in))
    '("GtkTreePath*" "path" (in))
  )
)

(define-method get_path
  (of-object "GtkTreeRowReference")
  (c-name "gtk_tree_row_reference_get_path")
  (caller-owns-return #t)
  (return-type "GtkTreePath*")
)

(define-method get_model
  (of-object "GtkTreeRowReference")
  (c-name "gtk_tree_row_reference_get_model")
  (return-type "GtkTreeModel*")
)

(define-method valid
  (of-object "GtkTreeRowReference")
  (c-name "gtk_tree_row_reference_valid")
  (return-type "gboolean")
)

(define-method copy
  (of-object "GtkTreeRowReference")
  (c-name "gtk_tree_row_reference_copy")
  (caller-owns-return #t)
  (return-type "GtkTreeRowReference*")
)

(define-method free
  (of-object "GtkTreeRowReference")
  (c-name "gtk_tree_row_reference_free")
  (return-type "none")
)

(define-function tree_row_reference_inserted
  (c-name "gtk_tree_row_reference_inserted")
  (return-type "none")
  (parameters
    '("GObject*" "proxy" (in))
    '("GtkTreePath*" "path" (in))
  )
)

(define-function tree_row_reference_deleted
  (c-name "gtk_tree_row_reference_deleted")
  (return-type "none")
  (parameters
    '("GObject*" "proxy" (in))
    '("GtkTreePath*" "path" (in))
  )
)

(define-function tree_row_reference_reordered
  (c-name "gtk_tree_row_reference_reordered")
  (return-type "none")
  (parameters
    '("GObject*" "proxy" (in))
    '("GtkTreePath*" "path" (in))
    '("GtkTreeIter*" "iter" (in))
    '("gint*" "new_order" (in))
  )
)

(define-method copy
  (of-object "GtkTreeIter")
  (c-name "gtk_tree_iter_copy")
  (caller-owns-return #t)
  (return-type "GtkTreeIter*")
)

(define-method free
  (of-object "GtkTreeIter")
  (c-name "gtk_tree_iter_free")
  (return-type "none")
)

(define-function gtk_tree_iter_get_type
  (c-name "gtk_tree_iter_get_type")
  (return-type "GType")
)

(define-function gtk_tree_model_get_type
  (c-name "gtk_tree_model_get_type")
  (return-type "GType")
)

(define-method get_flags
  (of-object "GtkTreeModel")
  (c-name "gtk_tree_model_get_flags")
  (return-type "GtkTreeModelFlags")
)

(define-method get_n_columns
  (of-object "GtkTreeModel")
  (c-name "gtk_tree_model_get_n_columns")
  (return-type "gint")
)

(define-method get_column_type
  (of-object "GtkTreeModel")
  (c-name "gtk_tree_model_get_column_type")
  (return-type "GType")
  (parameters
    '("gint" "index" (in))
  )
)

(define-method get_iter
  (of-object "GtkTreeModel")
  (c-name "gtk_tree_model_get_iter")
  (return-type "gboolean")
  (parameters
    '("GtkTreeIter*" "iter" (out))
    '("GtkTreePath*" "path" (in))
  )
)

(define-method get_iter_from_string
  (of-object "GtkTreeModel")
  (c-name "gtk_tree_model_get_iter_from_string")
  (return-type "gboolean")
  (parameters
    '("GtkTreeIter*" "iter" (out))
    '("const-gchar*" "path_string" (in))
  )
)

(define-method get_string_from_iter
  (of-object "GtkTreeModel")
  (c-name "gtk_tree_model_get_string_from_iter")
  (caller-owns-return #t)
  (return-type "gchar*")
  (parameters
    '("GtkTreeIter*" "iter" (in))
  )
)

(define-method get_iter_root
  (of-object "GtkTreeModel")
  (c-name "gtk_tree_model_get_iter_root")
  (return-type "gboolean")
  (parameters
    '("GtkTreeIter*" "iter" (out))
  )
)

(define-method get_iter_first
  (of-object "GtkTreeModel")
  (c-name "gtk_tree_model_get_iter_first")
  (return-type "gboolean")
  (parameters
    '("GtkTreeIter*" "iter" (out))
  )
)

(define-method get_path
  (of-object "GtkTreeModel")
  (c-name "gtk_tree_model_get_path")
  (caller-owns-return #t)
  (return-type "GtkTreePath*")
  (parameters
    '("GtkTreeIter*" "iter" (in))
  )
)

(define-method get_value
  (of-object "GtkTreeModel")
  (c-name "gtk_tree_model_get_value")
  (return-type "none")
  (parameters
    '("GtkTreeIter*" "iter" (in))
    '("gint" "column" (in))
    '("GValue*" "value" (out))
  )
)

(define-method iter_next
  (of-object "GtkTreeModel")
  (c-name "gtk_tree_model_iter_next")
  (return-type "gboolean")
  (parameters
    '("GtkTreeIter*" "iter" (in))
  )
)

(define-method iter_children
  (of-object "GtkTreeModel")
  (c-name "gtk_tree_model_iter_children")
  (return-type "gboolean")
  (parameters
    '("GtkTreeIter*" "iter" (out))
    '("GtkTreeIter*" "parent" (in) (null-ok))
  )
)

(define-method iter_has_child
  (of-object "GtkTreeModel")
  (c-name "gtk_tree_model_iter_has_child")
  (return-type "gboolean")
  (parameters
    '("GtkTreeIter*" "iter" (in))
  )
)

(define-method iter_n_children
  (of-object "GtkTreeModel")
  (c-name "gtk_tree_model_iter_n_children")
  (return-type "gint")
  (parameters
    '("GtkTreeIter*" "iter" (in) (null-ok))
  )
)

(define-method iter_nth_child
  (of-object "GtkTreeModel")
  (c-name "gtk_tree_model_iter_nth_child")
  (return-type "gboolean")
  (parameters
    '("GtkTreeIter*" "iter" (out))
    '("GtkTreeIter*" "parent" (in) (null-ok))
    '("gint" "n" (in))
  )
)

(define-method iter_parent
  (of-object "GtkTreeModel")
  (c-name "gtk_tree_model_iter_parent")
  (return-type "gboolean")
  (parameters
    '("GtkTreeIter*" "iter" (out))
    '("GtkTreeIter*" "child" (in))
  )
)

(define-method ref_node
  (of-object "GtkTreeModel")
  (c-name "gtk_tree_model_ref_node")
  (return-type "none")
  (parameters
    '("GtkTreeIter*" "iter" (in))
  )
)

(define-method unref_node
  (of-object "GtkTreeModel")
  (c-name "gtk_tree_model_unref_node")
  (return-type "none")
  (parameters
    '("GtkTreeIter*" "iter" (in))
  )
)

(define-method get
  (of-object "GtkTreeModel")
  (c-name "gtk_tree_model_get")
  (return-type "none")
  (parameters
    '("GtkTreeIter*" "iter" (in))
  )
  (varargs #t)
)

(define-method get_valist
  (of-object "GtkTreeModel")
  (c-name "gtk_tree_model_get_valist")
  (return-type "none")
  (parameters
    '("GtkTreeIter*" "iter" (in))
    '("va_list" "var_args" (in))
  )
)

(define-method foreach
  (of-object "GtkTreeModel")
  (c-name "gtk_tree_model_foreach")
  (return-type "none")
  (parameters
    '("GtkTreeModelForeachFunc" "func" (in))
    '("gpointer" "user_data" (in) (null-ok))
  )
)

(define-method row_changed
  (of-object "GtkTreeModel")
  (c-name "gtk_tree_model_row_changed")
  (return-type "none")
  (parameters
    '("GtkTreePath*" "path" (in))
    '("GtkTreeIter*" "iter" (in))
  )
)

(define-method row_inserted
  (of-object "GtkTreeModel")
  (c-name "gtk_tree_model_row_inserted")
  (return-type "none")
  (parameters
    '("GtkTreePath*" "path" (in))
    '("GtkTreeIter*" "iter" (in))
  )
)

(define-method row_has_child_toggled
  (of-object "GtkTreeModel")
  (c-name "gtk_tree_model_row_has_child_toggled")
  (return-type "none")
  (parameters
    '("GtkTreePath*" "path" (in))
    '("GtkTreeIter*" "iter" (in))
  )
)

(define-method row_deleted
  (of-object "GtkTreeModel")
  (c-name "gtk_tree_model_row_deleted")
  (return-type "none")
  (parameters
    '("GtkTreePath*" "path" (in))
  )
)

(define-method rows_reordered
  (of-object "GtkTreeModel")
  (c-name "gtk_tree_model_rows_reordered")
  (return-type "none")
  (parameters
    '("GtkTreePath*" "path" (in))
    '("GtkTreeIter*" "iter" (in))
    '("gint*" "new_order" (in))
  )
)

(define-function gtk_tree_model_filter_get_type
  (c-name "gtk_tree_model_filter_get_type")
  (return-type "GType")
)

(define-function tree_model_filter_new
  (is-constructor-of "GtkTreeModel")
  (c-name "gtk_tree_model_filter_new")
  (return-type "GtkTreeModel*")
  (parameters
	'("GtkTreeModel*" "child_model" (in))
    '("GtkTreePath*" "root" (in) (default "NULL") (null-ok))
  )
)

(define-method set_visible_func
  (of-object "GtkTreeModelFilter")
  (c-name "gtk_tree_model_filter_set_visible_func")
  (return-type "none")
  (parameters
    '("GtkTreeModelFilterVisibleFunc" "func" (in))
    '("gpointer" "data" (in) (null-ok))
    '("GtkDestroyNotify" "destroy" (in))
  )
)

(define-method set_modify_func
  (of-object "GtkTreeModelFilter")
  (c-name "gtk_tree_model_filter_set_modify_func")
  (return-type "none")
  (parameters
    '("gint" "n_columns" (in))
    '("GType*" "types" (in))
    '("GtkTreeModelFilterModifyFunc" "func" (in))
    '("gpointer" "data" (in) (null-ok))
    '("GtkDestroyNotify" "destroy" (in))
  )
)

(define-method set_visible_column
  (of-object "GtkTreeModelFilter")
  (c-name "gtk_tree_model_filter_set_visible_column")
  (return-type "none")
  (parameters
    '("gint" "column" (in))
  )
)

(define-method get_model
  (of-object "GtkTreeModelFilter")
  (c-name "gtk_tree_model_filter_get_model")
  (return-type "GtkTreeModel*")
)

(define-method convert_child_iter_to_iter
  (of-object "GtkTreeModelFilter")
  (c-name "gtk_tree_model_filter_convert_child_iter_to_iter")
  (return-type "none")
  (parameters
    '("GtkTreeIter*" "filter_iter" (out))
    '("GtkTreeIter*" "child_iter" (in))
  )
)

(define-method convert_iter_to_child_iter
  (of-object "GtkTreeModelFilter")
  (c-name "gtk_tree_model_filter_convert_iter_to_child_iter")
  (return-type "none")
  (parameters
    '("GtkTreeIter*" "child_iter" (out))
    '("GtkTreeIter*" "filter_iter" (in))
  )
)

(define-method convert_child_path_to_path
  (of-object "GtkTreeModelFilter")
  (c-name "gtk_tree_model_filter_convert_child_path_to_path")
  (caller-owns-return #t)
  (return-type "GtkTreePath*")
  (parameters
    '("GtkTreePath*" "child_path" (in))
  )
)

(define-method convert_path_to_child_path
  (of-object "GtkTreeModelFilter")
  (c-name "gtk_tree_model_filter_convert_path_to_child_path")
  (caller-owns-return #t)
  (return-type "GtkTreePath*")
  (parameters
    '("GtkTreePath*" "filter_path" (in))
  )
)

(define-method refilter
  (of-object "GtkTreeModelFilter")
  (c-name "gtk_tree_model_filter_refilter")
  (return-type "none")
)

(define-method clear_cache
  (of-object "GtkTreeModelFilter")
  (c-name "gtk_tree_model_filter_clear_cache")
  (return-type "none")
)

(define-function gtk_tree_model_sort_get_type
  (c-name "gtk_tree_model_sort_get_type")
  (return-type "GType")
)

(define-function gtk_tree_model_sort_new_with_model
  (is-constructor-of "GtkTreeModelSort")
  (c-name "gtk_tree_model_sort_new_with_model")
  (caller-owns-return #t)
  (return-type "GtkTreeModel*")
  (properties
    '("model" (argname "child_model"))
  )
)

(define-method get_model
  (of-object "GtkTreeModelSort")
  (c-name "gtk_tree_model_sort_get_model")
  (return-type "GtkTreeModel*")
)

(define-method convert_child_path_to_path
  (of-object "GtkTreeModelSort")
  (c-name "gtk_tree_model_sort_convert_child_path_to_path")
  (caller-owns-return #t)
  (return-type "GtkTreePath*")
  (parameters
    '("GtkTreePath*" "child_path" (in))
  )
)

(define-method convert_child_iter_to_iter
  (of-object "GtkTreeModelSort")
  (c-name "gtk_tree_model_sort_convert_child_iter_to_iter")
  (return-type "none")
  (parameters
    '("GtkTreeIter*" "sort_iter" (out))
    '("GtkTreeIter*" "child_iter" (in))
  )
)

(define-method convert_path_to_child_path
  (of-object "GtkTreeModelSort")
  (c-name "gtk_tree_model_sort_convert_path_to_child_path")
  (caller-owns-return #t)
  (return-type "GtkTreePath*")
  (parameters
    '("GtkTreePath*" "sorted_path" (in))
  )
)

(define-method convert_iter_to_child_iter
  (of-object "GtkTreeModelSort")
  (c-name "gtk_tree_model_sort_convert_iter_to_child_iter")
  (return-type "none")
  (parameters
    '("GtkTreeIter*" "child_iter" (out))
    '("GtkTreeIter*" "sorted_iter" (in))
  )
)

(define-method reset_default_sort_func
  (of-object "GtkTreeModelSort")
  (c-name "gtk_tree_model_sort_reset_default_sort_func")
  (return-type "none")
)

(define-method clear_cache
  (of-object "GtkTreeModelSort")
  (c-name "gtk_tree_model_sort_clear_cache")
  (return-type "none")
)

(define-method iter_is_valid
  (of-object "GtkTreeModelSort")
  (c-name "gtk_tree_model_sort_iter_is_valid")
  (return-type "gboolean")
  (parameters
    '("GtkTreeIter*" "iter" (in))
  )
)

(define-function gtk_tree_selection_get_type
  (c-name "gtk_tree_selection_get_type")
  (return-type "GType")
)

(define-method set_mode
  (of-object "GtkTreeSelection")
  (c-name "gtk_tree_selection_set_mode")
  (return-type "none")
  (parameters
    '("GtkSelectionMode" "type" (in))
  )
)

(define-method get_mode
  (of-object "GtkTreeSelection")
  (c-name "gtk_tree_selection_get_mode")
  (return-type "GtkSelectionMode")
)

(define-method set_select_function
  (of-object "GtkTreeSelection")
  (c-name "gtk_tree_selection_set_select_function")
  (return-type "none")
  (parameters
    '("GtkTreeSelectionFunc" "func" (in))
    '("gpointer" "data" (in) (null-ok))
    '("GtkDestroyNotify" "destroy" (in))
  )
)

(define-method get_user_data
  (of-object "GtkTreeSelection")
  (c-name "gtk_tree_selection_get_user_data")
  (return-type "gpointer")
)

(define-method get_tree_view
  (of-object "GtkTreeSelection")
  (c-name "gtk_tree_selection_get_tree_view")
  (return-type "GtkTreeView*")
)

(define-method get_selected
  (of-object "GtkTreeSelection")
  (c-name "gtk_tree_selection_get_selected")
  (return-type "gboolean")
  (parameters
    '("GtkTreeModel**" "model" (out))
    '("GtkTreeIter*" "iter" (out))
  )
)

(define-method get_selected_rows
  (of-object "GtkTreeSelection")
  (c-name "gtk_tree_selection_get_selected_rows")
  (caller-owns-return #t)
  (return-type "GList[GtkTreePath]")
  (parameters
    '("GtkTreeModel**" "model" (out))
  )
)

(define-method count_selected_rows
  (of-object "GtkTreeSelection")
  (c-name "gtk_tree_selection_count_selected_rows")
  (return-type "gint")
)

(define-method selected_foreach
  (of-object "GtkTreeSelection")
  (c-name "gtk_tree_selection_selected_foreach")
  (return-type "none")
  (parameters
    '("GtkTreeSelectionForeachFunc" "func" (in))
    '("gpointer" "data" (in) (null-ok))
  )
)

(define-method select_path
  (of-object "GtkTreeSelection")
  (c-name "gtk_tree_selection_select_path")
  (return-type "none")
  (parameters
    '("GtkTreePath*" "path" (in))
  )
)

(define-method unselect_path
  (of-object "GtkTreeSelection")
  (c-name "gtk_tree_selection_unselect_path")
  (return-type "none")
  (parameters
    '("GtkTreePath*" "path" (in))
  )
)

(define-method select_iter
  (of-object "GtkTreeSelection")
  (c-name "gtk_tree_selection_select_iter")
  (return-type "none")
  (parameters
    '("GtkTreeIter*" "iter" (in))
  )
)

(define-method unselect_iter
  (of-object "GtkTreeSelection")
  (c-name "gtk_tree_selection_unselect_iter")
  (return-type "none")
  (parameters
    '("GtkTreeIter*" "iter" (in))
  )
)

(define-method path_is_selected
  (of-object "GtkTreeSelection")
  (c-name "gtk_tree_selection_path_is_selected")
  (return-type "gboolean")
  (parameters
    '("GtkTreePath*" "path" (in))
  )
)

(define-method iter_is_selected
  (of-object "GtkTreeSelection")
  (c-name "gtk_tree_selection_iter_is_selected")
  (return-type "gboolean")
  (parameters
    '("GtkTreeIter*" "iter" (in))
  )
)

(define-method select_all
  (of-object "GtkTreeSelection")
  (c-name "gtk_tree_selection_select_all")
  (return-type "none")
)

(define-method unselect_all
  (of-object "GtkTreeSelection")
  (c-name "gtk_tree_selection_unselect_all")
  (return-type "none")
)

(define-method select_range
  (of-object "GtkTreeSelection")
  (c-name "gtk_tree_selection_select_range")
  (return-type "none")
  (parameters
    '("GtkTreePath*" "start_path" (in))
    '("GtkTreePath*" "end_path" (in))
  )
)

(define-method unselect_range
  (of-object "GtkTreeSelection")
  (c-name "gtk_tree_selection_unselect_range")
  (return-type "none")
  (parameters
    '("GtkTreePath*" "start_path" (in))
    '("GtkTreePath*" "end_path" (in))
  )
)

(define-function gtk_tree_sortable_get_type
  (c-name "gtk_tree_sortable_get_type")
  (return-type "GType")
)

(define-method sort_column_changed
  (of-object "GtkTreeSortable")
  (c-name "gtk_tree_sortable_sort_column_changed")
  (return-type "none")
)

(define-method get_sort_column_id
  (of-object "GtkTreeSortable")
  (c-name "gtk_tree_sortable_get_sort_column_id")
  (return-type "gboolean")
  (parameters
    '("gint*" "sort_column_id" (out))
    '("GtkSortType*" "order" (out))
  )
)

(define-method set_sort_column_id
  (of-object "GtkTreeSortable")
  (c-name "gtk_tree_sortable_set_sort_column_id")
  (return-type "none")
  (parameters
    '("gint" "sort_column_id" (in))
    '("GtkSortType" "order" (in))
  )
)

(define-method set_sort_func
  (of-object "GtkTreeSortable")
  (c-name "gtk_tree_sortable_set_sort_func")
  (return-type "none")
  (parameters
    '("gint" "sort_column_id" (in))
    '("GtkTreeIterCompareFunc" "sort_func" (in))
    '("gpointer" "user_data" (in) (null-ok))
    '("GtkDestroyNotify" "destroy" (in))
  )
)

(define-method set_default_sort_func
  (of-object "GtkTreeSortable")
  (c-name "gtk_tree_sortable_set_default_sort_func")
  (return-type "none")
  (parameters
    '("GtkTreeIterCompareFunc" "sort_func" (in))
    '("gpointer" "user_data" (in) (null-ok))
    '("GtkDestroyNotify" "destroy" (in))
  )
)

(define-method has_default_sort_func
  (of-object "GtkTreeSortable")
  (c-name "gtk_tree_sortable_has_default_sort_func")
  (return-type "gboolean")
)

(define-function gtk_tree_store_get_type
  (c-name "gtk_tree_store_get_type")
  (return-type "GType")
)

(define-function gtk_tree_store_new
  (is-constructor-of "GtkTreeStore")
  (c-name "gtk_tree_store_new")
  (caller-owns-return #t)
  (return-type "GtkTreeStore*")
  (parameters
    '("gint" "n_columns" (in))
  )
  (varargs #t)
)

(define-function gtk_tree_store_newv
  (is-constructor-of "GtkTreeStore")
  (c-name "gtk_tree_store_newv")
  (caller-owns-return #t)
  (return-type "GtkTreeStore*")
  (parameters
    '("gint" "n_columns" (in))
    '("GType*" "types" (in))
  )
)

(define-method set_column_types
  (of-object "GtkTreeStore")
  (c-name "gtk_tree_store_set_column_types")
  (return-type "none")
  (parameters
    '("gint" "n_columns" (in))
    '("GType*" "types" (in))
  )
)

(define-method set_value
  (of-object "GtkTreeStore")
  (c-name "gtk_tree_store_set_value")
  (return-type "none")
  (parameters
    '("GtkTreeIter*" "iter" (in))
    '("gint" "column" (in))
    '("GValue*" "value" (in))
  )
)

(define-method set
  (of-object "GtkTreeStore")
  (c-name "gtk_tree_store_set")
  (return-type "none")
  (parameters
    '("GtkTreeIter*" "iter" (in))
  )
  (varargs #t)
)

(define-method set_valist
  (of-object "GtkTreeStore")
  (c-name "gtk_tree_store_set_valist")
  (return-type "none")
  (parameters
    '("GtkTreeIter*" "iter" (in))
    '("va_list" "var_args" (in))
  )
)

(define-method remove
  (of-object "GtkTreeStore")
  (c-name "gtk_tree_store_remove")
  (return-type "gboolean")
  (parameters
    '("GtkTreeIter*" "iter" (in))
  )
)

(define-method insert
  (of-object "GtkTreeStore")
  (c-name "gtk_tree_store_insert")
  (return-type "none")
  (parameters
    '("GtkTreeIter*" "iter" (out))
    '("GtkTreeIter*" "parent" (in))
    '("gint" "position" (in))
  )
)

(define-method insert_before
  (of-object "GtkTreeStore")
  (c-name "gtk_tree_store_insert_before")
  (return-type "none")
  (parameters
    '("GtkTreeIter*" "iter" (out))
    '("GtkTreeIter*" "parent" (in))
    '("GtkTreeIter*" "sibling" (in))
  )
)

(define-method insert_after
  (of-object "GtkTreeStore")
  (c-name "gtk_tree_store_insert_after")
  (return-type "none")
  (parameters
    '("GtkTreeIter*" "iter" (out))
    '("GtkTreeIter*" "parent" (in))
    '("GtkTreeIter*" "sibling" (in))
  )
)

(define-method prepend
  (of-object "GtkTreeStore")
  (c-name "gtk_tree_store_prepend")
  (return-type "none")
  (parameters
    '("GtkTreeIter*" "iter" (out))
    '("GtkTreeIter*" "parent" (in) (null-ok))
  )
)

(define-method append
  (of-object "GtkTreeStore")
  (c-name "gtk_tree_store_append")
  (return-type "none")
  (parameters
    '("GtkTreeIter*" "iter" (out))
    '("GtkTreeIter*" "parent" (in) (null-ok))
  )
)

(define-method is_ancestor
  (of-object "GtkTreeStore")
  (c-name "gtk_tree_store_is_ancestor")
  (return-type "gboolean")
  (parameters
    '("GtkTreeIter*" "iter" (in))
    '("GtkTreeIter*" "descendant" (in))
  )
)

(define-method iter_depth
  (of-object "GtkTreeStore")
  (c-name "gtk_tree_store_iter_depth")
  (return-type "gint")
  (parameters
    '("GtkTreeIter*" "iter" (in))
  )
)

(define-method clear
  (of-object "GtkTreeStore")
  (c-name "gtk_tree_store_clear")
  (return-type "none")
)

(define-method iter_is_valid
  (of-object "GtkTreeStore")
  (c-name "gtk_tree_store_iter_is_valid")
  (return-type "gboolean")
  (parameters
    '("GtkTreeIter*" "iter" (in))
  )
)

(define-method reorder
  (of-object "GtkTreeStore")
  (c-name "gtk_tree_store_reorder")
  (return-type "none")
  (parameters
    '("GtkTreeIter*" "parent" (in))
    '("gint*" "new_order" (in))
  )
)

(define-method swap
  (of-object "GtkTreeStore")
  (c-name "gtk_tree_store_swap")
  (return-type "none")
  (parameters
    '("GtkTreeIter*" "a" (in))
    '("GtkTreeIter*" "b" (in))
  )
)

(define-method move_after
  (of-object "GtkTreeStore")
  (c-name "gtk_tree_store_move_after")
  (return-type "none")
  (parameters
    '("GtkTreeIter*" "iter" (in))
    '("GtkTreeIter*" "position" (in) (null-ok))
  )
)

(define-method move_before
  (of-object "GtkTreeStore")
  (c-name "gtk_tree_store_move_before")
  (return-type "none")
  (parameters
    '("GtkTreeIter*" "iter" (in))
    '("GtkTreeIter*" "position" (in) (null-ok))
  )
)

(define-method queue_resize
  (of-object "GtkTreeViewColumn")
  (c-name "gtk_tree_view_column_queue_resize")
  (return-type "none")
)

(define-function gtk_tree_view_get_type
  (c-name "gtk_tree_view_get_type")
  (return-type "GType")
)

(define-function gtk_tree_view_new
  (is-constructor-of "GtkTreeView")
  (c-name "gtk_tree_view_new")
  (caller-owns-return #t)
  (return-type "GtkWidget*")
)

(define-function gtk_tree_view_new_with_model
  (is-constructor-of "GtkTreeView")
  (c-name "gtk_tree_view_new_with_model")
  (caller-owns-return #t)
  (return-type "GtkWidget*")
  (properties
    '("model" (optional) (argname "model"))
  )
)

(define-method get_model
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_get_model")
  (return-type "GtkTreeModel*")
)

(define-method set_model
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_set_model")
  (return-type "none")
  (parameters
    '("GtkTreeModel*" "model" (in) (default "NULL") (null-ok))
  )
)

(define-method get_selection
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_get_selection")
  (return-type "GtkTreeSelection*")
)

(define-method get_hadjustment
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_get_hadjustment")
  (return-type "GtkAdjustment*")
)

(define-method set_hadjustment
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_set_hadjustment")
  (return-type "none")
  (parameters
    '("GtkAdjustment*" "adjustment" (in))
  )
)

(define-method get_vadjustment
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_get_vadjustment")
  (return-type "GtkAdjustment*")
)

(define-method set_vadjustment
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_set_vadjustment")
  (return-type "none")
  (parameters
    '("GtkAdjustment*" "adjustment" (in))
  )
)

(define-method get_headers_visible
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_get_headers_visible")
  (return-type "gboolean")
)

(define-method set_headers_visible
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_set_headers_visible")
  (return-type "none")
  (parameters
    '("gboolean" "headers_visible" (in))
  )
)

(define-method columns_autosize
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_columns_autosize")
  (return-type "none")
)

(define-method set_headers_clickable
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_set_headers_clickable")
  (return-type "none")
  (parameters
    '("gboolean" "active" (in))
  )
)

(define-method set_rules_hint
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_set_rules_hint")
  (return-type "none")
  (parameters
    '("gboolean" "setting" (in))
  )
)

(define-method get_rules_hint
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_get_rules_hint")
  (return-type "gboolean")
)

(define-method append_column
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_append_column")
  (return-type "gint")
  (parameters
    '("GtkTreeViewColumn*" "column" (in))
  )
)

(define-method remove_column
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_remove_column")
  (return-type "gint")
  (parameters
    '("GtkTreeViewColumn*" "column" (in))
  )
)

(define-method insert_column
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_insert_column")
  (return-type "gint")
  (parameters
    '("GtkTreeViewColumn*" "column" (in))
    '("gint" "position" (in))
  )
)

(define-method insert_column_with_attributes
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_insert_column_with_attributes")
  (return-type "gint")
  (parameters
    '("gint" "position" (in))
    '("const-gchar*" "title" (in))
    '("GtkCellRenderer*" "cell" (in))
  )
  (varargs #t)
)

(define-method insert_column_with_data_func
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_insert_column_with_data_func")
  (return-type "gint")
  (parameters
    '("gint" "position" (in))
    '("const-gchar*" "title" (in))
    '("GtkCellRenderer*" "cell" (in))
    '("GtkTreeCellDataFunc" "func" (in))
    '("gpointer" "data" (in) (null-ok))
    '("GDestroyNotify" "dnotify" (in))
  )
)

(define-method get_column
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_get_column")
  (return-type "GtkTreeViewColumn*")
  (parameters
    '("gint" "n" (in))
  )
)

(define-method get_columns
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_get_columns")
  (caller-owns-return #t)
  (return-type "GList[GtkTreeViewColumn]")
)

(define-method move_column_after
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_move_column_after")
  (return-type "none")
  (parameters
    '("GtkTreeViewColumn*" "column" (in))
    '("GtkTreeViewColumn*" "base_column" (in) (null-ok))
  )
)

(define-method set_expander_column
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_set_expander_column")
  (return-type "none")
  (parameters
    '("GtkTreeViewColumn*" "column" (in))
  )
)

(define-method get_expander_column
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_get_expander_column")
  (return-type "GtkTreeViewColumn*")
)

(define-method set_column_drag_function
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_set_column_drag_function")
  (return-type "none")
  (parameters
    '("GtkTreeViewColumnDropFunc" "func" (in))
    '("gpointer" "user_data" (in) (null-ok))
    '("GtkDestroyNotify" "destroy" (in))
  )
)

(define-method scroll_to_point
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_scroll_to_point")
  (return-type "none")
  (parameters
    '("gint" "tree_x" (in))
    '("gint" "tree_y" (in))
  )
)

(define-method scroll_to_cell
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_scroll_to_cell")
  (return-type "none")
  (parameters
    '("GtkTreePath*" "path" (in))
    '("GtkTreeViewColumn*" "column" (in) (default "NULL") (null-ok))
    '("gboolean" "use_align" (in) (default "FALSE"))
    '("gfloat" "row_align" (in) (default "0.0"))
    '("gfloat" "col_align" (in) (default "0.0"))
  )
)

(define-method row_activated
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_row_activated")
  (return-type "none")
  (parameters
    '("GtkTreePath*" "path" (in))
    '("GtkTreeViewColumn*" "column" (in))
  )
)

(define-method expand_all
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_expand_all")
  (return-type "none")
)

(define-method collapse_all
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_collapse_all")
  (return-type "none")
)

(define-method expand_to_path
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_expand_to_path")
  (return-type "none")
  (parameters
    '("GtkTreePath*" "path" (in))
  )
)

(define-method expand_row
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_expand_row")
  (return-type "gboolean")
  (parameters
    '("GtkTreePath*" "path" (in))
    '("gboolean" "open_all" (in))
  )
)

(define-method collapse_row
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_collapse_row")
  (return-type "none")
  (parameters
    '("GtkTreePath*" "path" (in))
  )
)

(define-method map_expanded_rows
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_map_expanded_rows")
  (return-type "none")
  (parameters
    '("GtkTreeViewMappingFunc" "func" (in))
    '("gpointer" "data" (in) (null-ok))
  )
)

(define-method row_expanded
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_row_expanded")
  (return-type "gboolean")
  (parameters
    '("GtkTreePath*" "path" (in))
  )
)

(define-method set_reorderable
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_set_reorderable")
  (return-type "none")
  (parameters
    '("gboolean" "reorderable" (in))
  )
)

(define-method get_reorderable
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_get_reorderable")
  (return-type "gboolean")
)

(define-method set_cursor
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_set_cursor")
  (return-type "none")
  (parameters
    '("GtkTreePath*" "path" (in))
    '("GtkTreeViewColumn*" "focus_column" (in) (default "NULL") (null-ok))
    '("gboolean" "start_editing" (in) (default "FALSE"))
  )
)

(define-method set_cursor_on_cell
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_set_cursor_on_cell")
  (return-type "none")
  (parameters
    '("GtkTreePath*" "path" (in))
    '("GtkTreeViewColumn*" "focus_column" (in) (default "NULL") (null-ok))
    '("GtkCellRenderer*" "focus_cell" (in) (default "NULL") (null-ok))
    '("gboolean" "start_editing" (in) (default "FALSE"))
  )
)

(define-method get_cursor
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_get_cursor")
  (return-type "none")
  (parameters
    '("GtkTreePath**" "path" (out))
    '("GtkTreeViewColumn**" "focus_column" (out))
  )
)

(define-method get_bin_window
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_get_bin_window")
  (return-type "GdkWindow*")
)

(define-method get_path_at_pos
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_get_path_at_pos")
  (return-type "gboolean")
  (parameters
    '("gint" "x" (in))
    '("gint" "y" (in))
    '("GtkTreePath**" "path" (out))
    '("GtkTreeViewColumn**" "column" (out))
    '("gint*" "cell_x" (out))
    '("gint*" "cell_y" (out))
  )
)

(define-method get_cell_area
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_get_cell_area")
  (return-type "none")
  (parameters
    '("GtkTreePath*" "path" (in))
    '("GtkTreeViewColumn*" "column" (in))
    '("GdkRectangle*" "rect" (out))
  )
)

(define-method get_background_area
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_get_background_area")
  (return-type "none")
  (parameters
    '("GtkTreePath*" "path" (in))
    '("GtkTreeViewColumn*" "column" (in))
    '("GdkRectangle*" "rect" (out))
  )
)

(define-method get_visible_rect
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_get_visible_rect")
  (return-type "none")
  (parameters
    '("GdkRectangle*" "visible_rect" (out))
  )
)

(define-method get_visible_range
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_get_visible_range")
  (return-type "gboolean")
  (parameters
    '("GtkTreePath**" "start_path" (out))
    '("GtkTreePath**" "end_path" (out))
  )
)

(define-method widget_to_tree_coords
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_widget_to_tree_coords")
  (return-type "none")
  (parameters
    '("gint" "wx" (in))
    '("gint" "wy" (in))
    '("gint*" "tx" (out))
    '("gint*" "ty" (out))
  )
)

(define-method tree_to_widget_coords
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_tree_to_widget_coords")
  (return-type "none")
  (parameters
    '("gint" "tx" (in))
    '("gint" "ty" (in))
    '("gint*" "wx" (out))
    '("gint*" "wy" (out))
  )
)

(define-method enable_model_drag_source
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_enable_model_drag_source")
  (return-type "none")
  (parameters
    '("GdkModifierType" "start_button_mask" (in))
    '("const-GtkTargetEntry[]" "targets" (in))
    '("gint" "n_targets" (in))
    '("GdkDragAction" "actions" (in))
  )
)

(define-method enable_model_drag_dest
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_enable_model_drag_dest")
  (return-type "none")
  (parameters
    '("const-GtkTargetEntry[]" "targets" (in))
    '("gint" "n_targets" (in))
    '("GdkDragAction" "actions" (in))
  )
)

(define-method unset_rows_drag_source
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_unset_rows_drag_source")
  (return-type "none")
)

(define-method unset_rows_drag_dest
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_unset_rows_drag_dest")
  (return-type "none")
)

(define-method set_drag_dest_row
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_set_drag_dest_row")
  (return-type "none")
  (parameters
    '("GtkTreePath*" "path" (in))
    '("GtkTreeViewDropPosition" "pos" (in))
  )
)

(define-method get_drag_dest_row
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_get_drag_dest_row")
  (return-type "none")
  (parameters
    '("GtkTreePath**" "path" (in))
    '("GtkTreeViewDropPosition*" "pos" (in))
  )
)

(define-method get_dest_row_at_pos
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_get_dest_row_at_pos")
  (return-type "gboolean")
  (parameters
    '("gint" "drag_x" (in))
    '("gint" "drag_y" (in))
    '("GtkTreePath**" "path" (out))
    '("GtkTreeViewDropPosition*" "pos" (out))
  )
)

(define-method create_row_drag_icon
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_create_row_drag_icon")
  (caller-owns-return #t)
  (return-type "GdkPixmap*")
  (parameters
    '("GtkTreePath*" "path" (in))
  )
)

(define-method set_enable_search
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_set_enable_search")
  (return-type "none")
  (parameters
    '("gboolean" "enable_search" (in))
  )
)

(define-method get_enable_search
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_get_enable_search")
  (return-type "gboolean")
)

(define-method get_search_column
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_get_search_column")
  (return-type "gint")
)

(define-method set_search_column
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_set_search_column")
  (return-type "none")
  (parameters
    '("gint" "column" (in))
  )
)

(define-method get_search_equal_func
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_get_search_equal_func")
  (return-type "GtkTreeViewSearchEqualFunc")
)

(define-method set_search_equal_func
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_set_search_equal_func")
  (return-type "none")
  (parameters
    '("GtkTreeViewSearchEqualFunc" "search_equal_func" (in))
    '("gpointer" "search_user_data" (in) (null-ok))
    '("GtkDestroyNotify" "search_destroy" (in))
  )
)

(define-method set_destroy_count_func
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_set_destroy_count_func")
  (return-type "none")
  (parameters
    '("GtkTreeDestroyCountFunc" "func" (in))
    '("gpointer" "data" (in) (null-ok))
    '("GtkDestroyNotify" "destroy" (in))
  )
)

(define-method set_fixed_height_mode
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_set_fixed_height_mode")
  (return-type "none")
  (parameters
    '("gboolean" "enable" (in))
  )
)

(define-method get_fixed_height_mode
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_get_fixed_height_mode")
  (return-type "gboolean")
)

(define-method set_hover_selection
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_set_hover_selection")
  (return-type "none")
  (parameters
    '("gboolean" "hover" (in))
  )
)

(define-method get_hover_selection
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_get_hover_selection")
  (return-type "gboolean")
)

(define-method set_hover_expand
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_set_hover_expand")
  (return-type "none")
  (parameters
    '("gboolean" "expand" (in))
  )
)

(define-method get_hover_expand
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_get_hover_expand")
  (return-type "gboolean")
)

(define-method get_row_separator_func
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_get_row_separator_func")
  (return-type "GtkTreeViewRowSeparatorFunc")
)

(define-method set_row_separator_func
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_set_row_separator_func")
  (return-type "none")
  (parameters
    '("GtkTreeViewRowSeparatorFunc" "func" (in))
    '("gpointer" "data" (in) (null-ok))
    '("GtkDestroyNotify" "destroy" (in))
  )
)

(define-function gtk_tree_view_column_get_type
  (c-name "gtk_tree_view_column_get_type")
  (return-type "GType")
)

(define-function gtk_tree_view_column_new
  (is-constructor-of "GtkTreeViewColumn")
  (c-name "gtk_tree_view_column_new")
  (caller-owns-return #t)
  (return-type "GtkTreeViewColumn*")
)

(define-function gtk_tree_view_column_new_with_attributes
  (is-constructor-of "GtkTreeViewColumn")
  (c-name "gtk_tree_view_column_new_with_attributes")
  (caller-owns-return #t)
  (return-type "GtkObject*")
  (parameters
    '("gchar*" "title" (in))
    '("GtkCellRenderer*" "cell" (in))
  )
  (varargs #t)
)

(define-method pack_start
  (of-object "GtkTreeViewColumn")
  (c-name "gtk_tree_view_column_pack_start")
  (return-type "none")
  (parameters
    '("GtkCellRenderer*" "cell" (in))
    '("gboolean" "expand" (in) (default "TRUE"))
  )
)

(define-method pack_end
  (of-object "GtkTreeViewColumn")
  (c-name "gtk_tree_view_column_pack_end")
  (return-type "none")
  (parameters
    '("GtkCellRenderer*" "cell" (in))
    '("gboolean" "expand" (in) (default "TRUE"))
  )
)

(define-method clear
  (of-object "GtkTreeViewColumn")
  (c-name "gtk_tree_view_column_clear")
  (return-type "none")
)

(define-method get_cell_renderers
  (of-object "GtkTreeViewColumn")
  (c-name "gtk_tree_view_column_get_cell_renderers")
  (caller-owns-return #t)
  (return-type "GList[GtkCellRenderer]")
)

(define-method add_attribute
  (of-object "GtkTreeViewColumn")
  (c-name "gtk_tree_view_column_add_attribute")
  (return-type "none")
  (parameters
    '("GtkCellRenderer*" "cell_renderer" (in))
    '("gchar*" "attribute" (in))
    '("gint" "column" (in))
  )
)

(define-method set_attributes
  (of-object "GtkTreeViewColumn")
  (c-name "gtk_tree_view_column_set_attributes")
  (return-type "none")
  (parameters
    '("GtkCellRenderer*" "cell_renderer" (in))
  )
  (varargs #t)
)

(define-method set_cell_data_func
  (of-object "GtkTreeViewColumn")
  (c-name "gtk_tree_view_column_set_cell_data_func")
  (return-type "none")
  (parameters
    '("GtkCellRenderer*" "cell_renderer" (in))
    '("GtkTreeCellDataFunc" "func" (in))
    '("gpointer" "func_data" (in) (null-ok))
    '("GtkDestroyNotify" "destroy" (in))
  )
)

(define-method clear_attributes
  (of-object "GtkTreeViewColumn")
  (c-name "gtk_tree_view_column_clear_attributes")
  (return-type "none")
  (parameters
    '("GtkCellRenderer*" "cell_renderer" (in))
  )
)

(define-method set_spacing
  (of-object "GtkTreeViewColumn")
  (c-name "gtk_tree_view_column_set_spacing")
  (return-type "none")
  (parameters
    '("gint" "spacing" (in))
  )
)

(define-method get_spacing
  (of-object "GtkTreeViewColumn")
  (c-name "gtk_tree_view_column_get_spacing")
  (return-type "gint")
)

(define-method set_visible
  (of-object "GtkTreeViewColumn")
  (c-name "gtk_tree_view_column_set_visible")
  (return-type "none")
  (parameters
    '("gboolean" "visible" (in))
  )
)

(define-method get_visible
  (of-object "GtkTreeViewColumn")
  (c-name "gtk_tree_view_column_get_visible")
  (return-type "gboolean")
)

(define-method set_resizable
  (of-object "GtkTreeViewColumn")
  (c-name "gtk_tree_view_column_set_resizable")
  (return-type "none")
  (parameters
    '("gboolean" "resizable" (in))
  )
)

(define-method get_resizable
  (of-object "GtkTreeViewColumn")
  (c-name "gtk_tree_view_column_get_resizable")
  (return-type "gboolean")
)

(define-method set_sizing
  (of-object "GtkTreeViewColumn")
  (c-name "gtk_tree_view_column_set_sizing")
  (return-type "none")
  (parameters
    '("GtkTreeViewColumnSizing" "type" (in))
  )
)

(define-method get_sizing
  (of-object "GtkTreeViewColumn")
  (c-name "gtk_tree_view_column_get_sizing")
  (return-type "GtkTreeViewColumnSizing")
)

(define-method get_width
  (of-object "GtkTreeViewColumn")
  (c-name "gtk_tree_view_column_get_width")
  (return-type "gint")
)

(define-method get_fixed_width
  (of-object "GtkTreeViewColumn")
  (c-name "gtk_tree_view_column_get_fixed_width")
  (return-type "gint")
)

(define-method set_fixed_width
  (of-object "GtkTreeViewColumn")
  (c-name "gtk_tree_view_column_set_fixed_width")
  (return-type "none")
  (parameters
    '("gint" "fixed_width" (in))
  )
)

(define-method set_min_width
  (of-object "GtkTreeViewColumn")
  (c-name "gtk_tree_view_column_set_min_width")
  (return-type "none")
  (parameters
    '("gint" "min_width" (in))
  )
)

(define-method get_min_width
  (of-object "GtkTreeViewColumn")
  (c-name "gtk_tree_view_column_get_min_width")
  (return-type "gint")
)

(define-method set_max_width
  (of-object "GtkTreeViewColumn")
  (c-name "gtk_tree_view_column_set_max_width")
  (return-type "none")
  (parameters
    '("gint" "max_width" (in))
  )
)

(define-method get_max_width
  (of-object "GtkTreeViewColumn")
  (c-name "gtk_tree_view_column_get_max_width")
  (return-type "gint")
)

(define-method clicked
  (of-object "GtkTreeViewColumn")
  (c-name "gtk_tree_view_column_clicked")
  (return-type "none")
)

(define-method set_title
  (of-object "GtkTreeViewColumn")
  (c-name "gtk_tree_view_column_set_title")
  (return-type "none")
  (parameters
    '("gchar*" "title" (in))
  )
)

(define-method get_title
  (of-object "GtkTreeViewColumn")
  (c-name "gtk_tree_view_column_get_title")
  (return-type "const-gchar*")
)

(define-method set_expand
  (of-object "GtkTreeViewColumn")
  (c-name "gtk_tree_view_column_set_expand")
  (return-type "none")
  (parameters
    '("gboolean" "expand" (in))
  )
)

(define-method get_expand
  (of-object "GtkTreeViewColumn")
  (c-name "gtk_tree_view_column_get_expand")
  (return-type "gboolean")
)

(define-method set_clickable
  (of-object "GtkTreeViewColumn")
  (c-name "gtk_tree_view_column_set_clickable")
  (return-type "none")
  (parameters
    '("gboolean" "active" (in))
  )
)

(define-method get_clickable
  (of-object "GtkTreeViewColumn")
  (c-name "gtk_tree_view_column_get_clickable")
  (return-type "gboolean")
)

(define-method set_widget
  (of-object "GtkTreeViewColumn")
  (c-name "gtk_tree_view_column_set_widget")
  (return-type "none")
  (parameters
    '("GtkWidget*" "widget" (in) (null-ok))
  )
)

(define-method get_widget
  (of-object "GtkTreeViewColumn")
  (c-name "gtk_tree_view_column_get_widget")
  (return-type "GtkWidget*")
)

(define-method set_alignment
  (of-object "GtkTreeViewColumn")
  (c-name "gtk_tree_view_column_set_alignment")
  (return-type "none")
  (parameters
    '("gfloat" "xalign" (in))
  )
)

(define-method get_alignment
  (of-object "GtkTreeViewColumn")
  (c-name "gtk_tree_view_column_get_alignment")
  (return-type "gfloat")
)

(define-method set_reorderable
  (of-object "GtkTreeViewColumn")
  (c-name "gtk_tree_view_column_set_reorderable")
  (return-type "none")
  (parameters
    '("gboolean" "reorderable" (in))
  )
)

(define-method get_reorderable
  (of-object "GtkTreeViewColumn")
  (c-name "gtk_tree_view_column_get_reorderable")
  (return-type "gboolean")
)

(define-method set_sort_column_id
  (of-object "GtkTreeViewColumn")
  (c-name "gtk_tree_view_column_set_sort_column_id")
  (return-type "none")
  (parameters
    '("gint" "sort_column_id" (in))
  )
)

(define-method get_sort_column_id
  (of-object "GtkTreeViewColumn")
  (c-name "gtk_tree_view_column_get_sort_column_id")
  (return-type "gint")
)

(define-method set_sort_indicator
  (of-object "GtkTreeViewColumn")
  (c-name "gtk_tree_view_column_set_sort_indicator")
  (return-type "none")
  (parameters
    '("gboolean" "setting" (in))
  )
)

(define-method get_sort_indicator
  (of-object "GtkTreeViewColumn")
  (c-name "gtk_tree_view_column_get_sort_indicator")
  (return-type "gboolean")
)

(define-method set_sort_order
  (of-object "GtkTreeViewColumn")
  (c-name "gtk_tree_view_column_set_sort_order")
  (return-type "none")
  (parameters
    '("GtkSortType" "order" (in))
  )
)

(define-method get_sort_order
  (of-object "GtkTreeViewColumn")
  (c-name "gtk_tree_view_column_get_sort_order")
  (return-type "GtkSortType")
)

(define-method cell_set_cell_data
  (of-object "GtkTreeViewColumn")
  (c-name "gtk_tree_view_column_cell_set_cell_data")
  (return-type "none")
  (parameters
    '("GtkTreeModel*" "tree_model" (in))
    '("GtkTreeIter*" "iter" (in))
    '("gboolean" "is_expander" (in))
    '("gboolean" "is_expanded" (in))
  )
)

(define-method cell_get_size
  (of-object "GtkTreeViewColumn")
  (c-name "gtk_tree_view_column_cell_get_size")
  (return-type "none")
  (parameters
    '("GdkRectangle*" "cell_area" (out))
    '("gint*" "x_offset" (out))
    '("gint*" "y_offset" (out))
    '("gint*" "width" (out))
    '("gint*" "height" (out))
  )
)

(define-method cell_is_visible
  (of-object "GtkTreeViewColumn")
  (c-name "gtk_tree_view_column_cell_is_visible")
  (return-type "gboolean")
)

(define-method focus_cell
  (of-object "GtkTreeViewColumn")
  (c-name "gtk_tree_view_column_focus_cell")
  (return-type "none")
  (parameters
    '("GtkCellRenderer*" "cell" (in))
  )
)

(define-method cell_get_position
  (of-object "GtkTreeViewColumn")
  (c-name "gtk_tree_view_column_cell_get_position")
  (return-type "none")
  (parameters
    '("GtkCellRenderer*" "cell_renderer" (in))
    '("gint*" "start_pos" (out))
    '("gint*" "width" (out))
  )
)

(define-function gtk_ui_manager_get_type
  (c-name "gtk_ui_manager_get_type")
  (return-type "GType")
)

(define-function gtk_ui_manager_new
  (is-constructor-of "GtkUIManager")
  (c-name "gtk_ui_manager_new")
  (caller-owns-return #t)
  (return-type "GtkUIManager*")
)

(define-method set_add_tearoffs
  (of-object "GtkUIManager")
  (c-name "gtk_ui_manager_set_add_tearoffs")
  (return-type "none")
  (parameters
    '("gboolean" "add_tearoffs" (in))
  )
)

(define-method get_add_tearoffs
  (of-object "GtkUIManager")
  (c-name "gtk_ui_manager_get_add_tearoffs")
  (return-type "gboolean")
)

(define-method insert_action_group
  (of-object "GtkUIManager")
  (c-name "gtk_ui_manager_insert_action_group")
  (return-type "none")
  (parameters
    '("GtkActionGroup*" "action_group" (in))
    '("gint" "pos" (in))
  )
)

(define-method remove_action_group
  (of-object "GtkUIManager")
  (c-name "gtk_ui_manager_remove_action_group")
  (return-type "none")
  (parameters
    '("GtkActionGroup*" "action_group" (in))
  )
)

(define-method get_action_groups
  (of-object "GtkUIManager")
  (c-name "gtk_ui_manager_get_action_groups")
  (caller-owns-return #t)
  (return-type "GList[GtkActionGroup]")
)

(define-method get_accel_group
  (of-object "GtkUIManager")
  (c-name "gtk_ui_manager_get_accel_group")
  (return-type "GtkAccelGroup*")
)

(define-method get_widget
  (of-object "GtkUIManager")
  (c-name "gtk_ui_manager_get_widget")
  (return-type "GtkWidget*")
  (parameters
    '("const-gchar*" "path" (in))
  )
)

(define-method get_toplevels
  (of-object "GtkUIManager")
  (c-name "gtk_ui_manager_get_toplevels")
  (caller-owns-return #t)
  (return-type "GSList[GtkWidget]")
  (parameters
    '("GtkUIManagerItemType" "types" (in))
  )
)

(define-method get_action
  (of-object "GtkUIManager")
  (c-name "gtk_ui_manager_get_action")
  (return-type "GtkAction*")
  (parameters
    '("const-gchar*" "path" (in))
  )
)

(define-method add_ui_from_string
  (of-object "GtkUIManager")
  (c-name "gtk_ui_manager_add_ui_from_string")
  (return-type "guint")
  (parameters
    '("const-gchar*" "buffer" (in))
    '("gssize" "length" (in) (default "-1"))
    '("GError**" "error" (out))
  )
)

(define-method add_ui_from_file
  (of-object "GtkUIManager")
  (c-name "gtk_ui_manager_add_ui_from_file")
  (return-type "guint")
  (parameters
    '("const-gchar*" "filename" (in))
    '("GError**" "error" (out))
  )
)

(define-method add_ui
  (of-object "GtkUIManager")
  (c-name "gtk_ui_manager_add_ui")
  (return-type "none")
  (parameters
    '("guint" "merge_id" (in))
    '("const-gchar*" "path" (in))
    '("const-gchar*" "name" (in))
    '("const-gchar*" "action" (in) (null-ok))
    '("GtkUIManagerItemType" "type" (in))
    '("gboolean" "top" (in))
  )
)

(define-method remove_ui
  (of-object "GtkUIManager")
  (c-name "gtk_ui_manager_remove_ui")
  (return-type "none")
  (parameters
    '("guint" "merge_id" (in))
  )
)

(define-method get_ui
  (of-object "GtkUIManager")
  (c-name "gtk_ui_manager_get_ui")
  (caller-owns-return #t)
  (return-type "gchar*")
)

(define-method ensure_update
  (of-object "GtkUIManager")
  (c-name "gtk_ui_manager_ensure_update")
  (return-type "none")
)

(define-method new_merge_id
  (of-object "GtkUIManager")
  (c-name "gtk_ui_manager_new_merge_id")
  (return-type "guint")
)

(define-function gtk_vbutton_box_get_type
  (c-name "gtk_vbutton_box_get_type")
  (return-type "GType")
)

(define-function gtk_vbutton_box_new
  (is-constructor-of "GtkVButtonBox")
  (c-name "gtk_vbutton_box_new")
  (caller-owns-return #t)
  (return-type "GtkWidget*")
)

(define-function vbutton_box_get_spacing_default
  (c-name "gtk_vbutton_box_get_spacing_default")
  (return-type "gint")
)

(define-function vbutton_box_set_spacing_default
  (c-name "gtk_vbutton_box_set_spacing_default")
  (return-type "none")
  (parameters
    '("gint" "spacing" (in))
  )
)

(define-function vbutton_box_get_layout_default
  (c-name "gtk_vbutton_box_get_layout_default")
  (return-type "GtkButtonBoxStyle")
)

(define-function vbutton_box_set_layout_default
  (c-name "gtk_vbutton_box_set_layout_default")
  (return-type "none")
  (parameters
    '("GtkButtonBoxStyle" "layout" (in))
  )
)

(define-function gtk_vbox_get_type
  (c-name "gtk_vbox_get_type")
  (return-type "GType")
)

(define-function gtk_vbox_new
  (is-constructor-of "GtkVBox")
  (c-name "gtk_vbox_new")
  (caller-owns-return #t)
  (return-type "GtkWidget*")
  (properties
    '("homogeneous" (optional) (argname "homogeneous"))
    '("spacing" (optional) (argname "spacing"))
  )
)

(define-function gtk_viewport_get_type
  (c-name "gtk_viewport_get_type")
  (return-type "GType")
)

(define-function gtk_viewport_new
  (is-constructor-of "GtkViewport")
  (c-name "gtk_viewport_new")
  (caller-owns-return #t)
  (return-type "GtkWidget*")
  (properties
    '("hadjustment" (optional) (argname "hadjustment"))
    '("vadjustment" (optional) (argname "vadjustment"))
  )
)

(define-method get_hadjustment
  (of-object "GtkViewport")
  (c-name "gtk_viewport_get_hadjustment")
  (return-type "GtkAdjustment*")
)

(define-method get_vadjustment
  (of-object "GtkViewport")
  (c-name "gtk_viewport_get_vadjustment")
  (return-type "GtkAdjustment*")
)

(define-method set_hadjustment
  (of-object "GtkViewport")
  (c-name "gtk_viewport_set_hadjustment")
  (return-type "none")
  (parameters
    '("GtkAdjustment*" "adjustment" (in) (null-ok))
  )
)

(define-method set_vadjustment
  (of-object "GtkViewport")
  (c-name "gtk_viewport_set_vadjustment")
  (return-type "none")
  (parameters
    '("GtkAdjustment*" "adjustment" (in) (null-ok))
  )
)

(define-method set_shadow_type
  (of-object "GtkViewport")
  (c-name "gtk_viewport_set_shadow_type")
  (return-type "none")
  (parameters
    '("GtkShadowType" "type" (in))
  )
)

(define-method get_shadow_type
  (of-object "GtkViewport")
  (c-name "gtk_viewport_get_shadow_type")
  (return-type "GtkShadowType")
)

(define-function gtk_vpaned_get_type
  (c-name "gtk_vpaned_get_type")
  (return-type "GType")
)

(define-function gtk_vpaned_new
  (is-constructor-of "GtkVPaned")
  (c-name "gtk_vpaned_new")
  (caller-owns-return #t)
  (return-type "GtkWidget*")
)

(define-function gtk_vruler_get_type
  (c-name "gtk_vruler_get_type")
  (return-type "GType")
)

(define-function gtk_vruler_new
  (is-constructor-of "GtkVRuler")
  (c-name "gtk_vruler_new")
  (caller-owns-return #t)
  (return-type "GtkWidget*")
)

(define-function gtk_vscale_get_type
  (c-name "gtk_vscale_get_type")
  (return-type "GType")
)

(define-function gtk_vscale_new
  (is-constructor-of "GtkVScale")
  (c-name "gtk_vscale_new")
  (caller-owns-return #t)
  (return-type "GtkWidget*")
  (properties
    '("adjustment" (optional) (argname "adjustment"))
  )
)

(define-function gtk_vscale_new_with_range
  (is-constructor-of "GtkVScale")
  (c-name "gtk_vscale_new_with_range")
  (caller-owns-return #t)
  (return-type "GtkWidget*")
  (parameters
    '("gdouble" "min" (in))
    '("gdouble" "max" (in))
    '("gdouble" "step" (in))
  )
)

(define-function gtk_vscrollbar_get_type
  (c-name "gtk_vscrollbar_get_type")
  (return-type "GType")
)

(define-function gtk_vscrollbar_new
  (is-constructor-of "GtkVScrollbar")
  (c-name "gtk_vscrollbar_new")
  (caller-owns-return #t)
  (return-type "GtkWidget*")
  (properties
    '("adjustment" (optional) (argname "adjustment"))
  )
)

(define-function gtk_vseparator_get_type
  (c-name "gtk_vseparator_get_type")
  (return-type "GType")
)

(define-function gtk_vseparator_new
  (is-constructor-of "GtkVSeparator")
  (c-name "gtk_vseparator_new")
  (caller-owns-return #t)
  (return-type "GtkWidget*")
)

(define-function gtk_widget_get_type
  (c-name "gtk_widget_get_type")
  (return-type "GType")
)

(define-function gtk_widget_new
  (is-constructor-of "GtkWidget")
  (c-name "gtk_widget_new")
  (caller-owns-return #t)
  (return-type "GtkWidget*")
  (parameters
    '("GType" "type" (in))
    '("const-gchar*" "first_property_name" (in))
  )
  (varargs #t)
)

(define-method ref
  (of-object "GtkWidget")
  (c-name "gtk_widget_ref")
  (return-type "GtkWidget*")
)

(define-method unref
  (of-object "GtkWidget")
  (c-name "gtk_widget_unref")
  (return-type "none")
)

(define-method destroy
  (of-object "GtkWidget")
  (c-name "gtk_widget_destroy")
  (return-type "none")
)

(define-method destroyed
  (of-object "GtkWidget")
  (c-name "gtk_widget_destroyed")
  (return-type "none")
  (parameters
    '("GtkWidget**" "widget_pointer" (in))
  )
)

(define-method set
  (of-object "GtkWidget")
  (c-name "gtk_widget_set")
  (return-type "none")
  (parameters
    '("const-gchar*" "first_property_name" (in))
  )
  (varargs #t)
)

(define-method unparent
  (of-object "GtkWidget")
  (c-name "gtk_widget_unparent")
  (return-type "none")
)

(define-method show
  (of-object "GtkWidget")
  (c-name "gtk_widget_show")
  (return-type "none")
)

(define-method show_now
  (of-object "GtkWidget")
  (c-name "gtk_widget_show_now")
  (return-type "none")
)

(define-method hide
  (of-object "GtkWidget")
  (c-name "gtk_widget_hide")
  (return-type "none")
)

(define-method show_all
  (of-object "GtkWidget")
  (c-name "gtk_widget_show_all")
  (return-type "none")
)

(define-method hide_all
  (of-object "GtkWidget")
  (c-name "gtk_widget_hide_all")
  (return-type "none")
)

(define-method set_no_show_all
  (of-object "GtkWidget")
  (c-name "gtk_widget_set_no_show_all")
  (return-type "none")
  (parameters
    '("gboolean" "no_show_all" (in))
  )
)

(define-method get_no_show_all
  (of-object "GtkWidget")
  (c-name "gtk_widget_get_no_show_all")
  (return-type "gboolean")
)

(define-method map
  (of-object "GtkWidget")
  (c-name "gtk_widget_map")
  (return-type "none")
)

(define-method unmap
  (of-object "GtkWidget")
  (c-name "gtk_widget_unmap")
  (return-type "none")
)

(define-method realize
  (of-object "GtkWidget")
  (c-name "gtk_widget_realize")
  (return-type "none")
)

(define-method unrealize
  (of-object "GtkWidget")
  (c-name "gtk_widget_unrealize")
  (return-type "none")
)

(define-method queue_draw
  (of-object "GtkWidget")
  (c-name "gtk_widget_queue_draw")
  (return-type "none")
)

(define-method queue_draw_area
  (of-object "GtkWidget")
  (c-name "gtk_widget_queue_draw_area")
  (return-type "none")
  (parameters
    '("gint" "x" (in))
    '("gint" "y" (in))
    '("gint" "width" (in))
    '("gint" "height" (in))
  )
)

(define-method queue_clear
  (of-object "GtkWidget")
  (c-name "gtk_widget_queue_clear")
  (return-type "none")
  (deprecated "use GtkWidget.queue_draw")
)

(define-method queue_clear_area
  (of-object "GtkWidget")
  (c-name "gtk_widget_queue_clear_area")
  (return-type "none")
  (deprecated "use GtkWidget.queue_draw_area")
  (parameters
    '("gint" "x" (in))
    '("gint" "y" (in))
    '("gint" "width" (in))
    '("gint" "height" (in))
  )
)

(define-method queue_resize
  (of-object "GtkWidget")
  (c-name "gtk_widget_queue_resize")
  (return-type "none")
)

(define-method queue_resize_no_redraw
  (of-object "GtkWidget")
  (c-name "gtk_widget_queue_resize_no_redraw")
  (return-type "none")
)

(define-method draw
  (of-object "GtkWidget")
  (c-name "gtk_widget_draw")
  (return-type "none")
  (deprecated "use GtkWidget.queue_draw_area")
  (parameters
    '("GdkRectangle*" "area" (in))
  )
)

(define-method size_request
  (of-object "GtkWidget")
  (c-name "gtk_widget_size_request")
  (return-type "none")
  (parameters
    '("GtkRequisition*" "requisition" (out))
  )
)

(define-method size_allocate
  (of-object "GtkWidget")
  (c-name "gtk_widget_size_allocate")
  (return-type "none")
  (parameters
    '("GtkAllocation*" "allocation" (in))
  )
)

(define-method get_child_requisition
  (of-object "GtkWidget")
  (c-name "gtk_widget_get_child_requisition")
  (return-type "none")
  (parameters
    '("GtkRequisition*" "requisition" (out))
  )
)

(define-method add_accelerator
  (of-object "GtkWidget")
  (c-name "gtk_widget_add_accelerator")
  (return-type "none")
  (parameters
    '("const-gchar*" "accel_signal" (in))
    '("GtkAccelGroup*" "accel_group" (in))
    '("guint" "accel_key" (in))
    '("GdkModifierType" "accel_mods" (in))
    '("GtkAccelFlags" "accel_flags" (in))
  )
)

(define-method remove_accelerator
  (of-object "GtkWidget")
  (c-name "gtk_widget_remove_accelerator")
  (return-type "gboolean")
  (parameters
    '("GtkAccelGroup*" "accel_group" (in))
    '("guint" "accel_key" (in))
    '("GdkModifierType" "accel_mods" (in))
  )
)

(define-method set_accel_path
  (of-object "GtkWidget")
  (c-name "gtk_widget_set_accel_path")
  (return-type "none")
  (parameters
    '("const-gchar*" "accel_path" (in))
    '("GtkAccelGroup*" "accel_group" (in))
  )
)

(define-method list_accel_closures
  (of-object "GtkWidget")
  (c-name "gtk_widget_list_accel_closures")
  (caller-owns-return #t)
  (return-type "GList[GClosure]")
)

(define-method can_activate_accel
  (of-object "GtkWidget")
  (c-name "gtk_widget_can_activate_accel")
  (return-type "gboolean")
  (parameters
    '("guint" "signal_id" (in))
  )
)

(define-method mnemonic_activate
  (of-object "GtkWidget")
  (c-name "gtk_widget_mnemonic_activate")
  (return-type "gboolean")
  (parameters
    '("gboolean" "group_cycling" (in))
  )
)

(define-method event
  (of-object "GtkWidget")
  (c-name "gtk_widget_event")
  (return-type "gboolean")
  (parameters
    '("GdkEvent*" "event" (in))
  )
)

(define-method send_expose
  (of-object "GtkWidget")
  (c-name "gtk_widget_send_expose")
  (return-type "gint")
  (parameters
    '("GdkEvent*" "event" (in))
  )
)

(define-method activate
  (of-object "GtkWidget")
  (c-name "gtk_widget_activate")
  (return-type "gboolean")
)

(define-method set_scroll_adjustments
  (of-object "GtkWidget")
  (c-name "gtk_widget_set_scroll_adjustments")
  (return-type "gboolean")
  (parameters
    '("GtkAdjustment*" "hadjustment" (in) (null-ok))
    '("GtkAdjustment*" "vadjustment" (in) (null-ok))
  )
)

(define-method reparent
  (of-object "GtkWidget")
  (c-name "gtk_widget_reparent")
  (return-type "none")
  (parameters
    '("GtkWidget*" "new_parent" (in))
  )
)

(define-method intersect
  (of-object "GtkWidget")
  (c-name "gtk_widget_intersect")
  (return-type "gboolean")
  (parameters
    '("GdkRectangle*" "area" (in))
    '("GdkRectangle*" "intersection" (in))
  )
)

(define-method region_intersect
  (of-object "GtkWidget")
  (c-name "gtk_widget_region_intersect")
  (caller-owns-return #t)
  (return-type "GdkRegion*")
  (parameters
    '("GdkRegion*" "region" (in))
  )
)

(define-method freeze_child_notify
  (of-object "GtkWidget")
  (c-name "gtk_widget_freeze_child_notify")
  (return-type "none")
)

(define-method child_notify
  (of-object "GtkWidget")
  (c-name "gtk_widget_child_notify")
  (return-type "none")
  (parameters
    '("const-gchar*" "child_property" (in))
  )
)

(define-method thaw_child_notify
  (of-object "GtkWidget")
  (c-name "gtk_widget_thaw_child_notify")
  (return-type "none")
)

(define-method is_focus
  (of-object "GtkWidget")
  (c-name "gtk_widget_is_focus")
  (return-type "gboolean")
)

(define-method grab_focus
  (of-object "GtkWidget")
  (c-name "gtk_widget_grab_focus")
  (return-type "none")
)

(define-method grab_default
  (of-object "GtkWidget")
  (c-name "gtk_widget_grab_default")
  (return-type "none")
)

(define-method set_name
  (of-object "GtkWidget")
  (c-name "gtk_widget_set_name")
  (return-type "none")
  (parameters
    '("const-gchar*" "name" (in))
  )
)

(define-method get_name
  (of-object "GtkWidget")
  (c-name "gtk_widget_get_name")
  (return-type "const-gchar*")
)

(define-method set_state
  (of-object "GtkWidget")
  (c-name "gtk_widget_set_state")
  (return-type "none")
  (parameters
    '("GtkStateType" "state" (in))
  )
)

(define-method set_sensitive
  (of-object "GtkWidget")
  (c-name "gtk_widget_set_sensitive")
  (return-type "none")
  (parameters
    '("gboolean" "sensitive" (in))
  )
)

(define-method set_app_paintable
  (of-object "GtkWidget")
  (c-name "gtk_widget_set_app_paintable")
  (return-type "none")
  (parameters
    '("gboolean" "app_paintable" (in))
  )
)

(define-method set_double_buffered
  (of-object "GtkWidget")
  (c-name "gtk_widget_set_double_buffered")
  (return-type "none")
  (parameters
    '("gboolean" "double_buffered" (in))
  )
)

(define-method set_redraw_on_allocate
  (of-object "GtkWidget")
  (c-name "gtk_widget_set_redraw_on_allocate")
  (return-type "none")
  (parameters
    '("gboolean" "redraw_on_allocate" (in))
  )
)

(define-method set_parent
  (of-object "GtkWidget")
  (c-name "gtk_widget_set_parent")
  (return-type "none")
  (parameters
    '("GtkWidget*" "parent" (in))
  )
)

(define-method set_parent_window
  (of-object "GtkWidget")
  (c-name "gtk_widget_set_parent_window")
  (return-type "none")
  (parameters
    '("GdkWindow*" "parent_window" (in))
  )
)

(define-method set_child_visible
  (of-object "GtkWidget")
  (c-name "gtk_widget_set_child_visible")
  (return-type "none")
  (parameters
    '("gboolean" "is_visible" (in))
  )
)

(define-method get_child_visible
  (of-object "GtkWidget")
  (c-name "gtk_widget_get_child_visible")
  (return-type "gboolean")
)

(define-method get_parent
  (of-object "GtkWidget")
  (c-name "gtk_widget_get_parent")
  (return-type "GtkWidget*")
)

(define-method get_parent_window
  (of-object "GtkWidget")
  (c-name "gtk_widget_get_parent_window")
  (return-type "GdkWindow*")
)

(define-method child_focus
  (of-object "GtkWidget")
  (c-name "gtk_widget_child_focus")
  (return-type "gboolean")
  (parameters
    '("GtkDirectionType" "direction" (in))
  )
)

(define-method set_size_request
  (of-object "GtkWidget")
  (c-name "gtk_widget_set_size_request")
  (return-type "none")
  (parameters
    '("gint" "width" (in))
    '("gint" "height" (in))
  )
)

(define-method get_size_request
  (of-object "GtkWidget")
  (c-name "gtk_widget_get_size_request")
  (return-type "none")
  (parameters
    '("gint*" "width" (out))
    '("gint*" "height" (out))
  )
)

(define-method set_uposition
  (of-object "GtkWidget")
  (c-name "gtk_widget_set_uposition")
  (return-type "none")
  (parameters
    '("gint" "x" (in))
    '("gint" "y" (in))
  )
)

(define-method set_usize
  (of-object "GtkWidget")
  (c-name "gtk_widget_set_usize")
  (return-type "none")
  (deprecated "use GtkWidget.set_size_request")
  (parameters
    '("gint" "width" (in))
    '("gint" "height" (in))
  )
)

(define-method set_events
  (of-object "GtkWidget")
  (c-name "gtk_widget_set_events")
  (return-type "none")
  (parameters
    '("gint" "events" (in))
  )
)

(define-method add_events
  (of-object "GtkWidget")
  (c-name "gtk_widget_add_events")
  (return-type "none")
  (parameters
    '("gint" "events" (in))
  )
)

(define-method set_extension_events
  (of-object "GtkWidget")
  (c-name "gtk_widget_set_extension_events")
  (return-type "none")
  (parameters
    '("GdkExtensionMode" "mode" (in))
  )
)

(define-method get_extension_events
  (of-object "GtkWidget")
  (c-name "gtk_widget_get_extension_events")
  (return-type "GdkExtensionMode")
)

(define-method get_toplevel
  (of-object "GtkWidget")
  (c-name "gtk_widget_get_toplevel")
  (return-type "GtkWidget*")
)

(define-method get_ancestor
  (of-object "GtkWidget")
  (c-name "gtk_widget_get_ancestor")
  (return-type "GtkWidget*")
  (parameters
    '("GType" "widget_type" (in))
  )
)

(define-method get_colormap
  (of-object "GtkWidget")
  (c-name "gtk_widget_get_colormap")
  (return-type "GdkColormap*")
)

(define-method get_visual
  (of-object "GtkWidget")
  (c-name "gtk_widget_get_visual")
  (return-type "GdkVisual*")
)

(define-method get_screen
  (of-object "GtkWidget")
  (c-name "gtk_widget_get_screen")
  (return-type "GdkScreen*")
)

(define-method has_screen
  (of-object "GtkWidget")
  (c-name "gtk_widget_has_screen")
  (return-type "gboolean")
)

(define-method get_display
  (of-object "GtkWidget")
  (c-name "gtk_widget_get_display")
  (return-type "GdkDisplay*")
)

(define-method get_root_window
  (of-object "GtkWidget")
  (c-name "gtk_widget_get_root_window")
  (return-type "GdkWindow*")
)

(define-method get_settings
  (of-object "GtkWidget")
  (c-name "gtk_widget_get_settings")
  (return-type "GtkSettings*")
)

(define-method get_clipboard
  (of-object "GtkWidget")
  (c-name "gtk_widget_get_clipboard")
  (return-type "GtkClipboard*")
  (parameters
    '("GdkAtom" "selection" (in))
  )
)

(define-method get_accessible
  (of-object "GtkWidget")
  (c-name "gtk_widget_get_accessible")
  (return-type "AtkObject*")
)

(define-method set_colormap
  (of-object "GtkWidget")
  (c-name "gtk_widget_set_colormap")
  (return-type "none")
  (parameters
    '("GdkColormap*" "colormap" (in))
  )
)

(define-method get_events
  (of-object "GtkWidget")
  (c-name "gtk_widget_get_events")
  (return-type "gint")
)

(define-method get_pointer
  (of-object "GtkWidget")
  (c-name "gtk_widget_get_pointer")
  (return-type "none")
  (parameters
    '("gint*" "x" (out))
    '("gint*" "y" (out))
  )
)

(define-method is_ancestor
  (of-object "GtkWidget")
  (c-name "gtk_widget_is_ancestor")
  (return-type "gboolean")
  (parameters
    '("GtkWidget*" "ancestor" (in))
  )
)

(define-method translate_coordinates
  (of-object "GtkWidget")
  (c-name "gtk_widget_translate_coordinates")
  (return-type "gboolean")
  (parameters
    '("GtkWidget*" "dest_widget" (in))
    '("gint" "src_x" (in))
    '("gint" "src_y" (in))
    '("gint*" "dest_x" (out))
    '("gint*" "dest_y" (out))
  )
)

(define-method hide_on_delete
  (of-object "GtkWidget")
  (c-name "gtk_widget_hide_on_delete")
  (return-type "gboolean")
)

(define-method set_style
  (of-object "GtkWidget")
  (c-name "gtk_widget_set_style")
  (return-type "none")
  (parameters
    '("GtkStyle*" "style" (in) (null-ok))
  )
)

(define-method ensure_style
  (of-object "GtkWidget")
  (c-name "gtk_widget_ensure_style")
  (return-type "none")
)

(define-method get_style
  (of-object "GtkWidget")
  (c-name "gtk_widget_get_style")
  (return-type "GtkStyle*")
)

(define-method modify_style
  (of-object "GtkWidget")
  (c-name "gtk_widget_modify_style")
  (return-type "none")
  (parameters
    '("GtkRcStyle*" "style" (in))
  )
)

(define-method get_modifier_style
  (of-object "GtkWidget")
  (c-name "gtk_widget_get_modifier_style")
  (return-type "GtkRcStyle*")
)

(define-method modify_fg
  (of-object "GtkWidget")
  (c-name "gtk_widget_modify_fg")
  (return-type "none")
  (parameters
    '("GtkStateType" "state" (in))
    '("GdkColor*" "color" (in) (null-ok))
  )
)

(define-method modify_bg
  (of-object "GtkWidget")
  (c-name "gtk_widget_modify_bg")
  (return-type "none")
  (parameters
    '("GtkStateType" "state" (in))
    '("GdkColor*" "color" (in) (null-ok))
  )
)

(define-method modify_text
  (of-object "GtkWidget")
  (c-name "gtk_widget_modify_text")
  (return-type "none")
  (parameters
    '("GtkStateType" "state" (in))
    '("GdkColor*" "color" (in) (null-ok))
  )
)

(define-method modify_base
  (of-object "GtkWidget")
  (c-name "gtk_widget_modify_base")
  (return-type "none")
  (parameters
    '("GtkStateType" "state" (in))
    '("GdkColor*" "color" (in) (null-ok))
  )
)

(define-method modify_font
  (of-object "GtkWidget")
  (c-name "gtk_widget_modify_font")
  (return-type "none")
  (parameters
    '("PangoFontDescription*" "font_desc" (in) (null-ok))
  )
)

(define-method create_pango_context
  (of-object "GtkWidget")
  (c-name "gtk_widget_create_pango_context")
  (caller-owns-return #t)
  (return-type "PangoContext*")
)

(define-method get_pango_context
  (of-object "GtkWidget")
  (c-name "gtk_widget_get_pango_context")
  (return-type "PangoContext*")
)

(define-method create_pango_layout
  (of-object "GtkWidget")
  (c-name "gtk_widget_create_pango_layout")
  (caller-owns-return #t)
  (return-type "PangoLayout*")
  (parameters
    '("const-gchar*" "text" (in))
  )
)

(define-method render_icon
  (of-object "GtkWidget")
  (c-name "gtk_widget_render_icon")
  (caller-owns-return #t)
  (return-type "GdkPixbuf*")
  (parameters
    '("const-gchar*" "stock_id" (in))
    '("GtkIconSize" "size" (in))
    '("const-gchar*" "detail" (in) (default "NULL") (null-ok))
  )
)

(define-method set_composite_name
  (of-object "GtkWidget")
  (c-name "gtk_widget_set_composite_name")
  (return-type "none")
  (parameters
    '("const-gchar*" "name" (in))
  )
)

(define-method get_composite_name
  (of-object "GtkWidget")
  (c-name "gtk_widget_get_composite_name")
  (caller-owns-return #t)
  (return-type "gchar*")
)

(define-method reset_rc_styles
  (of-object "GtkWidget")
  (c-name "gtk_widget_reset_rc_styles")
  (return-type "none")
)

(define-function widget_push_colormap
  (c-name "gtk_widget_push_colormap")
  (return-type "none")
  (parameters
    '("GdkColormap*" "cmap" (in))
  )
)

(define-function widget_push_composite_child
  (c-name "gtk_widget_push_composite_child")
  (return-type "none")
)

(define-function widget_pop_composite_child
  (c-name "gtk_widget_pop_composite_child")
  (return-type "none")
)

(define-function widget_pop_colormap
  (c-name "gtk_widget_pop_colormap")
  (return-type "none")
)

(define-function widget_class_install_style_property
  (c-name "gtk_widget_class_install_style_property")
  (return-type "none")
  (parameters
    '("GtkWidgetClass*" "klass" (in))
    '("GParamSpec*" "pspec" (in))
  )
)

(define-function widget_class_install_style_property_parser
  (c-name "gtk_widget_class_install_style_property_parser")
  (return-type "none")
  (parameters
    '("GtkWidgetClass*" "klass" (in))
    '("GParamSpec*" "pspec" (in))
    '("GtkRcPropertyParser" "parser" (in))
  )
)

(define-function widget_class_find_style_property
  (c-name "gtk_widget_class_find_style_property")
  (return-type "GParamSpec*")
  (parameters
    '("GtkWidgetClass*" "klass" (in))
    '("const-gchar*" "property_name" (in))
  )
)

(define-function widget_class_list_style_properties
  (c-name "gtk_widget_class_list_style_properties")
  (caller-owns-return #t)
  (return-type "GParamSpec*[]")
  (parameters
    '("GtkWidgetClass*" "klass" (in))
    '("guint*" "n_properties" (out))
  )
)

(define-method style_get_property
  (of-object "GtkWidget")
  (c-name "gtk_widget_style_get_property")
  (return-type "none")
  (parameters
    '("const-gchar*" "property_name" (in))
    '("GValue*" "value" (out))
  )
)

(define-method style_get_valist
  (of-object "GtkWidget")
  (c-name "gtk_widget_style_get_valist")
  (return-type "none")
  (parameters
    '("const-gchar*" "first_property_name" (in))
    '("va_list" "var_args" (in))
  )
)

(define-method style_get
  (of-object "GtkWidget")
  (c-name "gtk_widget_style_get")
  (return-type "none")
  (parameters
    '("const-gchar*" "first_property_name" (in))
  )
  (varargs #t)
)

(define-function widget_get_default_style
  (c-name "gtk_widget_get_default_style")
  (return-type "GtkStyle*")
)

(define-function widget_set_default_colormap
  (c-name "gtk_widget_set_default_colormap")
  (return-type "none")
  (parameters
    '("GdkColormap*" "colormap" (in))
  )
)

(define-function widget_get_default_colormap
  (c-name "gtk_widget_get_default_colormap")
  (return-type "GdkColormap*")
)

(define-function widget_get_default_visual
  (c-name "gtk_widget_get_default_visual")
  (return-type "GdkVisual*")
)

(define-method set_direction
  (of-object "GtkWidget")
  (c-name "gtk_widget_set_direction")
  (return-type "none")
  (parameters
    '("GtkTextDirection" "dir" (in))
  )
)

(define-method get_direction
  (of-object "GtkWidget")
  (c-name "gtk_widget_get_direction")
  (return-type "GtkTextDirection")
)

(define-function widget_set_default_direction
  (c-name "gtk_widget_set_default_direction")
  (return-type "none")
  (parameters
    '("GtkTextDirection" "dir" (in))
  )
)

(define-function widget_get_default_direction
  (c-name "gtk_widget_get_default_direction")
  (return-type "GtkTextDirection")
)

(define-method shape_combine_mask
  (of-object "GtkWidget")
  (c-name "gtk_widget_shape_combine_mask")
  (return-type "none")
  (parameters
    '("GdkBitmap*" "shape_mask" (in))
    '("gint" "offset_x" (in))
    '("gint" "offset_y" (in))
  )
)

(define-method reset_shapes
  (of-object "GtkWidget")
  (c-name "gtk_widget_reset_shapes")
  (return-type "none")
)

(define-method path
  (of-object "GtkWidget")
  (c-name "gtk_widget_path")
  (return-type "none")
  (parameters
    '("guint*" "path_length" (out))
    '("gchar**" "path" (out))
    '("gchar**" "path_reversed" (out))
  )
)

(define-method class_path
  (of-object "GtkWidget")
  (c-name "gtk_widget_class_path")
  (return-type "none")
  (parameters
    '("guint*" "path_length" (out))
    '("gchar**" "path" (out))
    '("gchar**" "path_reversed" (out))
  )
)

(define-method list_mnemonic_labels
  (of-object "GtkWidget")
  (c-name "gtk_widget_list_mnemonic_labels")
  (caller-owns-return #t)
  (return-type "GList[gchar*]")
)

(define-method add_mnemonic_label
  (of-object "GtkWidget")
  (c-name "gtk_widget_add_mnemonic_label")
  (return-type "none")
  (parameters
    '("GtkWidget*" "label" (in))
  )
)

(define-method remove_mnemonic_label
  (of-object "GtkWidget")
  (c-name "gtk_widget_remove_mnemonic_label")
  (return-type "none")
  (parameters
    '("GtkWidget*" "label" (in))
  )
)

(define-function gtk_requisition_get_type
  (c-name "gtk_requisition_get_type")
  (return-type "GType")
)

(define-method copy
  (of-object "GtkRequisition")
  (c-name "gtk_requisition_copy")
  (caller-owns-return #t)
  (return-type "GtkRequisition*")
)

(define-method free
  (of-object "GtkRequisition")
  (c-name "gtk_requisition_free")
  (return-type "none")
)

(define-function gtk_window_get_type
  (c-name "gtk_window_get_type")
  (return-type "GType")
)

(define-function gtk_window_new
  (is-constructor-of "GtkWindow")
  (c-name "gtk_window_new")
  (caller-owns-return #t)
  (return-type "GtkWidget*")
  (properties
    '("type" (optional) (argname "type"))
  )
)

(define-method set_title
  (of-object "GtkWindow")
  (c-name "gtk_window_set_title")
  (return-type "none")
  (parameters
    '("const-gchar*" "title" (in))
  )
)

(define-method get_title
  (of-object "GtkWindow")
  (c-name "gtk_window_get_title")
  (return-type "const-gchar*")
)

(define-method set_wmclass
  (of-object "GtkWindow")
  (c-name "gtk_window_set_wmclass")
  (return-type "none")
  (parameters
    '("const-gchar*" "wmclass_name" (in))
    '("const-gchar*" "wmclass_class" (in))
  )
)

(define-method set_role
  (of-object "GtkWindow")
  (c-name "gtk_window_set_role")
  (return-type "none")
  (parameters
    '("const-gchar*" "role" (in))
  )
)

(define-method get_role
  (of-object "GtkWindow")
  (c-name "gtk_window_get_role")
  (return-type "const-gchar*")
)

(define-method add_accel_group
  (of-object "GtkWindow")
  (c-name "gtk_window_add_accel_group")
  (return-type "none")
  (parameters
    '("GtkAccelGroup*" "accel_group" (in))
  )
)

(define-method remove_accel_group
  (of-object "GtkWindow")
  (c-name "gtk_window_remove_accel_group")
  (return-type "none")
  (parameters
    '("GtkAccelGroup*" "accel_group" (in))
  )
)

(define-method set_position
  (of-object "GtkWindow")
  (c-name "gtk_window_set_position")
  (return-type "none")
  (parameters
    '("GtkWindowPosition" "position" (in))
  )
)

(define-method activate_focus
  (of-object "GtkWindow")
  (c-name "gtk_window_activate_focus")
  (return-type "gboolean")
)

(define-method set_focus
  (of-object "GtkWindow")
  (c-name "gtk_window_set_focus")
  (return-type "none")
  (parameters
    '("GtkWidget*" "focus" (in) (null-ok))
  )
)

(define-method get_focus
  (of-object "GtkWindow")
  (c-name "gtk_window_get_focus")
  (return-type "GtkWidget*")
)

(define-method set_default
  (of-object "GtkWindow")
  (c-name "gtk_window_set_default")
  (return-type "none")
  (parameters
    '("GtkWidget*" "default_widget" (in) (null-ok))
  )
)

(define-method activate_default
  (of-object "GtkWindow")
  (c-name "gtk_window_activate_default")
  (return-type "gboolean")
)

(define-method set_transient_for
  (of-object "GtkWindow")
  (c-name "gtk_window_set_transient_for")
  (return-type "none")
  (parameters
    '("GtkWindow*" "parent" (in) (null-ok))
  )
)

(define-method get_transient_for
  (of-object "GtkWindow")
  (c-name "gtk_window_get_transient_for")
  (return-type "GtkWindow*")
)

(define-method set_type_hint
  (of-object "GtkWindow")
  (c-name "gtk_window_set_type_hint")
  (return-type "none")
  (parameters
    '("GdkWindowTypeHint" "hint" (in))
  )
)

(define-method get_type_hint
  (of-object "GtkWindow")
  (c-name "gtk_window_get_type_hint")
  (return-type "GdkWindowTypeHint")
)

(define-method set_skip_taskbar_hint
  (of-object "GtkWindow")
  (c-name "gtk_window_set_skip_taskbar_hint")
  (return-type "none")
  (parameters
    '("gboolean" "setting" (in))
  )
)

(define-method get_skip_taskbar_hint
  (of-object "GtkWindow")
  (c-name "gtk_window_get_skip_taskbar_hint")
  (return-type "gboolean")
)

(define-method set_skip_pager_hint
  (of-object "GtkWindow")
  (c-name "gtk_window_set_skip_pager_hint")
  (return-type "none")
  (parameters
    '("gboolean" "setting" (in))
  )
)

(define-method get_skip_pager_hint
  (of-object "GtkWindow")
  (c-name "gtk_window_get_skip_pager_hint")
  (return-type "gboolean")
)

(define-method set_urgency_hint
  (of-object "GtkWindow")
  (c-name "gtk_window_set_urgency_hint")
  (return-type "none")
  (parameters
    '("gboolean" "setting" (in))
  )
)

(define-method get_urgency_hint
  (of-object "GtkWindow")
  (c-name "gtk_window_get_urgency_hint")
  (return-type "gboolean")
)

(define-method set_accept_focus
  (of-object "GtkWindow")
  (c-name "gtk_window_set_accept_focus")
  (return-type "none")
  (parameters
    '("gboolean" "setting" (in))
  )
)

(define-method get_accept_focus
  (of-object "GtkWindow")
  (c-name "gtk_window_get_accept_focus")
  (return-type "gboolean")
)

(define-method set_destroy_with_parent
  (of-object "GtkWindow")
  (c-name "gtk_window_set_destroy_with_parent")
  (return-type "none")
  (parameters
    '("gboolean" "setting" (in))
  )
)

(define-method get_destroy_with_parent
  (of-object "GtkWindow")
  (c-name "gtk_window_get_destroy_with_parent")
  (return-type "gboolean")
)

(define-method set_resizable
  (of-object "GtkWindow")
  (c-name "gtk_window_set_resizable")
  (return-type "none")
  (parameters
    '("gboolean" "resizable" (in))
  )
)

(define-method get_resizable
  (of-object "GtkWindow")
  (c-name "gtk_window_get_resizable")
  (return-type "gboolean")
)

(define-method set_gravity
  (of-object "GtkWindow")
  (c-name "gtk_window_set_gravity")
  (return-type "none")
  (parameters
    '("GdkGravity" "gravity" (in))
  )
)

(define-method get_gravity
  (of-object "GtkWindow")
  (c-name "gtk_window_get_gravity")
  (return-type "GdkGravity")
)

(define-method set_geometry_hints
  (of-object "GtkWindow")
  (c-name "gtk_window_set_geometry_hints")
  (return-type "none")
  (parameters
    '("GtkWidget*" "geometry_widget" (in))
    '("GdkGeometry*" "geometry" (in))
    '("GdkWindowHints" "geom_mask" (in))
  )
)

(define-method set_screen
  (of-object "GtkWindow")
  (c-name "gtk_window_set_screen")
  (return-type "none")
  (parameters
    '("GdkScreen*" "screen" (in))
  )
)

(define-method get_screen
  (of-object "GtkWindow")
  (c-name "gtk_window_get_screen")
  (return-type "GdkScreen*")
)

(define-method is_active
  (of-object "GtkWindow")
  (c-name "gtk_window_is_active")
  (return-type "gboolean")
)

(define-method has_toplevel_focus
  (of-object "GtkWindow")
  (c-name "gtk_window_has_toplevel_focus")
  (return-type "gboolean")
)

(define-method set_has_frame
  (of-object "GtkWindow")
  (c-name "gtk_window_set_has_frame")
  (return-type "none")
  (parameters
    '("gboolean" "setting" (in))
  )
)

(define-method get_has_frame
  (of-object "GtkWindow")
  (c-name "gtk_window_get_has_frame")
  (return-type "gboolean")
)

(define-method set_frame_dimensions
  (of-object "GtkWindow")
  (c-name "gtk_window_set_frame_dimensions")
  (return-type "none")
  (parameters
    '("gint" "left" (in))
    '("gint" "top" (in))
    '("gint" "right" (in))
    '("gint" "bottom" (in))
  )
)

(define-method get_frame_dimensions
  (of-object "GtkWindow")
  (c-name "gtk_window_get_frame_dimensions")
  (return-type "none")
  (parameters
    '("gint*" "left" (out))
    '("gint*" "top" (out))
    '("gint*" "right" (out))
    '("gint*" "bottom" (out))
  )
)

(define-method set_decorated
  (of-object "GtkWindow")
  (c-name "gtk_window_set_decorated")
  (return-type "none")
  (parameters
    '("gboolean" "setting" (in))
  )
)

(define-method get_decorated
  (of-object "GtkWindow")
  (c-name "gtk_window_get_decorated")
  (return-type "gboolean")
)

(define-method set_icon_list
  (of-object "GtkWindow")
  (c-name "gtk_window_set_icon_list")
  (return-type "none")
  (parameters
    '("GList*" "list" (in))
  )
)

(define-method get_icon_list
  (of-object "GtkWindow")
  (c-name "gtk_window_get_icon_list")
  (caller-owns-return #t)
  (return-type "GList[GdkPixbuf]")
)

(define-method set_icon
  (of-object "GtkWindow")
  (c-name "gtk_window_set_icon")
  (return-type "none")
  (parameters
    '("GdkPixbuf*" "icon" (in) (null-ok))
  )
)

(define-method set_icon_from_file
  (of-object "GtkWindow")
  (c-name "gtk_window_set_icon_from_file")
  (return-type "none")
  (parameters
    '("const-gchar*" "filename" (in))
    '("GError**" "error" (out))
  )
)

(define-method get_icon
  (of-object "GtkWindow")
  (c-name "gtk_window_get_icon")
  (return-type "GdkPixbuf*")
)

(define-function window_set_default_icon_list
  (c-name "gtk_window_set_default_icon_list")
  (return-type "none")
  (parameters
    '("GList*" "list" (in))
  )
)

(define-function window_get_default_icon_list
  (c-name "gtk_window_get_default_icon_list")
  (caller-owns-return #t)
  (return-type "GList[GdkPixbuf]")
)

(define-function window_set_default_icon
  (c-name "gtk_window_set_default_icon")
  (return-type "none")
  (parameters
    '("GdkPixbuf*" "icon" (in))
  )
)

(define-function window_set_default_icon_from_file
  (c-name "gtk_window_set_default_icon_from_file")
  (return-type "none")
  (parameters
    '("const-gchar*" "filename" (in))
    '("GError**" "error" (out))
  )
)

(define-function window_set_auto_startup_notification
  (c-name "gtk_window_set_auto_startup_notification")
  (return-type "none")
  (parameters
    '("gboolean" "setting" (in))
  )
)

(define-method set_modal
  (of-object "GtkWindow")
  (c-name "gtk_window_set_modal")
  (return-type "none")
  (parameters
    '("gboolean" "modal" (in))
  )
)

(define-method get_modal
  (of-object "GtkWindow")
  (c-name "gtk_window_get_modal")
  (return-type "gboolean")
)

(define-function window_list_toplevels
  (c-name "gtk_window_list_toplevels")
  (caller-owns-return #t)
  (return-type "GList[GtkWindow]")
)

(define-method add_mnemonic
  (of-object "GtkWindow")
  (c-name "gtk_window_add_mnemonic")
  (return-type "none")
  (parameters
    '("guint" "keyval" (in))
    '("GtkWidget*" "target" (in))
  )
)

(define-method remove_mnemonic
  (of-object "GtkWindow")
  (c-name "gtk_window_remove_mnemonic")
  (return-type "none")
  (parameters
    '("guint" "keyval" (in))
    '("GtkWidget*" "target" (in))
  )
)

(define-method mnemonic_activate
  (of-object "GtkWindow")
  (c-name "gtk_window_mnemonic_activate")
  (return-type "gboolean")
  (parameters
    '("guint" "keyval" (in))
    '("GdkModifierType" "modifier" (in))
  )
)

(define-method set_mnemonic_modifier
  (of-object "GtkWindow")
  (c-name "gtk_window_set_mnemonic_modifier")
  (return-type "none")
  (parameters
    '("GdkModifierType" "modifier" (in))
  )
)

(define-method get_mnemonic_modifier
  (of-object "GtkWindow")
  (c-name "gtk_window_get_mnemonic_modifier")
  (return-type "GdkModifierType")
)

(define-method activate_key
  (of-object "GtkWindow")
  (c-name "gtk_window_activate_key")
  (return-type "gboolean")
  (parameters
    '("GdkEventKey*" "event" (in))
  )
)

(define-method propagate_key_event
  (of-object "GtkWindow")
  (c-name "gtk_window_propagate_key_event")
  (return-type "gboolean")
  (parameters
    '("GdkEventKey*" "event" (in))
  )
)

(define-method present
  (of-object "GtkWindow")
  (c-name "gtk_window_present")
  (return-type "none")
)

(define-method present_with_time
  (of-object "GtkWindow")
  (c-name "gtk_window_present_with_time")
  (return-type "none")
  (parameters
    '("guint32" "timestamp" (in))
  )
)

(define-method iconify
  (of-object "GtkWindow")
  (c-name "gtk_window_iconify")
  (return-type "none")
)

(define-method deiconify
  (of-object "GtkWindow")
  (c-name "gtk_window_deiconify")
  (return-type "none")
)

(define-method stick
  (of-object "GtkWindow")
  (c-name "gtk_window_stick")
  (return-type "none")
)

(define-method unstick
  (of-object "GtkWindow")
  (c-name "gtk_window_unstick")
  (return-type "none")
)

(define-method maximize
  (of-object "GtkWindow")
  (c-name "gtk_window_maximize")
  (return-type "none")
)

(define-method unmaximize
  (of-object "GtkWindow")
  (c-name "gtk_window_unmaximize")
  (return-type "none")
)

(define-method fullscreen
  (of-object "GtkWindow")
  (c-name "gtk_window_fullscreen")
  (return-type "none")
)

(define-method unfullscreen
  (of-object "GtkWindow")
  (c-name "gtk_window_unfullscreen")
  (return-type "none")
)

(define-method set_keep_above
  (of-object "GtkWindow")
  (c-name "gtk_window_set_keep_above")
  (return-type "none")
  (parameters
    '("gboolean" "setting" (in))
  )
)

(define-method set_keep_below
  (of-object "GtkWindow")
  (c-name "gtk_window_set_keep_below")
  (return-type "none")
  (parameters
    '("gboolean" "setting" (in))
  )
)

(define-method begin_resize_drag
  (of-object "GtkWindow")
  (c-name "gtk_window_begin_resize_drag")
  (return-type "none")
  (parameters
    '("GdkWindowEdge" "edge" (in))
    '("gint" "button" (in))
    '("gint" "root_x" (in))
    '("gint" "root_y" (in))
    '("guint32" "timestamp" (in))
  )
)

(define-method begin_move_drag
  (of-object "GtkWindow")
  (c-name "gtk_window_begin_move_drag")
  (return-type "none")
  (parameters
    '("gint" "button" (in))
    '("gint" "root_x" (in))
    '("gint" "root_y" (in))
    '("guint32" "timestamp" (in))
  )
)

(define-method set_policy
  (of-object "GtkWindow")
  (c-name "gtk_window_set_policy")
  (return-type "none")
  (deprecated "use GtkWindow.set_resizable")
  (parameters
    '("gint" "allow_shrink" (in))
    '("gint" "allow_grow" (in))
    '("gint" "auto_shrink" (in))
  )
)

(define-method set_default_size
  (of-object "GtkWindow")
  (c-name "gtk_window_set_default_size")
  (return-type "none")
  (parameters
    '("gint" "width" (in))
    '("gint" "height" (in))
  )
)

(define-method get_default_size
  (of-object "GtkWindow")
  (c-name "gtk_window_get_default_size")
  (return-type "none")
  (parameters
    '("gint*" "width" (out))
    '("gint*" "height" (out))
  )
)

(define-method resize
  (of-object "GtkWindow")
  (c-name "gtk_window_resize")
  (return-type "none")
  (parameters
    '("gint" "width" (in))
    '("gint" "height" (in))
  )
)

(define-method get_size
  (of-object "GtkWindow")
  (c-name "gtk_window_get_size")
  (return-type "none")
  (parameters
    '("gint*" "width" (out))
    '("gint*" "height" (out))
  )
)

(define-method move
  (of-object "GtkWindow")
  (c-name "gtk_window_move")
  (return-type "none")
  (parameters
    '("gint" "x" (in))
    '("gint" "y" (in))
  )
)

(define-method get_position
  (of-object "GtkWindow")
  (c-name "gtk_window_get_position")
  (return-type "none")
  (parameters
    '("gint*" "root_x" (out))
    '("gint*" "root_y" (out))
  )
)

(define-method parse_geometry
  (of-object "GtkWindow")
  (c-name "gtk_window_parse_geometry")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "geometry" (in))
  )
)

(define-method reshow_with_initial_size
  (of-object "GtkWindow")
  (c-name "gtk_window_reshow_with_initial_size")
  (return-type "none")
)

(define-function gtk_window_group_get_type
  (c-name "gtk_window_group_get_type")
  (return-type "GType")
)

(define-function window_group_new
  (is-constructor-of "GtkWindowGroup")
  (c-name "gtk_window_group_new")
  (caller-owns-return #t)
  (return-type "GtkWindowGroup*")
)

(define-method add_window
  (of-object "GtkWindowGroup")
  (c-name "gtk_window_group_add_window")
  (return-type "none")
  (parameters
    '("GtkWindow*" "window" (in))
  )
)

(define-method remove_window
  (of-object "GtkWindowGroup")
  (c-name "gtk_window_group_remove_window")
  (return-type "none")
  (parameters
    '("GtkWindow*" "window" (in))
  )
)

(define-method remove_embedded_xid
  (of-object "GtkWindow")
  (c-name "gtk_window_remove_embedded_xid")
  (return-type "none")
  (parameters
    '("guint" "xid" (in))
  )
)

(define-method add_embedded_xid
  (of-object "GtkWindow")
  (c-name "gtk_window_add_embedded_xid")
  (return-type "none")
  (parameters
    '("guint" "xid" (in))
  )
)

(define-method set_focus_on_map
  (of-object "GtkWindow")
  (c-name "gtk_window_set_focus_on_map")
  (return-type "none")
  (parameters
    '("gboolean" "setting" (in))
  )
)

(define-method get_focus_on_map
  (of-object "GtkWindow")
  (c-name "gtk_window_get_focus_on_map")
  (return-type "gboolean")
)

(define-method set_icon_name
  (of-object "GtkWindow")
  (c-name "gtk_window_set_icon_name")
  (return-type "none")
  (parameters
    '("const-gchar*" "name" (in) (null-ok))
  )
)

(define-method get_icon_name
  (of-object "GtkWindow")
  (c-name "gtk_window_get_icon_name")
  (return-type "const-gchar*")
)

(define-function window_set_default_icon_name
  (c-name "gtk_window_set_default_icon_name")
  (return-type "none")
  (parameters
    '("const-gchar*" "name" (in))
  )
)

