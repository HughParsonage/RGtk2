This example shows how to add to the available stock icons and use
\code{gimage} to display them. It creats a table to select a color
from, as an alternative to a more complicated color chooser dialog. Under \pkg{gWidgetstcltk} the image
files would need to be converted to \code{gif} format, as \code{png}
format is not a natively supported image type. 

We begin by defining 16 arbitrary colors.

<<>>=
someColors <- c("black", "red", "blue", "brown",
                "green", "yellow", "purple",
                paste("grey", seq(10,90,by=10), sep=""))
@ 

This is the function that is used to create an icon file. We use some
low-level \pkg{grid} functions to draw the image to a png file.
<<>>=
require(grid)
iconDir <- tempdir(); iconSize <- 16;
makeColorIcon <- function(i) {
  filename <- paste(iconDir, "/color-", i, ".png",
                    sep="", collapse="")
  png(file=filename, width=iconSize, height=iconSize)
  grid.newpage()
  grid.draw(rectGrob(gp=gpar(fill=i)))
  dev.off()
  return(filename)
}
@ 

To add icons, we need to define the stock names and the file paths for
\code{addStockIcons}.

<<>>=
icons <- sapply(someColors, makeColorIcon)
iconNames <- paste("color-", someColors, sep="")
QT <- addStockIcons(iconNames, icons)
@ 

We use a table layout to show the 16 colors. As an illustration of
assigning a handler for a click event, we assign one that returns the
corresponding stock icon name.

<<>>=
w <- gwindow("Icon example")
f <- function(h,...) print(h$action)
tbl <- glayout(cont = w, spacing=0)
for(i in 1:4) {
  for(j in 1:4) {
    ind <- (i - 1) * 4 + j
    tbl[i,j] <- gimage(icons[(i-1)*4 + j], handler=f, 
                       action=iconNames[ind], cont=tbl)
  }
}
@ 
