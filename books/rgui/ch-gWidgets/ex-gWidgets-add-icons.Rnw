This example shows how to add to the available stock icons and use
\code{gimage} to display them. It creates a table
(Figure~\ref{fig:gWidgets-stock-icons}) to select a color from, as an
alternative to a more complicated color chooser dialog.\footnote{If
  \pkg{gWidgetstcltk} is used the image files would need to be
  converted to \code{gif} format, as \code{png} format is not a
  natively supported image type.}

\begin{figure}
  \centering
  \includegraphics[width=.5\textwidth]{fig-gWidgets-icon-example.png}
  \caption{A table of stock icons created on the fly}
  \label{fig:gWidgets-stock-icons}
\end{figure}

We begin by defining 16 arbitrary colors.

<<>>=
some_colors <- c("black", "red", "blue", "brown",
                "green", "yellow", "purple",
                paste("grey", seq.int(10,90,by = 10), sep = ""))
@ 

This is the function that is used to create an icon file. We use some
low-level \pkg{grid} functions to draw the image to a png file.
<<>>=
require(grid)
icon_dir <- tempdir(); iconSize <- 16;
make_color_icon <- function(i) {
  filename <- file.path(icon_dir, 
                        sprintf("color-%s.png", i))
  png(file = filename, width = iconSize, height = iconSize)
  grid.newpage()
  grid.draw(rectGrob(gp = gpar(fill = i)))
  dev.off()
  return(filename)
}
@ 

To add the icons, we need to define the stock names and the file paths
for \code{addStockIcons}.

<<results=hide>>=
icons <- sapply(some_colors, make_color_icon)
icon_names <- sprintf("color-%s", some_colors)
addStockIcons(icon_names, icons)
@ 

We use a table layout to show the 16 colors. As an illustration of
assigning a handler for a click event, we assign one that returns the
corresponding stock icon name.

<<>>=    
window <- gwindow("Icon example", visible=FALSE)
callback <- function(h,...) galert(h$action, parent = window)
lyt <- glayout(cont = window, spacing = 0)
for(i in 1:4) {
  for(j in 1:4) {
    ind <- (i - 1) * 4 + j
    lyt[i,j] <- gimage(icons[ind], handler = callback, 
                       action = icon_names[ind], cont = lyt)
  }
}
visible(window) <- TRUE
@ 
