%% gWidgets introduction
\SweaveOpts{keep.source=TRUE} 
<<echo=FALSE>>=
require(tcltk)
source("../booktabs.R")

noPrompt <- function() {
  options(prompt=" ")
  options(continue=" ")
}
doPrompt <- function() {
  options(prompt="> ")
  options(continue="+ ")
}
noPrompt()
noTclPrint <- function(x, ...) {
  y <- try(as.character(x))
  if(inherits(y,"try-error")) {
    cat(y)
  } else if(length(y) == 0 ||
            (length(y) == 1 && nchar(y) == 0 )) {
    return()
    invisible(x)
  }
  tcltk:::print.tclObj(x)
}
print.tclObj <- noTclPrint

@ 
%%\newcommand{\ONLYIN}[1]{[only in #1]}
\newcommand{\Event}[1]{$<$#1$>$}
\newcommand{\VirtualEvent}[1]{$<<$#1$>>$}

\XXX{add in tcl(``source''); external TCL packages}
\XXX{comment about scope -- no user data}


% makeIconTcltk(w, gifFile) {
%   if(as.character(tkwinfo("class", w)) == "Toplevel" &&
%      file.exists(giffile)) {
%     tkimage.create("photo","::icon::name", file=giffile)
%     tcl("wm","iconphoto", w, "::icon::name")
%   }
% }
\chapter{Tcl/Tk: Overview}
\label{sec:tcltk:overview}
\SweaveInput{Overview}

\chapter{Tcl/Tk: Layout and Containers}
\label{sec:tcltk:basic-containers}
\SweaveInput{BasicContainers}

\chapter{Tcl/Tk: Dialogs and Widgets}
\label{sec:tcltk:widgets}
\SweaveInput{Widgets.Rnw}

\chapter{Tcl/Tk: Text, Tree and Canvas Widgets}
\label{sec:tcltk:scrollable-widgets}
\SweaveInput{ScrollableWidgets.Rnw}


