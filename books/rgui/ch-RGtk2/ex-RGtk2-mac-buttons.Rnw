This example shows how to pack buttons into a box so that the spacing
between the similar buttons is 12 pixels, while potentially dangerous
buttons are separated from the rest by 24 pixels, as per the Apple human
interface guidelines.  

\GTK\/ provides the widget \class{GtkHButtonBox} for organizing
buttons in a manner consistent across an application. However, the
default layout modes would not yield the desired spacing. As such, we
will illustrate how to customize the spacing.  We assume that our
parent container, \code{hbox}, is a horizontal box container.
<<MacOSXstyleButton,echo=FALSE>>=
## not shown
window <- gtkWindow(show=FALSE)
window$setTitle("MAC OS X style buttons")
fg <- gtkVBox()
fg$setSizeRequest(width=800, height=-1)
window$add(fg)

hbox <- gtkHBox()
fg$packStart(hbox, padding=15)              # for size grip
@ 


\begin{figure}
  \centering
  \includegraphics[width=.85\textwidth]{ex-RGtk2-mac-buttons}
  \caption{Example using stock buttons with extra spacing added between the \code{delete} and \code{cancel} buttons.}
  \label{fig:ex-RGtk2-mac-buttons}
\end{figure}

We include standard buttons, so we use the stock names and icons.
<<StockButtons>>=
ok <- gtkButton(stock.id="gtk-ok")
cancel <- gtkButton(stock.id="gtk-cancel")
delete <- gtkButton(stock.id="gtk-delete")
@ 

We specify the padding as we pack the widgets into the box, from right
to left, with \method{packEnd}{GtkBox}:
<<macButtonPack>>=
hbox$packEnd(ok, padding = 0)
hbox$packEnd(cancel, padding = 12)
hbox$packEnd(delete, padding = 12)
hbox$packEnd(gtkLabel(""), expand = TRUE, fill = TRUE) # a spring
@ 
%
The padding occurs to the left and right of the child.  The \code{ok}
button is given no padding. The \code{cancel} button is packed with 12
pixels of spacing, which separates it from the \code{ok}
button. Recognizing the \code{delete} button as potentially
irreversible, we add 12 pixels of separation between it and the
\code{cancel} button, for a total of 24 pixels. The blank label pushes
the buttons against the right side of the box.~\ilayout{springs}  We instruct the
\code{ok} button to grab focus, so that it becomes the default
button:
<<>>=
ok$grabFocus()
@ 

<<echo=FALSE>>=
## not shown
window$showAll()
@ 
<<gtkHButtonBoxExample, echo=FALSE>>=
## not shown
## Had we only wanted to use a button box
button_box <- gtkHButtonBox()
fg$packStart(button_box, padding=15)              # for size grip

button_box$add(gtkButton(stock.id="gtk-delete"))
button_box$add(gtkButton(stock.id="gtk-cancel"))
button_box$add(gtkButton(stock.id="gtk-ok"))
@ 





