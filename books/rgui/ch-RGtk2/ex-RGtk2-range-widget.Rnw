This example shows how to make a range widget that combines both the
slider and spinbutton to choose a single number. Such a widget is
popular, as the slider is better at large changes and the spin button
better at finer changes. In \GTK\/ we use the same
\class{GtkAdjustment} model, so changes to one widget propogate
without effort to the other.

<<echo=FALSE>>=
## make a range widget combining both a slider and spinbutton to choose a number
library(RGtk2)
@ 

Were this written as a function, an \R\/ user might expect the
arguments to match those of \code{seq}:
<<>>=
from <- 0; to <- 100; by <- 1
@ 

The slider is drawn without a value, as the value is already displayed
by the spin button. The call to \constructor{gtkHScale} implicitly
creates an adjustment for the slider. The spin button is created with
the same adjustment.
<<>>=
slider <- gtkHScale(min=from, max=to, step=by)
slider['draw-value'] <- FALSE
adjustment <- slider$getAdjustment()
spinbutton <- gtkSpinButton(adjustment = adjustment)
@
%
Our layout places the two widgets in a horizontal box container with
the slider set to expand into the available space, but not the
spinbutton.
<<>>=
g <- gtkHBox()
g$packStart(slider, expand=TRUE, fill=TRUE, padding=5)
g$packStart(spinbutton, expand=FALSE, padding=5)
@ 


<<echo=FALSE>>=
w <- gtkWindow(show=FALSE)
w['title'] <- "Example of a range widget"
w$setSizeRequest(width=200, height=-1)
w$add(g)
w$show()
@ 