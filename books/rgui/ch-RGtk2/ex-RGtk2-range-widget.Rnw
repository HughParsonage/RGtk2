This example shows how to make a range widget that combines both the
slider and spinbutton to choose a single number
(Figure~\ref{fig:RGtk2-range-widget}). Such a widget is useful, as the
slider is better at large changes and the spin button better at finer
changes. In \GTK\/ we use the same \class{GtkAdjustment} model, so
changes to one widget propagate without effort to the other.

\begin{figure}
  \centering
  \includegraphics[width=.5\textwidth]{fig-RGtk2-range-widget.png}
  \caption{A range widget with coordinated slider and spin box sharing the same \class{GtkAdjustment} instance}
  \label{fig:RGtk2-range-widget}
\end{figure}

<<echo=FALSE>>=
## make a range widget combining both a slider and spinbutton to choose a number
library(RGtk2)
@ 

We name our scale parameters according to the corresponding arguments
to the \function{seq} function:
<<>>=
from <- 0; to <- 100; by <- 1
@ 

The slider is drawn without a value, as the value is already displayed
by the spin button. The call to \constructor{gtkHScale} implicitly
creates an adjustment for the slider. The spin button is then created
with the same adjustment.
<<>>=
slider <- gtkHScale(min = from, max = to, step = by)
slider['draw-value'] <- FALSE
adjustment <- slider$getAdjustment()
spinbutton <- gtkSpinButton(adjustment = adjustment)
@
%
Our layout places the two widgets in a horizontal box container with
the slider, but not the spin button, set to expand into the available
space.
<<>>=
hbox <- gtkHBox()
hbox$packStart(slider, expand = TRUE, fill = TRUE, padding = 5)
hbox$packStart(spinbutton, expand = FALSE, padding = 5)
@ 


<<echo=FALSE>>=
w <- gtkWindow(show=FALSE)
w['title'] <- "Example of a range widget"
w$setSizeRequest(width=200, height=-1)
w$add(hbox)
w$show()
@ 
