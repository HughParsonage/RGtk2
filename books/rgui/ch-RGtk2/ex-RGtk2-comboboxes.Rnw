<<ComboBoxExample, echo=FALSE>>=
## An example of two comboboxes where 1 updates the other
require(RGtk2)
data(mtcars); library(MASS); data(Cars93) # need some data frames
@ 
%
The goal of this example is to populate a combo box of variables
whenever a data frame is selected in another. We use two convenience
functions from the \pkg{ProgGUIInR} package to find the possible data
frames, and for a data frame to find its variables.
<<echo=FALSE>>=
library(ProgGUIinR)                     # for avail_dfs, find_vars
#source("~/GUI/ProgGUIInR/R/misc.R")
@ 

We create the two combo boxes and the enclosing window:
<<Widgets>>=
window <- gtkWindow(show = FALSE)
window$setTitle("gtkComboBox example")

df_combo <- gtkComboBoxNewText()
var_combo <- gtkComboBoxNewText()
@ 
%

Our layout uses boxes. To add a twist, we will hide our variable combo box
until after a data frame has been initially selected.
<<Layout>>=
vbox <- gtkVBox(); window$add(vbox)
#
vbox1 <- gtkHBox(); vbox$packStart(vbox1)
vbox1$packStart(gtkLabel("Data frames:"))
vbox1$packStart(df_combo)
#
vbox2 <- gtkHBox(); vbox$packStart(vbox2)
vbox2$packStart(gtkLabel("Variable:"))
vbox2$packStart(var_combo)
vbox2$hide()
@
%

Finally, we configure the combo boxes. When a data frame is selected, we
first clear out the variable combo box and then populate it:
<<configureComboBoxes, results=hide>>=
sapply(avail_dfs(), df_combo$appendText)
df_combo$setActive(-1)
#
gSignalConnect(df_combo, "changed", function(df_combo, ...) {
  var_combo$getModel()$clear()
  sapply(find_vars(df_combo$getActiveText()),  
         var_combo$appendText)
  vbox2$show()
})
@ 
%

<<echo=FALSE>>=
## show window
window$show()
@ 

