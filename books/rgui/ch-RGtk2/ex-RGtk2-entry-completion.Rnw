This example illustrates the steps to add completion to a text entry.
<<echo=FALSE>>=
require(RGtk2)
@ 


The two basic widgets are defined as follows:
<<AppendWords>>=
entry <- gtkEntry()
completion <- gtkEntryCompletion()
entry$setCompletion(completion)
@ 

We will use an \code{RGtkDataFrame} instance for our completion model,
taking a convenient list of names for our example.  We set the model
and text column index on the completion object and then set some
properties to customize how the completion is handled.
<<SetCompletion>>=
store <- rGtkDataFrame(state.name)
completion$setModel(store)
completion$setTextColumn(0)
completion['inline-completion'] <- TRUE
completion['popup-single-match'] <- FALSE
@ 

We wish for the text search to match against any part of a string, not
only the beginning, so define our own match function. We get the
string from the entry widget, not the passed value, as that has been
standardized to lower case.
<<SetMatchFunc, results=hide>>=
matchAnywhere <- function(comp, str, iter, user.data) {
  model <- comp$getModel()
  rowVal <- model$getValue(iter, 0)$value   # column 0 in model
  
  str <- comp$getEntry()$getText()      # case sensitive
  grepl(str, rowVal)
}
completion$setMatchFunc(matchAnywhere)
@ 

<<notShown, echo=FALSE>>=
## Our basic GUI is basic:
w <- gtkWindow(show=FALSE)
w$setTitle("Test of entry with completion")
w$add(entry)
w$showAll()
@ 



