This example illustrates the steps to add completion to a text entry.
<<echo=FALSE>>=
require(RGtk2)
@ 


We create an entry with a completion database:
<<AppendWords>>=
entry <- gtkEntry()
completion <- gtkEntryCompletion()
entry$setCompletion(completion)
@ 

We will use an \code{RGtkDataFrame} instance for our completion model,
taking a convenient list of names for our example.  We set the model
and text column index on the completion object and then set some
properties to customize how the completion is handled:
<<SetCompletion>>=
model <- rGtkDataFrame(state.name)
completion$setModel(model)
completion$setTextColumn(0)
completion['inline-completion'] <- TRUE
completion['popup-single-match'] <- FALSE
@ 

We wish for the text search to match against any part of a string, not
only the beginning, so we define our own match function:
<<SetMatchFunc, results=hide>>=
matchAnywhere <- function(completion, key, iter, user.data) {
  model <- completion$getModel()
  row_value <- model$getValue(iter, 0)$value
  key <- comp$getEntry()$getText() # for case sensitivity
  grepl(str, row_value)
}
completion$setMatchFunc(matchAnywhere)
@ 
%
We get the string from the entry widget, not the passed value, as the
latter has been standardized to lower case.

<<notShown, echo=FALSE>>=
## Our basic GUI is basic:
w <- gtkWindow(show=FALSE)
w$setTitle("Test of entry with completion")
w$add(entry)
w$showAll()
@ 



