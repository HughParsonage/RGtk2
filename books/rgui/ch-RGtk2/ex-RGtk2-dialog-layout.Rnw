This example shows how to layout a form in a dialog with some
attention paid to how the widgets are aligned and how they respond to
resizing of the window.
<<echo=FALSE>>=
## layout a basic dialog -- center align
library(RGtk2)
@ 

\begin{figure}
  \centering
  \includegraphics[width=.5\textwidth]{ex-RGtk2-dialog-layout}
  \caption{A basic dialog using a \code{gtkTable} container for layout.}
  \label{fig:RGtk2-dialog-layout}
\end{figure}


Our form GUI is a table with 3 rows and 2 columns:
<<>>=
w <- gtkWindow(show=FALSE)
w['border-width'] <- 14
w$setTitle("GtkTable Example")
tbl <- gtkTable(rows=3, columns=2, homogeneous=FALSE)
w$add(tbl)
@ 

We construct the widgets that will be placed in the form:
<<results=hide>>=
sizeLabel <- gtkLabel("Sample size:")
sizeCombo <- gtkComboBoxNewText()
sapply(c(5, 10, 15, 30), sizeCombo$appendText)

diagLabel <- gtkLabel("Diagnostic:")
diagRadios <- gtkVBox()
rb <- list()
rb$t <- gtkRadioButton(label="t-statistic")
rb$mean <- gtkRadioButton(rb, label="mean")
rb$median <- gtkRadioButton(rb, label="median")
sapply(rb, diagRadios$packStart)
submitBox <- gtkVBox()
submitBox$packEnd(gtkButton("Run simulation"), expand = FALSE)
@ 

This goal of the layout is to correctly align the labels and input
widgets, while making efficient use of space.  The following
attaches the combo box, radio buttons and their labels to the table:
<<>>=
tbl$setColSpacing(0, 5)
tbl$attach(sizeLabel, left.attach=0,1, top.attach=0,1, 
           xoptions = c("expand", "fill"), yoptions="")
sizeLabel["xalign"] <- 1
tbl$attach(sizeCombo, left.attach=1,2, top.attach=0,1, 
           xoptions="fill", yoptions="")
#
tbl$attach(diagLabel, left.attach=0,1, top.attach=1,2, 
           xoptions = c("expand", "fill"), 
           yoptions=c("expand", "fill"))
diagLabel["xalign"] <- 1; diagLabel["yalign"] <- 0
#
radioAlign <- gtkAlignment(xalign = 0)
radioAlign$add(diagRadios)
tbl$attach(radioAlign, left.attach=1,2, top.attach=1,2, 
           xoptions=c("expand", "fill"), yoptions = "")
#
tbl$attach(submitBox, left.attach=1,2, top.attach=2,3, 
           xoptions="", yoptions=c("expand", "fill"))
@ 
%
The labels are allowed to expand and fill in the $x$ direction,
because correct alignment, to the right, requires them to have the
same size. The combo box is instructed to fill its space, as it would
otherwise be undesirably small, due to its short menu items.  giving
it a reasonable size and alignment. We have aligned the diagnostic
label to the top of its cell; otherwise, it would have been in the
middle. The radio buttons are left aligned, up against the label.

<<echo=false>>=
w$show()                             
@ 
